android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    void bumpBackStackNesting(int) -> a
    void run() -> run
    void popFromBackStack(boolean) -> a
    java.lang.String getName() -> a
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> N
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> c
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> d
    void onResume() -> e
    void onSaveInstanceState(android.os.Bundle) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> f
    void onStop() -> g
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> h
    void onDestroy() -> i
    void initState() -> j
    void onDetach() -> k
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> l
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> m
    void performStop() -> n
    void performReallyStop() -> o
    void performDestroyView() -> p
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.g:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.h:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.i:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.j:
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.k:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.l:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    boolean executePendingTransactions() -> a
    boolean popBackStackImmediate() -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> c
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> r
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> e
    void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> f
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> g
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> h
    void dispatchCreate() -> i
    void dispatchActivityCreated() -> j
    void dispatchStart() -> k
    void dispatchResume() -> l
    void dispatchPause() -> m
    void dispatchStop() -> n
    void dispatchReallyStop() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.m:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.p:
android.support.v4.app.LoaderManager -> android.support.v4.app.q:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.r:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.s:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.t:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.u:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.v:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.w:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    android.app.Notification mNotification -> j
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> b
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> b
    void setFlag(int,boolean) -> a
    android.app.Notification getNotification() -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.x:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.y:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.z:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.aa:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.w:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.x:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.y:
    long getFrameTime() -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.z:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.aa:
    void postInvalidateOnAnimation(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    int mScrollState -> Z
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> g
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$300() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ab:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ac:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ad:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ae:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.af:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ag:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ah:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ai:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aj:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] $VALUES -> $VALUES
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    com.google.zxing.DecodeHintType[] $VALUES -> $VALUES
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType PDF417_COMPACT -> PDF417_COMPACT
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> PDF417_COMPACTION
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> PDF417_DIMENSIONS
    com.google.zxing.EncodeHintType[] $VALUES -> $VALUES
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Map) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.MultiFormatWriter$1 -> com.google.zxing.MultiFormatWriter$1:
    int[] $SwitchMap$com$google$zxing$BarcodeFormat -> $SwitchMap$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Map getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Map) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.ResultMetadataType[] $VALUES -> $VALUES
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    int getNbLayers() -> getNbLayers
    int getNbDatablocks() -> getNbDatablocks
    boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    int[] NB_BITS_COMPACT -> NB_BITS_COMPACT
    int[] NB_BITS -> NB_BITS
    int[] NB_DATABLOCK_COMPACT -> NB_DATABLOCK_COMPACT
    int[] NB_DATABLOCK -> NB_DATABLOCK
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    int numCodewords -> numCodewords
    int codewordSize -> codewordSize
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    int invertedBitCount -> invertedBitCount
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    java.lang.String getEncodedData(boolean[]) -> getEncodedData
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    boolean[] correctBits(boolean[]) -> correctBits
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    com.google.zxing.common.BitMatrix removeDashedLines(com.google.zxing.common.BitMatrix) -> removeDashedLines
    int readCode(boolean[],int,int) -> readCode
com.google.zxing.aztec.decoder.Decoder$1 -> com.google.zxing.aztec.decoder.Decoder$1:
    int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table -> $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES -> $VALUES
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    void extractParameters(com.google.zxing.aztec.detector.Detector$Point[]) -> extractParameters
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.aztec.detector.Detector$Point[]) -> getMatrixCornerPoints
    void correctParameterData(boolean[],boolean) -> correctParameterData
    com.google.zxing.aztec.detector.Detector$Point[] getBullEyeCornerPoints(com.google.zxing.aztec.detector.Detector$Point) -> getBullEyeCornerPoints
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    void getParameters(boolean[]) -> getParameters
    boolean[] sampleLine(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,int) -> sampleLine
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    boolean isValid(int,int) -> isValid
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
com.google.zxing.aztec.detector.Detector$1 -> com.google.zxing.aztec.detector.Detector$1:
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String url -> url
    java.lang.String[] getNames() -> getNames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getPhoneTypes() -> getPhoneTypes
    java.lang.String[] getEmails() -> getEmails
    java.lang.String[] getEmailTypes() -> getEmailTypes
    java.lang.String getInstantMessenger() -> getInstantMessenger
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String[] getAddressTypes() -> getAddressTypes
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String getURL() -> getURL
    java.lang.String getBirthday() -> getBirthday
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.lang.String summary -> summary
    java.lang.String start -> start
    java.lang.String end -> end
    java.lang.String location -> location
    java.lang.String attendee -> attendee
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String getSummary() -> getSummary
    java.lang.String getStart() -> getStart
    java.lang.String getEnd() -> getEnd
    java.lang.String getLocation() -> getLocation
    java.lang.String getAttendee() -> getAttendee
    java.lang.String getDescription() -> getDescription
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getDisplayResult() -> getDisplayResult
    void validateDate(java.lang.CharSequence) -> validateDate
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String mailtoURI -> mailtoURI
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Map getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType[] $VALUES -> $VALUES
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern ALPHANUM -> ALPHANUM
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    java.lang.String BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String getMassagedText(com.google.zxing.Result) -> getMassagedText
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    boolean isSubstringOfAlphaNumeric(java.lang.CharSequence,int,int) -> isSubstringOfAlphaNumeric
    java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.lang.String ALPHANUM_PART -> ALPHANUM_PART
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.CharSequence) -> isBasicallyValidURI
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> UNESCAPED_SEMICOLONS
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    java.lang.String[] toTypes(java.util.Collection) -> toTypes
    boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    void formatNames(java.lang.Iterable) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    int getNextSet(int) -> getNextSet
    int getNextUnset(int) -> getNextUnset
    void setBulk(int,int) -> setBulk
    void setRange(int,int) -> setRange
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    void setRow(int,com.google.zxing.common.BitArray) -> setRow
    int[] getEnclosingRectangle() -> getEnclosingRectangle
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int[] getBottomRightOnBit() -> getBottomRightOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int getByteOffset() -> getByteOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] $VALUES -> $VALUES
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.List getByteSegments() -> getByteSegments
    java.lang.String getECLevel() -> getECLevel
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] EMPTY -> EMPTY
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    int MIN_DYNAMIC_RANGE -> MIN_DYNAMIC_RANGE
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    int cap(int,int,int) -> cap
    void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    int round(float) -> round
    float distance(float,float,float,float) -> distance
    float distance(int,int,int,int) -> distance
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int INITIALIZATION_THRESHOLD -> INITIALIZATION_THRESHOLD
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    boolean initialized -> initialized
    void initialize() -> initialize
    void checkInit() -> checkInit
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[],boolean) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    int unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1 -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$1 -> com.google.zxing.datamatrix.decoder.Version$1:
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$1 -> com.google.zxing.datamatrix.detector.Detector$1:
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    com.google.zxing.maxicode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    int getBit(int,byte[]) -> getBit
    int getInt(byte[],byte[]) -> getInt
    int getCountry(byte[]) -> getCountry
    int getServiceClass(byte[]) -> getServiceClass
    int getPostCode2Length(byte[]) -> getPostCode2Length
    int getPostCode2(byte[]) -> getPostCode2
    java.lang.String getPostCode3(byte[]) -> getPostCode3
    java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1:
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    int MAX_ACCEPTABLE -> MAX_ACCEPTABLE
    int PADDING -> PADDING
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int MIN_CHARACTER_LENGTH -> MIN_CHARACTER_LENGTH
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    int counterLength -> counterLength
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void validatePattern(int) -> validatePattern
    void setCounters(com.google.zxing.common.BitArray) -> setCounters
    void counterAppend(int) -> counterAppend
    int findStartPattern() -> findStartPattern
    boolean arrayContains(char[],char) -> arrayContains
    int toNarrowWidePattern(int) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
    boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    void checkChecksums(java.lang.CharSequence) -> checkChecksums
    void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    int sidesMargin -> sidesMargin
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(byte[],int,int) -> renderResult
    int appendPattern(byte[],int,int[],int) -> appendPattern
    byte[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> twoSupport
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> fiveSupport
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    int[] getDataCharacterCounters() -> getDataCharacterCounters
    float[] getOddRoundingErrors() -> getOddRoundingErrors
    float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    int[] getOddCounts() -> getOddCounts
    int[] getEvenCounts() -> getEvenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int[] getRSSwidths(int,int,int,int,boolean) -> getRSSwidths
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
    int[] elements(int[],int,int) -> elements
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int LONGEST_SEQUENCE_SIZE -> LONGEST_SEQUENCE_SIZE
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    int[] startEnd -> startEnd
    int[] currentSequence -> currentSequence
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    com.google.zxing.Result constructResult(java.util.List) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    boolean checkPairSequence(java.util.List,com.google.zxing.oned.rss.FinderPattern) -> checkPairSequence
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    com.google.zxing.common.BitArray getInformation() -> getInformation
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void incrementPosition(int) -> incrementPosition
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES -> $VALUES
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.pdf417.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
    int findPatternStart(int,int,com.google.zxing.common.BitMatrix) -> findPatternStart
    int findPatternEnd(int,int,com.google.zxing.common.BitMatrix) -> findPatternEnd
com.google.zxing.pdf417.decoder.BitMatrixParser -> com.google.zxing.pdf417.decoder.BitMatrixParser:
    int[] NO_ERRORS -> NO_ERRORS
    int MAX_ROW_DIFFERENCE -> MAX_ROW_DIFFERENCE
    int MAX_ROWS -> MAX_ROWS
    int MAX_CW_CAPACITY -> MAX_CW_CAPACITY
    int MODULES_IN_SYMBOL -> MODULES_IN_SYMBOL
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    int rows -> rows
    int leftColumnECData -> leftColumnECData
    int rightColumnECData -> rightColumnECData
    int eraseCount -> eraseCount
    int[] erasures -> erasures
    int ecLevel -> ecLevel
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int[] readCodewords() -> readCodewords
    int[] trimArray(int[],int) -> trimArray
    int processRow(int[],int,int,int[],int) -> processRow
    int getCodeword(long) -> getCodeword
    int findCodewordIndex(long) -> findCodewordIndex
    int[] getErasures() -> getErasures
    int getECLevel() -> getECLevel
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.math.BigInteger[] EXP900 -> EXP900
    com.google.zxing.common.DecoderResult decode(int[]) -> decode
    int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    int byteCompaction(int,int[],int,java.lang.StringBuilder) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1 -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.Decoder -> com.google.zxing.pdf417.decoder.Decoder:
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> errorCorrection
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    void correctErrors(int[],int[],int) -> correctErrors
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    void decode(int[],int,int[]) -> decode
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> PDF417_GF
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> zero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> one
    int modulus -> modulus
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    int add(int,int) -> add
    int subtract(int,int) -> subtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] divide(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int SKEW_THRESHOLD -> SKEW_THRESHOLD
    int[] START_PATTERN -> START_PATTERN
    int[] START_PATTERN_REVERSE -> START_PATTERN_REVERSE
    int[] STOP_PATTERN -> STOP_PATTERN
    int[] STOP_PATTERN_REVERSE -> STOP_PATTERN_REVERSE
    com.google.zxing.BinaryBitmap image -> image
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,boolean) -> findVertices
    com.google.zxing.ResultPoint[] findVertices180(com.google.zxing.common.BitMatrix,boolean) -> findVertices180
    void correctCodeWordVertices(com.google.zxing.ResultPoint[],boolean) -> correctCodeWordVertices
    float computeModuleWidth(com.google.zxing.ResultPoint[]) -> computeModuleWidth
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    int computeYDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeYDimension
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    void set(int,int,byte) -> set
    void setMatrix(int,int,boolean) -> setMatrix
    void startRow() -> startRow
    com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    byte[][] getMatrix() -> getMatrix
    byte[][] getScaledMatrix(int) -> getScaledMatrix
    byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    void set(int,byte) -> set
    void set(int,boolean) -> set
    void addBar(boolean,int) -> addBar
    byte[] getRow() -> getRow
    byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] $VALUES -> $VALUES
    com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.Dimensions -> com.google.zxing.pdf417.encoder.Dimensions:
    int minCols -> minCols
    int maxCols -> maxCols
    int minRows -> minRows
    int maxRows -> maxRows
    int getMinCols() -> getMinCols
    int getMaxCols() -> getMaxCols
    int getMinRows() -> getMinRows
    int getMaxRows() -> getMaxRows
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    int getNumberOfRows(int,int,int) -> getNumberOfRows
    int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    int getNumberOfDataCodewords(int,int,int) -> getNumberOfDataCodewords
    void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    int[] determineDimensions(int,int) -> determineDimensions
    void setDimensions(int,int,int,int) -> setDimensions
    void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    void setCompact(boolean) -> setCompact
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    byte[] getBytesForMessage(java.lang.String) -> getBytesForMessage
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction) -> encodeHighLevel
    int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    boolean isDigit(char) -> isDigit
    boolean isAlphaUpper(char) -> isAlphaUpper
    boolean isAlphaLower(char) -> isAlphaLower
    boolean isMixed(char) -> isMixed
    boolean isPunctuation(char) -> isPunctuation
    boolean isText(char) -> isText
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
com.google.zxing.pdf417.encoder.PDF417Writer -> com.google.zxing.pdf417.encoder.PDF417Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,boolean,int,int,int,int,int,int,com.google.zxing.pdf417.encoder.Compaction) -> encode
    com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int) -> bitMatrixFromEncoder
    com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][]) -> bitMatrixFrombitArray
    byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    void incrementCount() -> incrementCount
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.List getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$1 -> com.google.zxing.qrcode.detector.FinderPatternFinder$1:
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.encoder.QRCode) -> encode
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map,com.google.zxing.qrcode.encoder.QRCode) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    void initQRCode(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.qrcode.encoder.QRCode) -> initQRCode
    int getTotalInputBytes(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode) -> getTotalInputBytes
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    void interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int,com.google.zxing.common.BitArray) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,int,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
com.google.zxing.qrcode.encoder.Encoder$1 -> com.google.zxing.qrcode.encoder.Encoder$1:
    int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode -> $SwitchMap$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] HORIZONTAL_SEPARATION_PATTERN -> HORIZONTAL_SEPARATION_PATTERN
    int[][] VERTICAL_SEPARATION_PATTERN -> VERTICAL_SEPARATION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(int,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    boolean isValidValue(int) -> isValidValue
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    int version -> version
    int matrixWidth -> matrixWidth
    int maskPattern -> maskPattern
    int numTotalBytes -> numTotalBytes
    int numDataBytes -> numDataBytes
    int numECBytes -> numECBytes
    int numRSBlocks -> numRSBlocks
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    int getVersion() -> getVersion
    int getMatrixWidth() -> getMatrixWidth
    int getMaskPattern() -> getMaskPattern
    int getNumTotalBytes() -> getNumTotalBytes
    int getNumDataBytes() -> getNumDataBytes
    int getNumECBytes() -> getNumECBytes
    int getNumRSBlocks() -> getNumRSBlocks
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    int at(int,int) -> at
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(int) -> setVersion
    void setMatrixWidth(int) -> setMatrixWidth
    void setMaskPattern(int) -> setMaskPattern
    void setNumTotalBytes(int) -> setNumTotalBytes
    void setNumDataBytes(int) -> setNumDataBytes
    void setNumECBytes(int) -> setNumECBytes
    void setNumRSBlocks(int) -> setNumRSBlocks
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.hik.CASClient.CASClient -> com.hik.CASClient.CASClient:
    int CLIENT_MAXNUM -> CLIENT_MAXNUM
    int NET_DVR_SYSHEAD -> NET_DVR_SYSHEAD
    int NET_DVR_STREAMDATA -> NET_DVR_STREAMDATA
    int NET_DVR_AUDIOSTREAMDATA -> NET_DVR_AUDIOSTREAMDATA
    int NET_DVR_PLAYBACK_OVER -> NET_DVR_PLAYBACK_OVER
    int NET_PLAYBACK_REALOVER -> NET_PLAYBACK_REALOVER
    int AUDIO_NOTIFY -> AUDIO_NOTIFY
    int STREAM_NOTIFY -> STREAM_NOTIFY
    int VOICETALK_BUTTON_NORMAL_CMD -> VOICETALK_BUTTON_NORMAL_CMD
    int VOICETALK_BUTTON_PRESS_CMD -> VOICETALK_BUTTON_PRESS_CMD
    int VOICETALK_BUTTON_UNPRESS_CMD -> VOICETALK_BUTTON_UNPRESS_CMD
    int AUDIO_CODE_TYPE_G722_1 -> AUDIO_CODE_TYPE_G722_1
    int AUDIO_CODE_TYPE_G711_MU -> AUDIO_CODE_TYPE_G711_MU
    int AUDIO_CODE_TYPE_G711_A -> AUDIO_CODE_TYPE_G711_A
    int AUDIO_CODE_TYPE_G723 -> AUDIO_CODE_TYPE_G723
    int AUDIO_CODE_TYPE_MP1L2 -> AUDIO_CODE_TYPE_MP1L2
    int AUDIO_CODE_TYPE_MP2L2 -> AUDIO_CODE_TYPE_MP2L2
    int AUDIO_CODE_TYPE_G726 -> AUDIO_CODE_TYPE_G726
    int AUDIO_CODE_TYPE_AAC -> AUDIO_CODE_TYPE_AAC
    int AUDIO_CODE_TYPE_RAW -> AUDIO_CODE_TYPE_RAW
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    com.hik.CASClient.CASClient getInstance() -> getInstance
    boolean initLib(android.content.Context) -> initLib
    boolean initCrashReport() -> initCrashReport
    boolean setLogPrint(boolean,boolean) -> setLogPrint
    boolean finiLib() -> finiLib
    int getLastError() -> getLastError
    int createSession(com.hik.CASClient.CASClientCallback) -> createSession
    boolean destroySession(int) -> destroySession
    boolean start(int,com.hik.CASClient.ST_STREAM_INFO,int) -> start
    boolean stop(int) -> stop
    boolean playbackStart(int,com.hik.CASClient.ST_STREAM_INFO,java.lang.String,java.lang.String) -> playbackStart
    boolean playbackPause(int) -> playbackPause
    boolean playbackResume(int) -> playbackResume
    boolean playbackStop(int) -> playbackStop
    boolean playbackChangeRate(int,int) -> playbackChangeRate
    boolean voiceTalkStart(int,com.hik.CASClient.ST_STREAM_INFO,int) -> voiceTalkStart
    int voiceTalkStartEx(int,com.hik.CASClient.ST_STREAM_INFO,int,int) -> voiceTalkStartEx
    boolean voiceTalkStop(int) -> voiceTalkStop
    boolean voiceTalkInputData(int,byte[],int) -> voiceTalkInputData
    boolean voiceTalkInputDataEx(int,byte[],int,int) -> voiceTalkInputDataEx
    boolean getDevOperationCode(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,java.lang.String[],int,java.util.List) -> getDevOperationCode
    boolean getDevPermanentKey(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_DEV_PERMANENT_KEY) -> getDevPermanentKey
    boolean formatDisk(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,com.hik.CASClient.ST_DEV_INFO,int,boolean) -> formatDisk
    boolean getDevStorageStatus(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,java.util.List,boolean) -> getDevStorageStatus
    int serchRecordFile(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,com.hik.CASClient.ST_DEV_INFO,int,int,int,java.lang.String,java.lang.String,int,java.util.List,boolean) -> serchRecordFile
    boolean queryBasicInfo(com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_DEV_BASIC_INFO) -> queryBasicInfo
    boolean getDevFtpInfo(com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_DEV_FTP_INFO) -> getDevFtpInfo
    boolean devDefence(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_DEV_DEFENCE_INFO[],int,boolean) -> devDefence
    boolean devUpgrade(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,boolean) -> devUpgrade
    boolean getPlayInfo(java.util.List) -> getPlayInfo
    boolean cloudReplayStart(int,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_CLOUDREPLAY_INFO) -> cloudReplayStart
    boolean playBackSeek(int,java.lang.String) -> playBackSeek
    boolean getDevOperationCodeEx(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,java.lang.String,java.lang.String[],int,java.util.List) -> getDevOperationCodeEx
    boolean cloudUploadStart(int,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_CLOUDFILE_INFO) -> cloudUploadStart
    boolean cloudInputData(int,byte[],int) -> cloudInputData
    boolean cloudUploadStop(int) -> cloudUploadStop
    boolean cloudDownloadStart(int,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_CLOUDREPLAY_INFO) -> cloudDownloadStart
    boolean cloudDownloadStop(int) -> cloudDownloadStop
    int serchRecordFileEx(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_SEARCH_RECORD_INFO,int,java.util.List,boolean) -> serchRecordFileEx
    java.lang.String serchRecordByMounth(com.hik.CASClient.ST_SERVER_INFO,java.lang.String,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_SEARCH_RECORD_INFO,boolean) -> serchRecordByMounth
    boolean setAlarmSound(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_DEV_ALARM_SOUND_INFO,boolean) -> setAlarmSound
    boolean setGlintLight(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_CHAN_GLINTLIGHT_INFO[],int,boolean) -> setGlintLight
    boolean queryGlintLight(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,java.util.List,boolean) -> queryGlintLight
    boolean getLastDetailError(com.hik.CASClient.LastDetailError) -> getLastDetailError
    boolean collectDevLogInfo(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_COLLECTLOG_INFO,boolean) -> collectDevLogInfo
    boolean ptzCtrl(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_PTZ_INFO,boolean) -> ptzCtrl
    boolean ptzPresetCtrl(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_PTZ_INFO,boolean) -> ptzPresetCtrl
    boolean capturePicture(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_CAPTURE_PIC_INFO,byte[],int,boolean) -> capturePicture
    boolean displayCtrl(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,com.hik.CASClient.ST_DISPLAY_INFO,boolean) -> displayCtrl
    boolean addDetector(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> addDetector
    boolean delDetector(java.lang.String,com.hik.CASClient.ST_SERVER_INFO,com.hik.CASClient.ST_DEV_INFO,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,boolean) -> delDetector
com.hik.CASClient.CASClientCallback -> com.hik.CASClient.CASClientCallback:
    void onDataCallBack(int,int,int,byte[],int) -> onDataCallBack
    void onMessageCallBack(int,int,int,int,int,int) -> onMessageCallBack
com.hik.CASClient.ENCRYPT_TYPE -> com.hik.CASClient.ENCRYPT_TYPE:
    int NO_ENCRYPT -> NO_ENCRYPT
    int AES128 -> AES128
    int AES192 -> AES192
    int AES256 -> AES256
com.hik.CASClient.EN_AUDIO_NOTIFY_TYPE -> com.hik.CASClient.EN_AUDIO_NOTIFY_TYPE:
    int PRIVACY_ON -> PRIVACY_ON
    int AUDIO_SOCKET_ERROR -> AUDIO_SOCKET_ERROR
    int AUDIO_RECV_ERROR -> AUDIO_RECV_ERROR
    int AUDIO_SEND_ERROR -> AUDIO_SEND_ERROR
com.hik.CASClient.EN_STEP_TYPE -> com.hik.CASClient.EN_STEP_TYPE:
    int QUERY_MAP_SOCKET_V17 -> QUERY_MAP_SOCKET_V17
    int SETUP_V17 -> SETUP_V17
    int PLAY_V17 -> PLAY_V17
    int KEEPALIVE_V17 -> KEEPALIVE_V17
    int STREAM_DATA_UDP_V17 -> STREAM_DATA_UDP_V17
    int REALTIME_TCP_V17 -> REALTIME_TCP_V17
    int PLAYBACK_TCP_V17 -> PLAYBACK_TCP_V17
    int STREAM_DATA_TCP_V17 -> STREAM_DATA_TCP_V17
com.hik.CASClient.EN_STREAM_NOTIFY_TYPE -> com.hik.CASClient.EN_STREAM_NOTIFY_TYPE:
    int STREAM_SOCKET_ERROR -> STREAM_SOCKET_ERROR
    int STREAM_RECV_ERROR -> STREAM_RECV_ERROR
    int STREAM_SEND_ERROR -> STREAM_SEND_ERROR
com.hik.CASClient.LastDetailError -> com.hik.CASClient.LastDetailError:
    int error_id -> error_id
    int ssl_error -> ssl_error
    int sys_error -> sys_error
com.hik.CASClient.ST_CAPTURE_PIC_INFO -> com.hik.CASClient.ST_CAPTURE_PIC_INFO:
    int iChannel -> iChannel
    java.lang.String szType -> szType
    int iResolution -> iResolution
    int iQuality -> iQuality
    boolean bEncrypted -> bEncrypted
    java.lang.String szPmsAddr -> szPmsAddr
    int iPmsPort -> iPmsPort
com.hik.CASClient.ST_CHAN_GLINTLIGHT_INFO -> com.hik.CASClient.ST_CHAN_GLINTLIGHT_INFO:
    int iChannelIndex -> iChannelIndex
    int iLightValue -> iLightValue
    java.lang.String szRes -> szRes
com.hik.CASClient.ST_CLOUDFILE_INFO -> com.hik.CASClient.ST_CLOUDFILE_INFO:
    java.lang.String szAuthorization -> szAuthorization
    java.lang.String szClientSession -> szClientSession
    int iFrontType -> iFrontType
    java.lang.String szFileID -> szFileID
    java.lang.String szFileName -> szFileName
    int iFileType -> iFileType
    java.lang.String szTimestamp -> szTimestamp
com.hik.CASClient.ST_CLOUDREPLAY_INFO -> com.hik.CASClient.ST_CLOUDREPLAY_INFO:
    java.lang.String szAuthorization -> szAuthorization
    java.lang.String szClientSession -> szClientSession
    int iFrontType -> iFrontType
    java.lang.String szFileID -> szFileID
    java.lang.String szOffsetTime -> szOffsetTime
    java.lang.String szCamera -> szCamera
    java.lang.String szBeginTime -> szBeginTime
    java.lang.String szEndTime -> szEndTime
    int iFileType -> iFileType
    int iStreamType -> iStreamType
    int iPlayType -> iPlayType
com.hik.CASClient.ST_COLLECTLOG_INFO -> com.hik.CASClient.ST_COLLECTLOG_INFO:
    java.lang.String szCollectAddr -> szCollectAddr
    int iCollectPort -> iCollectPort
    java.lang.String szCollectPath -> szCollectPath
    int iDays -> iDays
    java.lang.String szAuthCode -> szAuthCode
com.hik.CASClient.ST_DEV_ALARM_SOUND_INFO -> com.hik.CASClient.ST_DEV_ALARM_SOUND_INFO:
    int iEnable -> iEnable
    int iSoundType -> iSoundType
    java.lang.String szRes -> szRes
com.hik.CASClient.ST_DEV_BASIC_INFO -> com.hik.CASClient.ST_DEV_BASIC_INFO:
    java.lang.String szDevName -> szDevName
    java.lang.String szDevSerial -> szDevSerial
    java.lang.String szFirmwareVersion -> szFirmwareVersion
    java.lang.String szDevType -> szDevType
    int iChanSum -> iChanSum
    int iIPChanSum -> iIPChanSum
    int iAlarmInSum -> iAlarmInSum
    int iAlarmOutSum -> iAlarmOutSum
    java.lang.String szAudioEncodeType -> szAudioEncodeType
com.hik.CASClient.ST_DEV_DEFENCE_INFO -> com.hik.CASClient.ST_DEV_DEFENCE_INFO:
    java.lang.String szDefenceType -> szDefenceType
    int iDefenceStatus -> iDefenceStatus
    java.lang.String szDefenceActor -> szDefenceActor
    int iChannel -> iChannel
com.hik.CASClient.ST_DEV_FTP_INFO -> com.hik.CASClient.ST_DEV_FTP_INFO:
    java.lang.String szFtpIP -> szFtpIP
    int iFtpPort -> iFtpPort
    java.lang.String szUserName -> szUserName
    java.lang.String szPassword -> szPassword
com.hik.CASClient.ST_DEV_INFO -> com.hik.CASClient.ST_DEV_INFO:
    java.lang.String szDevSerial -> szDevSerial
    java.lang.String szOperationCode -> szOperationCode
    java.lang.String szKey -> szKey
    int enEncryptType -> enEncryptType
com.hik.CASClient.ST_DEV_PERMANENT_KEY -> com.hik.CASClient.ST_DEV_PERMANENT_KEY:
    int iAlgorithm -> iAlgorithm
    java.lang.String storeKey -> storeKey
com.hik.CASClient.ST_DISPLAY_INFO -> com.hik.CASClient.ST_DISPLAY_INFO:
    java.lang.String szCommand -> szCommand
    int iChannel -> iChannel
    java.lang.String szRes -> szRes
com.hik.CASClient.ST_FINDFILE_V17 -> com.hik.CASClient.ST_FINDFILE_V17:
    java.lang.String szDevSerial -> szDevSerial
    int nChannelType -> nChannelType
    int nChannelIndex -> nChannelIndex
    java.lang.String szFileName -> szFileName
    java.lang.String szStartTime -> szStartTime
    java.lang.String szStopTime -> szStopTime
    int iFileSize -> iFileSize
    int iFileType -> iFileType
com.hik.CASClient.ST_PLAYINFO_V17 -> com.hik.CASClient.ST_PLAYINFO_V17:
    int nMsgType -> nMsgType
    int nRes -> nRes
    double nMs -> nMs
com.hik.CASClient.ST_PTZ_INFO -> com.hik.CASClient.ST_PTZ_INFO:
    java.lang.String szCommand -> szCommand
    int iChannel -> iChannel
    java.lang.String szAction -> szAction
    int iSpeed -> iSpeed
    int iPresetIndex -> iPresetIndex
com.hik.CASClient.ST_SEARCH_RECORD_INFO -> com.hik.CASClient.ST_SEARCH_RECORD_INFO:
    int iSearchType -> iSearchType
    int iChannelNo -> iChannelNo
    int iChannelType -> iChannelType
    java.lang.String szDevSerial -> szDevSerial
    int iRecordType -> iRecordType
    java.lang.String szStartTime -> szStartTime
    java.lang.String szStopTime -> szStopTime
    int iYear -> iYear
    int iMonth -> iMonth
    java.lang.String szRes -> szRes
com.hik.CASClient.ST_SERVER_INFO -> com.hik.CASClient.ST_SERVER_INFO:
    java.lang.String szServerIP -> szServerIP
    int nServerPort -> nServerPort
com.hik.CASClient.ST_STORAGE_STATUS -> com.hik.CASClient.ST_STORAGE_STATUS:
    java.lang.String szStorageIndex -> szStorageIndex
    java.lang.String szStorageType -> szStorageType
    int nCapacity -> nCapacity
    java.lang.String szStatus -> szStatus
    int nFormatingRate -> nFormatingRate
com.hik.CASClient.ST_STREAM_INFO -> com.hik.CASClient.ST_STREAM_INFO:
    java.lang.String szClientSession -> szClientSession
    java.lang.String szDevSerial -> szDevSerial
    java.lang.String szDevIP -> szDevIP
    int iDevCmdPort -> iDevCmdPort
    int iDevStreamPort -> iDevStreamPort
    int iChannel -> iChannel
    int iStreamType -> iStreamType
    java.lang.String szOperationCode -> szOperationCode
    java.lang.String szPermanetkey -> szPermanetkey
    java.lang.String szKey -> szKey
    int enEncryptType -> enEncryptType
    java.lang.String szServerIP -> szServerIP
    int iServerPort -> iServerPort
com.hik.RtspClient.ABS_TIME -> com.hik.RtspClient.ABS_TIME:
    int dwYear -> dwYear
    int dwMonth -> dwMonth
    int dwDay -> dwDay
    int dwHour -> dwHour
    int dwMinute -> dwMinute
    int dwSecond -> dwSecond
    int getYear() -> getYear
    void setYear(int) -> setYear
    int getMonth() -> getMonth
    void setMonth(int) -> setMonth
    int getDay() -> getDay
    void setDay(int) -> setDay
    int getHour() -> getHour
    void setHour(int) -> setHour
    int getMinute() -> getMinute
    void setMinute(int) -> setMinute
    int getSecond() -> getSecond
    void setSecond(int) -> setSecond
com.hik.RtspClient.RtspClient -> com.hik.RtspClient.RtspClient:
    int RTSPCLIENT_INVALIDATE_ENGINEID -> RTSPCLIENT_INVALIDATE_ENGINEID
    int RTPTCP_TRANSMODE -> RTPTCP_TRANSMODE
    int RTPUDP_TRANSMODE -> RTPUDP_TRANSMODE
    int RTPRTSP_TRANSMODE -> RTPRTSP_TRANSMODE
    int RTPUDP_RELIABLE_TRANSMODE -> RTPUDP_RELIABLE_TRANSMODE
    int RTPMCAST_TRANSMODE -> RTPMCAST_TRANSMODE
    int DATATYPE_HEADER -> DATATYPE_HEADER
    int DATATYPE_STREAM -> DATATYPE_STREAM
    int RTSPCLIENT_MSG_PLAYBACK_FINISH -> RTSPCLIENT_MSG_PLAYBACK_FINISH
    int RTSPCLIENT_MSG_BUFFER_OVERFLOW -> RTSPCLIENT_MSG_BUFFER_OVERFLOW
    int RTSPCLIENT_MSG_CONNECTION_EXCEPTION -> RTSPCLIENT_MSG_CONNECTION_EXCEPTION
    int RTSPCLIENT_PROGRESS_CONNECTION_SERVER -> RTSPCLIENT_PROGRESS_CONNECTION_SERVER
    int RTSPCLIENT_PROGRESS_DESCRIBE -> RTSPCLIENT_PROGRESS_DESCRIBE
    int RTSPCLIENT_PROGRESS_SETUP -> RTSPCLIENT_PROGRESS_SETUP
    int RTSPCLIENT_PROGRESS_RTPTRANS -> RTSPCLIENT_PROGRESS_RTPTRANS
    int RTSPCLIENT_PROGRESS_PLAY -> RTSPCLIENT_PROGRESS_PLAY
    com.hik.RtspClient.RtspClient mRtspClient -> mRtspClient
    com.hik.RtspClient.RtspClient getInstance() -> getInstance
    boolean initLib(android.content.Context) -> initLib
    boolean initCrashReport() -> initCrashReport
    boolean setLogPrint(boolean) -> setLogPrint
    boolean finiLib() -> finiLib
    int createRtspClientEngine(com.hik.RtspClient.RtspClientCallback,int) -> createRtspClientEngine
    boolean releaseRtspClientEngineer(int) -> releaseRtspClientEngineer
    boolean startRtspProc(int,java.lang.String) -> startRtspProc
    boolean startRtspProc(int,java.lang.String,java.lang.String,java.lang.String) -> startRtspProc
    boolean stopRtspProc(int) -> stopRtspProc
    boolean playbackByTime(int,java.lang.String,java.lang.String,java.lang.String,com.hik.RtspClient.ABS_TIME,com.hik.RtspClient.ABS_TIME) -> playbackByTime
    boolean setPlaybackPos(int,com.hik.RtspClient.ABS_TIME,com.hik.RtspClient.ABS_TIME) -> setPlaybackPos
    boolean pause(int) -> pause
    boolean resume(int) -> resume
    boolean playbackFast(int) -> playbackFast
    boolean playbackSlow(int) -> playbackSlow
    boolean playbackNormal(int) -> playbackNormal
    java.lang.String getRtspClientVision() -> getRtspClientVision
    int getLastError() -> getLastError
    java.lang.String getRedirectUrl(int) -> getRedirectUrl
com.hik.RtspClient.RtspClientCallback -> com.hik.RtspClient.RtspClientCallback:
    void onDataCallBack(int,int,byte[],int,int,int,int) -> onDataCallBack
    void onMessageCallBack(int,int,int,int,int) -> onMessageCallBack
com.hik.RtspClient.RtspClientError -> com.hik.RtspClient.RtspClientError:
    int RTSPCLIENT_NOERROR -> RTSPCLIENT_NOERROR
    int RTSPCLIENT_HPRINIT_FAIL -> RTSPCLIENT_HPRINIT_FAIL
    int RTSPCLIENT_NOINIT -> RTSPCLIENT_NOINIT
    int RTSPCLIENT_MALLOC_FAIL -> RTSPCLIENT_MALLOC_FAIL
    int RTSPCLIENT_OBJECTINVLID_ERROR -> RTSPCLIENT_OBJECTINVLID_ERROR
    int RTSPCLIENT_OVER_MAXLINK -> RTSPCLIENT_OVER_MAXLINK
    int RTSPCLIENT_PARAMETER_ERROR -> RTSPCLIENT_PARAMETER_ERROR
    int RTSPCLIENT_PROTOCOL_NOTSUPPORT -> RTSPCLIENT_PROTOCOL_NOTSUPPORT
    int RTSPCLIENT_ENGINEER_NOINIT -> RTSPCLIENT_ENGINEER_NOINIT
    int RTSPCLIENT_ENGINEER_NOPLAYING -> RTSPCLIENT_ENGINEER_NOPLAYING
    int RTSPCLIENT_RTSPURL_ERROR -> RTSPCLIENT_RTSPURL_ERROR
    int RTSPCLIENT_PARSEURL_FAIL -> RTSPCLIENT_PARSEURL_FAIL
    int RTSPCLIENT_CONNECTSERV_FAIL -> RTSPCLIENT_CONNECTSERV_FAIL
    int RTSPCLIENT_DESCRIBE_FAIL -> RTSPCLIENT_DESCRIBE_FAIL
    int RTSPCLIENT_SETUP_FAIL -> RTSPCLIENT_SETUP_FAIL
    int RTSPCLIENT_PLAY_FAIL -> RTSPCLIENT_PLAY_FAIL
    int RTSPCLIENT_SET_PLAYPARAM_FAIL -> RTSPCLIENT_SET_PLAYPARAM_FAIL
    int RTSPCLIENT_SET_SETUPPARAM_FAIL -> RTSPCLIENT_SET_SETUPPARAM_FAIL
    int RTSPCLIENT_SET_DESCRIBEPARAM_FAIL -> RTSPCLIENT_SET_DESCRIBEPARAM_FAIL
    int RTSPCLIENT_SET_PLAYBACKPARAM_FAIL -> RTSPCLIENT_SET_PLAYBACKPARAM_FAIL
    int RTSPCLIENT_PLAYBACK_FAIL -> RTSPCLIENT_PLAYBACK_FAIL
    int RTSPCLIENT_PLAYING_ERROR -> RTSPCLIENT_PLAYING_ERROR
    int RTSPCLIENT_CALLBACK_PARAM_ERROR -> RTSPCLIENT_CALLBACK_PARAM_ERROR
    int RTSPCLIENT_PARSERTSPURL_ERROR -> RTSPCLIENT_PARSERTSPURL_ERROR
    int RTSPCLIENT_REDIRECT_FAIL -> RTSPCLIENT_REDIRECT_FAIL
    int RTSPCLIENT_STARRTRTPDATATRANS_FAIL -> RTSPCLIENT_STARRTRTPDATATRANS_FAIL
    int RTSPCLIENT_CHANAGERATE_FAIL -> RTSPCLIENT_CHANAGERATE_FAIL
    int RTSPCLIENT_SERVER_EXCEPTION -> RTSPCLIENT_SERVER_EXCEPTION
    int RTSPCLIENT_NO_RECORD -> RTSPCLIENT_NO_RECORD
    int RTSPCLIENT_PRIVACY_STATUS -> RTSPCLIENT_PRIVACY_STATUS
    int RTSPCLIENT_DEVICE_CONNECTION_LIMIT -> RTSPCLIENT_DEVICE_CONNECTION_LIMIT
com.hik.TTSClient.TTSClient -> com.hik.TTSClient.TTSClient:
    int TTS_DATA_NOMAL_CMD -> TTS_DATA_NOMAL_CMD
    int TTS_DATA_PRESS_CMD -> TTS_DATA_PRESS_CMD
    int TTS_DATA_UNPRESS_CMD -> TTS_DATA_UNPRESS_CMD
    int AUDIO_CODE_TYPE_G722_1 -> AUDIO_CODE_TYPE_G722_1
    int AUDIO_CODE_TYPE_G711_MU -> AUDIO_CODE_TYPE_G711_MU
    int AUDIO_CODE_TYPE_G711_A -> AUDIO_CODE_TYPE_G711_A
    int AUDIO_CODE_TYPE_G723 -> AUDIO_CODE_TYPE_G723
    int AUDIO_CODE_TYPE_MP1L2 -> AUDIO_CODE_TYPE_MP1L2
    int AUDIO_CODE_TYPE_MP2L2 -> AUDIO_CODE_TYPE_MP2L2
    int AUDIO_CODE_TYPE_G726 -> AUDIO_CODE_TYPE_G726
    int AUDIO_CODE_TYPE_AAC -> AUDIO_CODE_TYPE_AAC
    int AUDIO_CODE_TYPE_RAW -> AUDIO_CODE_TYPE_RAW
    int TTS_START_BASE_CODE -> TTS_START_BASE_CODE
    com.hik.TTSClient.TTSClient mTTSClient -> mTTSClient
    com.hik.TTSClient.TTSClient getInstance() -> getInstance
    boolean initLib() -> initLib
    boolean finiLib() -> finiLib
    int createTalk(com.hik.TTSClient.TTSClientCallback) -> createTalk
    boolean destroyTalk(int) -> destroyTalk
    int startTalk(int,java.lang.String) -> startTalk
    int startTalkEx(int,java.lang.String) -> startTalkEx
    boolean stopTalk(int) -> stopTalk
    boolean inputAudioData(int,byte[],int) -> inputAudioData
    boolean inputAudioDataEx(int,byte[],int,int) -> inputAudioDataEx
com.hik.TTSClient.TTSClientCallback -> com.hik.TTSClient.TTSClientCallback:
    void onDataCallBack(byte[],int) -> onDataCallBack
    void onMessageCallBack(int) -> onMessageCallBack
com.hik.ppvclient.ABS_TIME -> com.hik.ppvclient.ABS_TIME:
    int dwYear -> dwYear
    int dwMonth -> dwMonth
    int dwDay -> dwDay
    int dwHour -> dwHour
    int dwMinute -> dwMinute
    int dwSecond -> dwSecond
    java.lang.String toString() -> toString
com.hik.ppvclient.AVDataCallBack -> com.hik.ppvclient.AVDataCallBack:
    void onAVDataCallBack(int,int,byte[],long,int,byte[],long,byte[],long) -> onAVDataCallBack
com.hik.ppvclient.EN_CONN_MODE -> com.hik.ppvclient.EN_CONN_MODE:
    int CONN_MODE_P2P -> CONN_MODE_P2P
    int CONN_MODE_TRANSFER -> CONN_MODE_TRANSFER
com.hik.ppvclient.FileDownloadDataCallBack -> com.hik.ppvclient.FileDownloadDataCallBack:
    void onFileDownloadDataCallBack(int,byte[],long,int) -> onFileDownloadDataCallBack
com.hik.ppvclient.NotifyCallBack -> com.hik.ppvclient.NotifyCallBack:
    void onNotifyCallBack(int,java.lang.String,long,int,int) -> onNotifyCallBack
com.hik.ppvclient.PPVClient -> com.hik.ppvclient.PPVClient:
    int PPVCLIENT_PROGRESS_SETUP -> PPVCLIENT_PROGRESS_SETUP
    int PPVCLIENT_PROGRESS_SETUP_FAIL -> PPVCLIENT_PROGRESS_SETUP_FAIL
    int PPVCLIENT_PROGRESS_PLAY -> PPVCLIENT_PROGRESS_PLAY
    int PPVCLIENT_PROGRESS_PLAY_FAIL -> PPVCLIENT_PROGRESS_PLAY_FAIL
    int PPVCLIENT_PROGRESS_COMPELETE -> PPVCLIENT_PROGRESS_COMPELETE
    com.hik.ppvclient.PPVClient mPPVClient -> mPPVClient
    com.hik.ppvclient.PPVClient getInstance() -> getInstance
    int PPVInitLib() -> PPVInitLib
    int PPVInitLibEx(short,short,short,short) -> PPVInitLibEx
    int PPVFiniLib() -> PPVFiniLib
    int PPVConnectDeviceByACS(java.lang.String,com.hik.ppvclient.ST_ACCESS_SERVER_INFO,com.hik.ppvclient.ProgressNotifyCallBack,int,int) -> PPVConnectDeviceByACS
    void PPVDisConnectDevice(int) -> PPVDisConnectDevice
    int PPVRealPlayStart(int,int,int,com.hik.ppvclient.AVDataCallBack,int,com.hik.ppvclient.ProgressNotifyCallBack,int) -> PPVRealPlayStart
    void PPVRealPlayStop(int) -> PPVRealPlayStop
    boolean PPVFindFile(int,int,int,com.hik.ppvclient.ABS_TIME,com.hik.ppvclient.ABS_TIME,java.util.List) -> PPVFindFile
    boolean PPVGetDiskStatus(int,com.hik.ppvclient.ST_DISKSTATUS) -> PPVGetDiskStatus
    boolean PPVValidatePwd(int,java.lang.String,java.lang.String) -> PPVValidatePwd
    boolean PPVGetStepInfo(java.util.List) -> PPVGetStepInfo
com.hik.ppvclient.ProgressNotifyCallBack -> com.hik.ppvclient.ProgressNotifyCallBack:
    void onProgressNotifyCallBack(int,int,byte[]) -> onProgressNotifyCallBack
com.hik.ppvclient.ST_ACCESS_SERVER_INFO -> com.hik.ppvclient.ST_ACCESS_SERVER_INFO:
    java.lang.String szAcessServerIP -> szAcessServerIP
    short nAcessServerPort -> nAcessServerPort
    short nReserved -> nReserved
    java.lang.String szUserName -> szUserName
    java.lang.String szUserPwd -> szUserPwd
com.hik.ppvclient.ST_DISKSTATUS -> com.hik.ppvclient.ST_DISKSTATUS:
    java.lang.String sDiskStatus -> sDiskStatus
    int iDiskNum -> iDiskNum
    int iFormatRate -> iFormatRate
com.hik.ppvclient.ST_FINDFILE -> com.hik.ppvclient.ST_FINDFILE:
    java.lang.String sFileName -> sFileName
    com.hik.ppvclient.ABS_TIME struStartTime -> struStartTime
    com.hik.ppvclient.ABS_TIME struStopTime -> struStopTime
    int iFileSize -> iFileSize
    int iFileType -> iFileType
com.hik.ppvclient.ST_STEP_INFO -> com.hik.ppvclient.ST_STEP_INFO:
    int id -> id
    int res -> res
    double ms -> ms
com.hik.ppvclient.VoiceDataCallBack -> com.hik.ppvclient.VoiceDataCallBack:
    void onVoiceDataCallBack(int,byte[],long,int,int) -> onVoiceDataCallBack
com.hik.streamconvert.HK_TRACK_AUDIO -> com.hik.streamconvert.HK_TRACK_AUDIO:
    int dwCodeType -> dwCodeType
    int dwSamplesrate -> dwSamplesrate
    int dwBitrate -> dwBitrate
    int dwChannels -> dwChannels
    int dwBitsPerSample -> dwBitsPerSample
    int dwDelayTime -> dwDelayTime
com.hik.streamconvert.StreamConvert -> com.hik.streamconvert.StreamConvert:
    int TRANS_SYSTEM_NULL -> TRANS_SYSTEM_NULL
    int TRANS_SYSTEM_HIK -> TRANS_SYSTEM_HIK
    int TRANS_SYSTEM_MPEG2_PS -> TRANS_SYSTEM_MPEG2_PS
    int TRANS_SYSTEM_MPEG2_TS -> TRANS_SYSTEM_MPEG2_TS
    int TRANS_SYSTEM_RTP -> TRANS_SYSTEM_RTP
    int TRANS_SYSTEM_MPEG4 -> TRANS_SYSTEM_MPEG4
    int TRANS_SYSTEM_ASF -> TRANS_SYSTEM_ASF
    int TRANS_SYSTEM_AVI -> TRANS_SYSTEM_AVI
    int TRANS_SYSTEM_RAW -> TRANS_SYSTEM_RAW
    int MULTI_DATA -> MULTI_DATA
    int AUDIO_DATA -> AUDIO_DATA
    int SECRET_NONE -> SECRET_NONE
    int SECRET_AES -> SECRET_AES
    com.hik.streamconvert.StreamConvert mInstance -> mInstance
    com.hik.streamconvert.StreamConvert getInstance() -> getInstance
    int Create(byte[],int,int) -> Create
    boolean Start(int,java.lang.String,java.lang.String) -> Start
    boolean InputData(int,int,byte[],int) -> InputData
    boolean Stop(int) -> Stop
    boolean Release(int) -> Release
    boolean SetSecretKey(int,int,byte[],int) -> SetSecretKey
    boolean ManualSwitch(int,java.lang.String) -> ManualSwitch
    boolean SetAudioDecParam(int,com.hik.streamconvert.HK_TRACK_AUDIO) -> SetAudioDecParam
com.hik.stunclient.StunClient -> com.hik.stunclient.StunClient:
    int GET_MAT_TYPE_FAIL -> GET_MAT_TYPE_FAIL
    int FULL_CONE_NAT -> FULL_CONE_NAT
    int RESTRICTED_CONE_NAT -> RESTRICTED_CONE_NAT
    int RESTRICTED_PORT_NAT -> RESTRICTED_PORT_NAT
    int SYMMETRIC_NAT -> SYMMETRIC_NAT
    int OPEN_INTERNET -> OPEN_INTERNET
    int SYMMETRIC_FIREWALL -> SYMMETRIC_FIREWALL
    int UDP_BLOCKED -> UDP_BLOCKED
    int UNKNOWN_NAT -> UNKNOWN_NAT
    com.hik.stunclient.StunClient mStunClient -> mStunClient
    com.hik.stunclient.StunClient getInstance() -> getInstance
    boolean stunInit() -> stunInit
    boolean stunFinit() -> stunFinit
    int stunGetNATType(java.lang.String,java.lang.String,short,java.lang.String,short) -> stunGetNATType
    java.lang.String stunGetNATIP() -> stunGetNATIP
com.hikvision.audio.AudioBaseCallBack -> com.hikvision.audio.AudioBaseCallBack:
com.hikvision.audio.AudioCodec -> com.hikvision.audio.AudioCodec:
    int G722_ENC_SIZE -> G722_ENC_SIZE
    int G722_DEC_SIZE -> G722_DEC_SIZE
    int G726_ENC_SIZE -> G726_ENC_SIZE
    int G726_DEC_SIZE -> G726_DEC_SIZE
    int G711_ENC_SIZE -> G711_ENC_SIZE
    int G711_DEC_SIZE -> G711_DEC_SIZE
    int AAC_ENC_SIZE -> AAC_ENC_SIZE
    int AAC_DEC_SIZE -> AAC_DEC_SIZE
    int mPort -> mPort
    java.lang.String TAG -> TAG
    int release() -> release
    int openAudioDecoder(int) -> openAudioDecoder
    int decodeAudioData(byte[],int,byte[]) -> decodeAudioData
    int openAudioEncoder(int) -> openAudioEncoder
    int encodeAudioData(byte[],int,byte[]) -> encodeAudioData
    int GetPort() -> GetPort
    int FreePort(int) -> FreePort
    int OpenAudioDecoder(int,int) -> OpenAudioDecoder
    int CloseAudioDecoder(int) -> CloseAudioDecoder
    int DecodeAudioData(int,byte[],int,byte[]) -> DecodeAudioData
    int OpenAudioEncoder(int,int) -> OpenAudioEncoder
    int CloseAudioEncoder(int) -> CloseAudioEncoder
    int EncodeAudioData(int,byte[],int,byte[]) -> EncodeAudioData
com.hikvision.audio.AudioCodecParam -> com.hikvision.audio.AudioCodecParam:
    int nCodecType -> nCodecType
    int nBitWidth -> nBitWidth
    int nSampleRate -> nSampleRate
    int nChannel -> nChannel
    int nBitRate -> nBitRate
    int nVolume -> nVolume
com.hikvision.audio.AudioCodecParam$AudioBitRate -> com.hikvision.audio.AudioCodecParam$AudioBitRate:
    int AUDIO_BITRATE_16K -> AUDIO_BITRATE_16K
    int AUDIO_BITRATE_32K -> AUDIO_BITRATE_32K
    int AUDIO_BITRATE_64K -> AUDIO_BITRATE_64K
com.hikvision.audio.AudioCodecParam$AudioBitWidth -> com.hikvision.audio.AudioCodecParam$AudioBitWidth:
    int AUDIO_WIDTH_16BIT -> AUDIO_WIDTH_16BIT
    int AUDIO_WIDTH_8BIT -> AUDIO_WIDTH_8BIT
com.hikvision.audio.AudioCodecParam$AudioChannel -> com.hikvision.audio.AudioCodecParam$AudioChannel:
    int AUDIO_CHANNEL_MONO -> AUDIO_CHANNEL_MONO
    int AUDIO_CHANNEL_STEREO -> AUDIO_CHANNEL_STEREO
com.hikvision.audio.AudioCodecParam$AudioEncodeType -> com.hikvision.audio.AudioCodecParam$AudioEncodeType:
    int AUDIO_TYPE_PCM -> AUDIO_TYPE_PCM
    int AUDIO_TYPE_G711A -> AUDIO_TYPE_G711A
    int AUDIO_TYPE_G711U -> AUDIO_TYPE_G711U
    int AUDIO_TYPE_G722 -> AUDIO_TYPE_G722
    int AUDIO_TYPE_G726 -> AUDIO_TYPE_G726
    int AUDIO_TYPE_AAC -> AUDIO_TYPE_AAC
com.hikvision.audio.AudioCodecParam$AudioSampleRate -> com.hikvision.audio.AudioCodecParam$AudioSampleRate:
    int AUDIO_SAMPLERATE_8K -> AUDIO_SAMPLERATE_8K
    int AUDIO_SAMPLERATE_16K -> AUDIO_SAMPLERATE_16K
    int AUDIO_SAMPLERATE_32K -> AUDIO_SAMPLERATE_32K
com.hikvision.audio.AudioEngine -> com.hikvision.audio.AudioEngine:
    int CAE_PLAY -> CAE_PLAY
    int CAE_RECORDE -> CAE_RECORDE
    int CAE_INTERCOM -> CAE_INTERCOM
    int PARAM_MODE_RECORDE -> PARAM_MODE_RECORDE
    int PARAM_MODE_PLAY -> PARAM_MODE_PLAY
    int PLAY_DATA_CALLBACK -> PLAY_DATA_CALLBACK
    int RECORDE_DATA_CALLBACK -> RECORDE_DATA_CALLBACK
    int CAPTURE_DATA_CALLBACK -> CAPTURE_DATA_CALLBACK
    int ERROR_INFO_CALLBACK -> ERROR_INFO_CALLBACK
    boolean isOpened -> isOpened
    int mMode -> mMode
    int mPlayCodecType -> mPlayCodecType
    int mPlayBitWidth -> mPlayBitWidth
    int mPlaySampleRate -> mPlaySampleRate
    int mPlayBitRate -> mPlayBitRate
    int mPlayChannel -> mPlayChannel
    float mPlayVolume -> mPlayVolume
    int mRecordCodecType -> mRecordCodecType
    int mRecordBitWidth -> mRecordBitWidth
    int mRecordSampleRate -> mRecordSampleRate
    int mRecordBitRate -> mRecordBitRate
    int mRecordChannel -> mRecordChannel
    com.hikvision.audio.AudioPlayer mAudioPlayer -> mAudioPlayer
    com.hikvision.audio.AudioRecoder mAudioRecoder -> mAudioRecoder
    com.hikvision.audio.AudioCodec mAudioCodec -> mAudioCodec
    int open() -> open
    int close() -> close
    int startPlay() -> startPlay
    int stopPlay() -> stopPlay
    int inputData(byte[],int) -> inputData
    int startRecord() -> startRecord
    int stopRecord() -> stopRecord
    boolean checkParam(com.hikvision.audio.AudioCodecParam) -> checkParam
    int setAudioParam(com.hikvision.audio.AudioCodecParam,int) -> setAudioParam
    int getAudioParam(com.hikvision.audio.AudioCodecParam,int) -> getAudioParam
    int setAudioCallBack(com.hikvision.audio.AudioBaseCallBack,int) -> setAudioCallBack
    int getVersion() -> getVersion
com.hikvision.audio.AudioEngineCallBack -> com.hikvision.audio.AudioEngineCallBack:
com.hikvision.audio.AudioEngineCallBack$CaptureDataCallBack -> com.hikvision.audio.AudioEngineCallBack$CaptureDataCallBack:
    void onCaptureDataCallBack(byte[],int) -> onCaptureDataCallBack
com.hikvision.audio.AudioEngineCallBack$ErrorInfoCallBack -> com.hikvision.audio.AudioEngineCallBack$ErrorInfoCallBack:
    void onErrorInfo(java.lang.String,java.lang.String) -> onErrorInfo
com.hikvision.audio.AudioEngineCallBack$PlayDataCallBack -> com.hikvision.audio.AudioEngineCallBack$PlayDataCallBack:
    void onPlayDataCallBack(byte[],int) -> onPlayDataCallBack
com.hikvision.audio.AudioEngineCallBack$RecordDataCallBack -> com.hikvision.audio.AudioEngineCallBack$RecordDataCallBack:
    void onRecordDataCallBack(byte[],int) -> onRecordDataCallBack
com.hikvision.audio.AudioPlayer -> com.hikvision.audio.AudioPlayer:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int mAudioType -> mAudioType
    int mSampleRateInHz -> mSampleRateInHz
    int CHANNEL_CONFIG -> CHANNEL_CONFIG
    int AUDIO_FORMAT -> AUDIO_FORMAT
    int ADTS_LENGTH -> ADTS_LENGTH
    int PLAY_STATUS_START -> PLAY_STATUS_START
    int PLAY_STATUS_STOP -> PLAY_STATUS_STOP
    int PLAY_STATUS_RELEASE -> PLAY_STATUS_RELEASE
    android.media.AudioTrack mAudioPlayer -> mAudioPlayer
    com.hikvision.audio.AudioCodec mAudioCodec -> mAudioCodec
    com.hikvision.audio.AudioEngineCallBack$PlayDataCallBack mDataCallBack -> mDataCallBack
    byte[] mDecOutBuffer -> mDecOutBuffer
    byte[] mDataBuffer -> mDataBuffer
    byte[] mDecInBuffer -> mDecInBuffer
    int mDataBufferSize -> mDataBufferSize
    int mDecInBufferSize -> mDecInBufferSize
    int mDataBufferOffset -> mDataBufferOffset
    int mDecOutSize -> mDecOutSize
    int mPlayBufferSize -> mPlayBufferSize
    int mPlayState -> mPlayState
    int startPlay(int) -> startPlay
    int stopPlay() -> stopPlay
    int closePlay() -> closePlay
    int inputData(byte[],int) -> inputData
    boolean initAudioFormat(int) -> initAudioFormat
    void setAudioDataCallBack(com.hikvision.audio.AudioEngineCallBack$PlayDataCallBack) -> setAudioDataCallBack
    void setErrorInfoCallBack(com.hikvision.audio.AudioEngineCallBack$ErrorInfoCallBack) -> setErrorInfoCallBack
com.hikvision.audio.AudioRecoder -> com.hikvision.audio.AudioRecoder:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int mSampleRateInHz -> mSampleRateInHz
    int CHANNEL_CONFIG -> CHANNEL_CONFIG
    int AUDIO_FORMAT -> AUDIO_FORMAT
    int mPeriodInFrames -> mPeriodInFrames
    int mBuffLen -> mBuffLen
    android.media.AudioRecord mAudioRecorder -> mAudioRecorder
    byte[] mAudioBuffer -> mAudioBuffer
    com.hikvision.audio.AudioEngineCallBack$RecordDataCallBack mDataCallBack -> mDataCallBack
    com.hikvision.audio.AudioEngineCallBack$CaptureDataCallBack mCapDataCallBack -> mCapDataCallBack
    byte[] mEncOutBuffer -> mEncOutBuffer
    int mEncOutBufferSize -> mEncOutBufferSize
    com.hikvision.audio.AudioCodec mAudioCodec -> mAudioCodec
    int RECORD_STATUS_START -> RECORD_STATUS_START
    int RECORD_STATUS_STOP -> RECORD_STATUS_STOP
    int RECORD_STATUS_RELEASE -> RECORD_STATUS_RELEASE
    int mRecordState -> mRecordState
    int startRecord(int) -> startRecord
    int stopRecord() -> stopRecord
    int closeRecord() -> closeRecord
    void onMarkerReached(android.media.AudioRecord) -> onMarkerReached
    void onPeriodicNotification(android.media.AudioRecord) -> onPeriodicNotification
    void setAudioDataCallBack(com.hikvision.audio.AudioEngineCallBack$RecordDataCallBack) -> setAudioDataCallBack
    void setAudioDataCallBack(com.hikvision.audio.AudioEngineCallBack$CaptureDataCallBack) -> setAudioDataCallBack
    boolean initAudioFormat(int) -> initAudioFormat
com.hikvision.audio.ErrorCode -> com.hikvision.audio.ErrorCode:
    int AUDIOENGINE_OK -> AUDIOENGINE_OK
    int AUDIOENGINE_E_CREATE -> AUDIOENGINE_E_CREATE
    int AUDIOENGINE_E_SUPPORT -> AUDIOENGINE_E_SUPPORT
    int AUDIOENGINE_E_RESOURCE -> AUDIOENGINE_E_RESOURCE
    int AUDIOENGINE_E_PARA -> AUDIOENGINE_E_PARA
    int AUDIOENGINE_E_PRECONDITION -> AUDIOENGINE_E_PRECONDITION
    int AUDIOENGINE_E_NOCONTEXT -> AUDIOENGINE_E_NOCONTEXT
    int AUDIOENGINE_E_INVALIDTYPE -> AUDIOENGINE_E_INVALIDTYPE
    int AUDIOENGINE_E_ENCODEFAIL -> AUDIOENGINE_E_ENCODEFAIL
    int AUDIOENGINE_E_DECODEFAIL -> AUDIOENGINE_E_DECODEFAIL
    int AUDIOENGINE_E_WAVEPLAY -> AUDIOENGINE_E_WAVEPLAY
    int AUDIOENGINE_E_CAPTURE -> AUDIOENGINE_E_CAPTURE
    int AUDIOENGINE_E_OVERFLOW -> AUDIOENGINE_E_OVERFLOW
    int AUDIOENGINE_E_ERRORDATA -> AUDIOENGINE_E_ERRORDATA
    int AUDIOENGINE_E_DENOISEFAIL -> AUDIOENGINE_E_DENOISEFAIL
com.hikvision.netsdk.AlarmCallBack_V30 -> com.hikvision.netsdk.AlarmCallBack_V30:
    void fMSGCallBack(int,com.hikvision.netsdk.NET_DVR_ALARMER,com.hikvision.netsdk.NET_DVR_BASE_ALARM) -> fMSGCallBack
com.hikvision.netsdk.COMPRESSION_ABILITY_TYPE -> com.hikvision.netsdk.COMPRESSION_ABILITY_TYPE:
    int COMPRESSION_STREAM_ABILITY -> COMPRESSION_STREAM_ABILITY
    int MAIN_RESOLUTION_ABILITY -> MAIN_RESOLUTION_ABILITY
    int SUB_RESOLUTION_ABILITY -> SUB_RESOLUTION_ABILITY
    int EVENT_RESOLUTION_ABILITY -> EVENT_RESOLUTION_ABILITY
    int FRAME_ABILITY -> FRAME_ABILITY
    int BITRATE_TYPE_ABILITY -> BITRATE_TYPE_ABILITY
    int BITRATE_ABILITY -> BITRATE_ABILITY
com.hikvision.netsdk.DeviceType -> com.hikvision.netsdk.DeviceType:
    int DVR -> DVR
    int ATMDVR -> ATMDVR
    int DVS -> DVS
    int DEC -> DEC
    int ENC_DEC -> ENC_DEC
    int DVR_HC -> DVR_HC
    int DVR_HT -> DVR_HT
    int DVR_HF -> DVR_HF
    int DVR_HS -> DVR_HS
    int DVR_HTS -> DVR_HTS
    int DVR_HB -> DVR_HB
    int DVR_HCS -> DVR_HCS
    int DVS_A -> DVS_A
    int DVR_HC_S -> DVR_HC_S
    int DVR_HT_S -> DVR_HT_S
    int DVR_HF_S -> DVR_HF_S
    int DVR_HS_S -> DVR_HS_S
    int ATMDVR_S -> ATMDVR_S
    int LOWCOST_DVR -> LOWCOST_DVR
    int DEC_MAT -> DEC_MAT
    int DVR_MOBILE -> DVR_MOBILE
    int DVR_HD_S -> DVR_HD_S
    int DVR_HD_SL -> DVR_HD_SL
    int DVR_HC_SL -> DVR_HC_SL
    int DVR_HS_ST -> DVR_HS_ST
    int DVS_HW -> DVS_HW
    int IPCAM -> IPCAM
    int MEGA_IPCAM -> MEGA_IPCAM
    int IPCAM_X62MF -> IPCAM_X62MF
    int IPDOME -> IPDOME
    int MEGA_IPDOME -> MEGA_IPDOME
    int IPMOD -> IPMOD
    int DS71XX_H -> DS71XX_H
    int DS72XX_H_S -> DS72XX_H_S
    int DS73XX_H_S -> DS73XX_H_S
    int DS81XX_HS_S -> DS81XX_HS_S
    int DS81XX_HL_S -> DS81XX_HL_S
    int DS81XX_HC_S -> DS81XX_HC_S
    int DS81XX_HD_S -> DS81XX_HD_S
    int DS81XX_HE_S -> DS81XX_HE_S
    int DS81XX_HF_S -> DS81XX_HF_S
    int DS81XX_AH_S -> DS81XX_AH_S
    int DS81XX_AHF_S -> DS81XX_AHF_S
    int DS90XX_HF_S -> DS90XX_HF_S
    int DS91XX_HF_S -> DS91XX_HF_S
    int DS91XX_HD_S -> DS91XX_HD_S
com.hikvision.netsdk.EAP_PEAP -> com.hikvision.netsdk.EAP_PEAP:
    byte byEapolVersion -> byEapolVersion
    byte byAuthType -> byAuthType
    byte byPeapVersion -> byPeapVersion
    byte byPeapLabel -> byPeapLabel
    byte[] byAnonyIdentity -> byAnonyIdentity
    byte[] byUserName -> byUserName
    byte[] byPassword -> byPassword
com.hikvision.netsdk.EAP_TLS -> com.hikvision.netsdk.EAP_TLS:
    byte byEapolVersion -> byEapolVersion
    byte[] byIdentity -> byIdentity
    byte[] byPrivateKeyPswd -> byPrivateKeyPswd
com.hikvision.netsdk.EAP_TTLS -> com.hikvision.netsdk.EAP_TTLS:
    byte byEapolVersion -> byEapolVersion
    byte byAuthType -> byAuthType
    byte[] byAnonyIdentity -> byAnonyIdentity
    byte[] byUserName -> byUserName
    byte[] byPassword -> byPassword
com.hikvision.netsdk.ExceptionCallBack -> com.hikvision.netsdk.ExceptionCallBack:
    void fExceptionCallBack(int,int,int) -> fExceptionCallBack
com.hikvision.netsdk.HCNetSDK -> com.hikvision.netsdk.HCNetSDK:
    com.hikvision.netsdk.HCNetSDK netSdk -> netSdk
    int MAX_ALARMIN_V30 -> MAX_ALARMIN_V30
    int MAX_AUDIO_V30 -> MAX_AUDIO_V30
    int MAX_LINK -> MAX_LINK
    int MAX_WIRELESS_ALARM_NUM -> MAX_WIRELESS_ALARM_NUM
    int MAX_AUX_ALARM_NUM -> MAX_AUX_ALARM_NUM
    int MAX_DAYS -> MAX_DAYS
    int MAX_TIMESEGMENT_V30 -> MAX_TIMESEGMENT_V30
    int SERIALNO_LEN -> SERIALNO_LEN
    int NAME_LEN -> NAME_LEN
    int PASSWD_LEN -> PASSWD_LEN
    int MACADDR_LEN -> MACADDR_LEN
    int MAX_ETHERNET -> MAX_ETHERNET
    int MAX_DOMAIN_NAME -> MAX_DOMAIN_NAME
    int MAX_ANALOG_CHANNUM -> MAX_ANALOG_CHANNUM
    int MAX_IP_DEVICE -> MAX_IP_DEVICE
    int MAX_IP_CHANNEL -> MAX_IP_CHANNEL
    int MAX_ANALOG_ALARMOUT -> MAX_ANALOG_ALARMOUT
    int MAX_IP_ALARMOUT -> MAX_IP_ALARMOUT
    int MAX_ALARMOUT_V30 -> MAX_ALARMOUT_V30
    int MAX_IP_DEVICE_V40 -> MAX_IP_DEVICE_V40
    int MAX_CHANNUM -> MAX_CHANNUM
    int MAX_ALARMIN -> MAX_ALARMIN
    int MAX_ALARMOUT -> MAX_ALARMOUT
    int MAX_DISKNUM -> MAX_DISKNUM
    int MAX_ABILITYTYPE_NUM -> MAX_ABILITYTYPE_NUM
    int DESC_LEN -> DESC_LEN
    int DESC_LEN_32 -> DESC_LEN_32
    int MAX_NODE_NUM -> MAX_NODE_NUM
    int MAX_CHANNUM_V30 -> MAX_CHANNUM_V30
    int MAX_DISKNUM_V30 -> MAX_DISKNUM_V30
    int MAX_PRESET_V30 -> MAX_PRESET_V30
    int MAX_CRUISE_V30 -> MAX_CRUISE_V30
    int MAX_TRACK_V30 -> MAX_TRACK_V30
    int MAX_SHELTERNUM -> MAX_SHELTERNUM
    int PTZ_PROTOCOL_NUM -> PTZ_PROTOCOL_NUM
    int WIFI_MAX_AP_COUNT -> WIFI_MAX_AP_COUNT
    int IW_ESSID_MAX_SIZE -> IW_ESSID_MAX_SIZE
    int WIFI_WPA_PSK_MAX_KEY_LENGTH -> WIFI_WPA_PSK_MAX_KEY_LENGTH
    int WIFI_WEP_MAX_KEY_COUNT -> WIFI_WEP_MAX_KEY_COUNT
    int WIFI_WEP_MAX_KEY_LENGTH -> WIFI_WEP_MAX_KEY_LENGTH
    int EXCEPTION_EXCHANGE -> EXCEPTION_EXCHANGE
    int EXCEPTION_PREVIEW -> EXCEPTION_PREVIEW
    int EXCEPTION_RECONNECT -> EXCEPTION_RECONNECT
    int NET_DVR_SYSHEAD -> NET_DVR_SYSHEAD
    int NET_DVR_STREAMDATA -> NET_DVR_STREAMDATA
    int NET_DVR_AUDIOSTREAMDATA -> NET_DVR_AUDIOSTREAMDATA
    int NET_DVR_STD_VIDEODATA -> NET_DVR_STD_VIDEODATA
    int NET_DVR_STD_AUDIODATA -> NET_DVR_STD_AUDIODATA
    int NET_DVR_GET_DEVICECFG -> NET_DVR_GET_DEVICECFG
    int NET_DVR_SET_DEVICECFG -> NET_DVR_SET_DEVICECFG
    int NET_DVR_GET_NETCFG_V30 -> NET_DVR_GET_NETCFG_V30
    int NET_DVR_SET_NETCFG_V30 -> NET_DVR_SET_NETCFG_V30
    int NET_DVR_GET_PICCFG_V30 -> NET_DVR_GET_PICCFG_V30
    int NET_DVR_SET_PICCFG_V30 -> NET_DVR_SET_PICCFG_V30
    int NET_DVR_GET_COMPRESSCFG_V30 -> NET_DVR_GET_COMPRESSCFG_V30
    int NET_DVR_SET_COMPRESSCFG_V30 -> NET_DVR_SET_COMPRESSCFG_V30
    int NET_DVR_GET_IPALARMOUTCFG -> NET_DVR_GET_IPALARMOUTCFG
    int NET_DVR_GET_IPPARACFG_V31 -> NET_DVR_GET_IPPARACFG_V31
    int NET_DVR_SET_IPPARACFG_V31 -> NET_DVR_SET_IPPARACFG_V31
    int NET_DVR_GET_COMPRESSCFG_AUD -> NET_DVR_GET_COMPRESSCFG_AUD
    int NET_DVR_GET_ALARMINCFG_V30 -> NET_DVR_GET_ALARMINCFG_V30
    int NET_DVR_SET_ALARMINCFG_V30 -> NET_DVR_SET_ALARMINCFG_V30
    int NET_DVR_GET_ALARMOUTCFG_V30 -> NET_DVR_GET_ALARMOUTCFG_V30
    int NET_DVR_SET_ALARMOUTCFG_V30 -> NET_DVR_SET_ALARMOUTCFG_V30
    int NET_DVR_GET_NTPCFG -> NET_DVR_GET_NTPCFG
    int NET_DVR_SET_NTPCFG -> NET_DVR_SET_NTPCFG
    int NET_DVR_GET_IPPARACFG_V40 -> NET_DVR_GET_IPPARACFG_V40
    int NET_DVR_SET_IPPARACFG_V40 -> NET_DVR_SET_IPPARACFG_V40
    int NET_DVR_GET_DECODERCFG_V30 -> NET_DVR_GET_DECODERCFG_V30
    int NET_DVR_SET_DECODERCFG_V30 -> NET_DVR_SET_DECODERCFG_V30
    int NET_IPC_GET_AUX_ALARMCFG -> NET_IPC_GET_AUX_ALARMCFG
    int NET_IPC_SET_AUX_ALARMCFG -> NET_IPC_SET_AUX_ALARMCFG
    int NET_DVR_GET_RECORDCFG_V30 -> NET_DVR_GET_RECORDCFG_V30
    int NET_DVR_SET_RECORDCFG_V30 -> NET_DVR_SET_RECORDCFG_V30
    int NET_DVR_GET_ZEROCHANCFG -> NET_DVR_GET_ZEROCHANCFG
    int NET_DVR_SET_ZEROCHANCFG -> NET_DVR_SET_ZEROCHANCFG
    int NET_DVR_GET_DEVICECFG_V40 -> NET_DVR_GET_DEVICECFG_V40
    int NET_DVR_GET_AP_INFO_LIST -> NET_DVR_GET_AP_INFO_LIST
    int NET_DVR_SET_WIFI_CFG -> NET_DVR_SET_WIFI_CFG
    int NET_DVR_GET_WIFI_CFG -> NET_DVR_GET_WIFI_CFG
    int NET_DVR_GET_WIFI_STATUS -> NET_DVR_GET_WIFI_STATUS
    int COMM_ALARM -> COMM_ALARM
    int COMM_ALARM_V30 -> COMM_ALARM_V30
    int NET_DVR_FILE_SUCCESS -> NET_DVR_FILE_SUCCESS
    int NET_DVR_FILE_NOFIND -> NET_DVR_FILE_NOFIND
    int NET_DVR_ISFINDING -> NET_DVR_ISFINDING
    int NET_DVR_NOMOREFILE -> NET_DVR_NOMOREFILE
    int NET_DVR_FILE_EXCEPTION -> NET_DVR_FILE_EXCEPTION
    int NET_DVR_PLAYSTART -> NET_DVR_PLAYSTART
    int NET_DVR_PLAYPAUSE -> NET_DVR_PLAYPAUSE
    int NET_DVR_PLAYRESTART -> NET_DVR_PLAYRESTART
    int NET_DVR_PLAYGETPOS -> NET_DVR_PLAYGETPOS
    int NET_DVR_GETTOTALFRAMES -> NET_DVR_GETTOTALFRAMES
    int NET_DVR_GETTOTALTIME -> NET_DVR_GETTOTALTIME
    int NET_DVR_SETSPEED -> NET_DVR_SETSPEED
    int NET_DVR_PLAYSETTIME -> NET_DVR_PLAYSETTIME
    int NET_DVR_PLAYGETTOTALLEN -> NET_DVR_PLAYGETTOTALLEN
    int DEVICE_SOFTHARDWARE_ABILITY -> DEVICE_SOFTHARDWARE_ABILITY
    int DEVICE_NETWORK_ABILITY -> DEVICE_NETWORK_ABILITY
    int DEVICE_ENCODE_ALL_ABILITY -> DEVICE_ENCODE_ALL_ABILITY
    int DEVICE_ENCODE_CURRENT -> DEVICE_ENCODE_CURRENT
    int IPC_FRONT_PARAMETER -> IPC_FRONT_PARAMETER
    int IPC_UPGRADE_DESCRIPTION -> IPC_UPGRADE_DESCRIPTION
    int DEVICE_RAID_ABILITY -> DEVICE_RAID_ABILITY
    int DEVICE_ENCODE_ALL_ABILITY_V20 -> DEVICE_ENCODE_ALL_ABILITY_V20
    int IPC_FRONT_PARAMETER_V20 -> IPC_FRONT_PARAMETER_V20
    int DEVICE_ALARM_ABILITY -> DEVICE_ALARM_ABILITY
    int DEVICE_DYNCHAN_ABILITY -> DEVICE_DYNCHAN_ABILITY
    int DEVICE_USER_ABILITY -> DEVICE_USER_ABILITY
    int DEVICE_NETAPP_ABILITY -> DEVICE_NETAPP_ABILITY
    int DEVICE_VIDEOPIC_ABILITY -> DEVICE_VIDEOPIC_ABILITY
    int DEVICE_JPEG_CAP_ABILITY -> DEVICE_JPEG_CAP_ABILITY
    int DEVICE_SERIAL_ABILITY -> DEVICE_SERIAL_ABILITY
    int VCA_DEV_ABILITY -> VCA_DEV_ABILITY
    int VCA_CHAN_ABILITY -> VCA_CHAN_ABILITY
    int MATRIXDECODER_ABILITY -> MATRIXDECODER_ABILITY
    int VIDEOPLATFORM_ABILITY -> VIDEOPLATFORM_ABILITY
    int MATRIXDECODER_ABILITY_V41 -> MATRIXDECODER_ABILITY_V41
    int DECODER_ABILITY -> DECODER_ABILITY
    int CODECARD_ABILITY -> CODECARD_ABILITY
    int SNAPCAMERA_ABILITY -> SNAPCAMERA_ABILITY
    int ITC_TRIGGER_MODE_ABILITY -> ITC_TRIGGER_MODE_ABILITY
    int COMPRESSIONCFG_ABILITY -> COMPRESSIONCFG_ABILITY
    int COMPRESSION_LIMIT -> COMPRESSION_LIMIT
    int PIC_CAPTURE_ABILITY -> PIC_CAPTURE_ABILITY
    int IT_DEVICE_ABILITY -> IT_DEVICE_ABILITY
    int SCREENCONTROL_ABILITY -> SCREENCONTROL_ABILITY
    int SCREENSERVER_ABILITY -> SCREENSERVER_ABILITY
    int FISHEYE_ABILITY -> FISHEYE_ABILITY
    int LOCAL_AREA_NETWORK -> LOCAL_AREA_NETWORK
    int WIDE_AREA_NETWORK -> WIDE_AREA_NETWORK
    int STEP_RECV_DATA -> STEP_RECV_DATA
    int STEP_UPGRADE -> STEP_UPGRADE
    int STEP_BACKUP -> STEP_BACKUP
    int STEP_SEARCH -> STEP_SEARCH
    com.hikvision.netsdk.HCNetSDK getInstance() -> getInstance
    boolean NET_DVR_Init() -> NET_DVR_Init
    boolean NET_DVR_Cleanup() -> NET_DVR_Cleanup
    boolean NET_DVR_SetConnectTime(int) -> NET_DVR_SetConnectTime
    boolean NET_DVR_SetReconnect(int,boolean) -> NET_DVR_SetReconnect
    int NET_DVR_GetLastError() -> NET_DVR_GetLastError
    int NET_DVR_GetSDKVersion() -> NET_DVR_GetSDKVersion
    int NET_DVR_GetSDKBuildVersion() -> NET_DVR_GetSDKBuildVersion
    boolean NET_DVR_SetExceptionCallBack(com.hikvision.netsdk.ExceptionCallBack) -> NET_DVR_SetExceptionCallBack
    int NET_DVR_Login_V30(java.lang.String,int,java.lang.String,java.lang.String,com.hikvision.netsdk.NET_DVR_DEVICEINFO_V30) -> NET_DVR_Login_V30
    boolean NET_DVR_Logout_V30(int) -> NET_DVR_Logout_V30
    int NET_DVR_RealPlay_V30(int,com.hikvision.netsdk.NET_DVR_CLIENTINFO,com.hikvision.netsdk.RealPlayCallBack,boolean) -> NET_DVR_RealPlay_V30
    boolean NET_DVR_StopRealPlay(int) -> NET_DVR_StopRealPlay
    boolean NET_DVR_MakeKeyFrame(int,int) -> NET_DVR_MakeKeyFrame
    boolean NET_DVR_MakeKeyFrameSub(int,int) -> NET_DVR_MakeKeyFrameSub
    boolean NET_DVR_ClientGetVideoEffect(int,com.hikvision.netsdk.NET_DVR_VIDEOEFFECT) -> NET_DVR_ClientGetVideoEffect
    boolean NET_DVR_ClientSetVideoEffect(int,com.hikvision.netsdk.NET_DVR_VIDEOEFFECT) -> NET_DVR_ClientSetVideoEffect
    boolean NET_DVR_PTZControl(int,int,int) -> NET_DVR_PTZControl
    boolean NET_DVR_PTZControl_Other(int,int,int,int) -> NET_DVR_PTZControl_Other
    boolean NET_DVR_PTZControlWithSpeed(int,int,int,int) -> NET_DVR_PTZControlWithSpeed
    boolean NET_DVR_PTZControlWithSpeed_Other(int,int,int,int,int) -> NET_DVR_PTZControlWithSpeed_Other
    boolean NET_DVR_PTZPreset(int,int,int) -> NET_DVR_PTZPreset
    boolean NET_DVR_PTZPreset_Other(int,int,int,int) -> NET_DVR_PTZPreset_Other
    boolean NET_DVR_PTZCruise(int,int,byte,byte,short) -> NET_DVR_PTZCruise
    boolean NET_DVR_PTZCruise_Other(int,int,int,byte,byte,short) -> NET_DVR_PTZCruise_Other
    boolean NET_DVR_PTZTrack(int,int) -> NET_DVR_PTZTrack
    boolean NET_DVR_PTZTrack_Other(int,int,int) -> NET_DVR_PTZTrack_Other
    boolean NET_DVR_GetPTZProtocol(int,com.hikvision.netsdk.NET_DVR_PTZCFG) -> NET_DVR_GetPTZProtocol
    boolean NET_DVR_RebootDVR(int) -> NET_DVR_RebootDVR
    boolean NET_DVR_ShutDownDVR(int) -> NET_DVR_ShutDownDVR
    int NET_DVR_StartVoiceCom_MR_V30(int,int,com.hikvision.netsdk.VoiceDataCallBack) -> NET_DVR_StartVoiceCom_MR_V30
    boolean NET_DVR_VoiceComSendData(int,byte[],int) -> NET_DVR_VoiceComSendData
    boolean NET_DVR_StopVoiceCom(int) -> NET_DVR_StopVoiceCom
    boolean NET_DVR_GetDVRConfig(int,int,int,com.hikvision.netsdk.NET_DVR_CONFIG) -> NET_DVR_GetDVRConfig
    boolean NET_DVR_SetDVRConfig(int,int,int,com.hikvision.netsdk.NET_DVR_CONFIG) -> NET_DVR_SetDVRConfig
    boolean NET_DVR_GetAlarmOut_V30(int,com.hikvision.netsdk.NET_DVR_ALARMOUTSTATUS_V30) -> NET_DVR_GetAlarmOut_V30
    boolean NET_DVR_SetAlarmOut(int,int,int) -> NET_DVR_SetAlarmOut
    int NET_DVR_SetupAlarmChan_V30(int) -> NET_DVR_SetupAlarmChan_V30
    boolean NET_DVR_CloseAlarmChan_V30(int) -> NET_DVR_CloseAlarmChan_V30
    boolean NET_DVR_SetDVRMessageCallBack_V30(com.hikvision.netsdk.AlarmCallBack_V30) -> NET_DVR_SetDVRMessageCallBack_V30
    int NET_DVR_FindFile_V30(int,com.hikvision.netsdk.NET_DVR_FILECOND) -> NET_DVR_FindFile_V30
    int NET_DVR_FindNextFile_V30(int,com.hikvision.netsdk.NET_DVR_FINDDATA_V30) -> NET_DVR_FindNextFile_V30
    boolean NET_DVR_FindClose_V30(int) -> NET_DVR_FindClose_V30
    int NET_DVR_PlayBackByName(int,java.lang.String) -> NET_DVR_PlayBackByName
    int NET_DVR_PlayBackByTime(int,int,com.hikvision.netsdk.NET_DVR_TIME,com.hikvision.netsdk.NET_DVR_TIME) -> NET_DVR_PlayBackByTime
    boolean NET_DVR_PlayBackControl_V40(int,int,byte[],int,com.hikvision.netsdk.NET_DVR_PLAYBACK_INFO) -> NET_DVR_PlayBackControl_V40
    boolean NET_DVR_StopPlayBack(int) -> NET_DVR_StopPlayBack
    boolean NET_DVR_SetPlayDataCallBack(int,com.hikvision.netsdk.PlaybackCallBack) -> NET_DVR_SetPlayDataCallBack
    int NET_DVR_GetPlayBackPos(int) -> NET_DVR_GetPlayBackPos
    boolean NET_DVR_PlayBackSaveData(int,java.lang.String) -> NET_DVR_PlayBackSaveData
    boolean NET_DVR_StopPlayBackSave(int) -> NET_DVR_StopPlayBackSave
    int NET_DVR_GetFileByName(int,java.lang.String,java.lang.String) -> NET_DVR_GetFileByName
    int NET_DVR_GetFileByTime(int,int,com.hikvision.netsdk.NET_DVR_TIME,com.hikvision.netsdk.NET_DVR_TIME,java.lang.String) -> NET_DVR_GetFileByTime
    boolean NET_DVR_StopGetFile(int) -> NET_DVR_StopGetFile
    int NET_DVR_GetDownloadPos(int) -> NET_DVR_GetDownloadPos
    boolean NET_DVR_GetDVRIPByResolveSvr_EX(java.lang.String,short,byte[],short,java.lang.String,short,com.hikvision.netsdk.NET_DVR_RESOLVE_DEVICEINFO) -> NET_DVR_GetDVRIPByResolveSvr_EX
    boolean NET_DVR_GetDVRIPByResolveSvr_EX(java.lang.String,short,java.lang.String,short,java.lang.String,short,com.hikvision.netsdk.NET_DVR_RESOLVE_DEVICEINFO) -> NET_DVR_GetDVRIPByResolveSvr_EX
    boolean NET_DVR_PTZSelZoomIn(int,com.hikvision.netsdk.NET_DVR_POINT_FRAME) -> NET_DVR_PTZSelZoomIn
    boolean NET_DVR_PTZSelZoomIn_EX(int,int,com.hikvision.netsdk.NET_DVR_POINT_FRAME) -> NET_DVR_PTZSelZoomIn_EX
    boolean NET_DVR_CaptureJPEGPicture(int,int,com.hikvision.netsdk.NET_DVR_JPEGPARA,java.lang.String) -> NET_DVR_CaptureJPEGPicture
    boolean NET_DVR_CaptureJPEGPicture_NEW(int,int,com.hikvision.netsdk.NET_DVR_JPEGPARA,byte[],int,com.hikvision.netsdk.INT_PTR) -> NET_DVR_CaptureJPEGPicture_NEW
    boolean NET_DVR_GetCompressionAbility(int,int,com.hikvision.netsdk.NET_DVR_COMPRESSIONCFG_ABILITY) -> NET_DVR_GetCompressionAbility
    boolean NET_DVR_SetLogToFile(int,java.lang.String,boolean) -> NET_DVR_SetLogToFile
    boolean NET_DVR_GetCurrentAudioCompress(int,com.hikvision.netsdk.NET_DVR_COMPRESSION_AUDIO) -> NET_DVR_GetCurrentAudioCompress
    int NET_DVR_SerialStart(int,int,com.hikvision.netsdk.SerialDataCallBack) -> NET_DVR_SerialStart
    boolean NET_DVR_SerialSend(int,int,byte[],int) -> NET_DVR_SerialSend
    boolean NET_DVR_SerialStop(int) -> NET_DVR_SerialStop
    boolean NET_DVR_SendToSerialPort(int,int,int,byte[],int) -> NET_DVR_SendToSerialPort
    boolean NET_DVR_SendTo232Port(int,byte[],int) -> NET_DVR_SendTo232Port
    boolean NET_DVR_GetXMLAbility(int,int,byte[],int,byte[],int,com.hikvision.netsdk.INT_PTR) -> NET_DVR_GetXMLAbility
    boolean NET_DVR_SetSDKLocalConfig(com.hikvision.netsdk.NET_DVR_SDKLOCAL_CFG) -> NET_DVR_SetSDKLocalConfig
    boolean NET_DVR_GetSDKLocalConfig(com.hikvision.netsdk.NET_DVR_SDKLOCAL_CFG) -> NET_DVR_GetSDKLocalConfig
    boolean NET_DVR_SaveRealData(int,java.lang.String) -> NET_DVR_SaveRealData
    boolean NET_DVR_StopSaveRealData(int) -> NET_DVR_StopSaveRealData
    boolean NET_DVR_SetSimAbilityPath(java.lang.String,java.lang.String) -> NET_DVR_SetSimAbilityPath
    boolean NET_DVR_StartDVRRecord(int,int,int) -> NET_DVR_StartDVRRecord
    boolean NET_DVR_StopDVRRecord(int,int) -> NET_DVR_StopDVRRecord
    boolean NET_DVR_GetDVRWorkState_V30(int,com.hikvision.netsdk.NET_DVR_WORKSTATE_V30) -> NET_DVR_GetDVRWorkState_V30
    int NET_DVR_ZeroStartPlay(int,com.hikvision.netsdk.NET_DVR_CLIENTINFO,com.hikvision.netsdk.RealPlayCallBack,boolean) -> NET_DVR_ZeroStartPlay
    boolean NET_DVR_ZeroStopPlay(int) -> NET_DVR_ZeroStopPlay
    boolean NET_DVR_SetNetworkEnvironment(int) -> NET_DVR_SetNetworkEnvironment
    int NET_DVR_Upgrade(int,java.lang.String) -> NET_DVR_Upgrade
    int NET_DVR_GetUpgradeProgress(int) -> NET_DVR_GetUpgradeProgress
    int NET_DVR_GetUpgradeState(int) -> NET_DVR_GetUpgradeState
    int NET_DVR_GetUpgradeStep(int,com.hikvision.netsdk.INT_PTR) -> NET_DVR_GetUpgradeStep
    boolean NET_DVR_CloseUpgradeHandle(int) -> NET_DVR_CloseUpgradeHandle
    boolean NET_DVR_SetRecvTimeOut(int) -> NET_DVR_SetRecvTimeOut
    boolean NET_DVR_GetUpnpNatState(int,com.hikvision.netsdk.NET_DVR_UPNP_NAT_STATE) -> NET_DVR_GetUpnpNatState
    int NET_DVR_GetUpgradeStepProgress(int,byte) -> NET_DVR_GetUpgradeStepProgress
com.hikvision.netsdk.INT_PTR -> com.hikvision.netsdk.INT_PTR:
    int iValue -> iValue
com.hikvision.netsdk.NET_DVR_ABILITY_LIST -> com.hikvision.netsdk.NET_DVR_ABILITY_LIST:
    int dwAbilityType -> dwAbilityType
    byte[] byRes -> byRes
    int dwNodeNum -> dwNodeNum
    com.hikvision.netsdk.NET_DVR_DESC_NODE[] struDescNode -> struDescNode
com.hikvision.netsdk.NET_DVR_ALARMER -> com.hikvision.netsdk.NET_DVR_ALARMER:
    byte byUserIDValid -> byUserIDValid
    byte bySerialValid -> bySerialValid
    byte byVersionValid -> byVersionValid
    byte byDeviceNameValid -> byDeviceNameValid
    byte byMacAddrValid -> byMacAddrValid
    byte byLinkPortValid -> byLinkPortValid
    byte byDeviceIPValid -> byDeviceIPValid
    byte bySocketIPValid -> bySocketIPValid
    int lUserID -> lUserID
    byte[] sSerialNumber -> sSerialNumber
    int dwDeviceVersion -> dwDeviceVersion
    byte[] sDeviceName -> sDeviceName
    byte[] byMacAddr -> byMacAddr
    short wLinkPort -> wLinkPort
    byte[] sDeviceIP -> sDeviceIP
    byte[] sSocketIP -> sSocketIP
    byte byIpProtocol -> byIpProtocol
    byte[] byRes2 -> byRes2
com.hikvision.netsdk.NET_DVR_ALARMINCFG_V30 -> com.hikvision.netsdk.NET_DVR_ALARMINCFG_V30:
    byte[] sAlarmInName -> sAlarmInName
    byte byAlarmType -> byAlarmType
    byte byAlarmInHandle -> byAlarmInHandle
    byte byChannel -> byChannel
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType -> struAlarmHandleType
    com.hikvision.netsdk.NET_DVR_SCHEDTIME[][] struAlarmTime -> struAlarmTime
    byte[] byRelRecordChan -> byRelRecordChan
    byte[] byEnablePreset -> byEnablePreset
    byte[] byPresetNo -> byPresetNo
    byte[] byEnableCruise -> byEnableCruise
    byte[] byCruiseNo -> byCruiseNo
    byte[] byEnablePtzTrack -> byEnablePtzTrack
    byte[] byPTZTrack -> byPTZTrack
com.hikvision.netsdk.NET_DVR_ALARMINFO -> com.hikvision.netsdk.NET_DVR_ALARMINFO:
    int dwAlarmType -> dwAlarmType
    int dwAlarmInputNumber -> dwAlarmInputNumber
    int[] dwAlarmOutputNumber -> dwAlarmOutputNumber
    int[] dwAlarmRelateChannel -> dwAlarmRelateChannel
    int[] dwChannel -> dwChannel
    int[] dwDiskNumber -> dwDiskNumber
com.hikvision.netsdk.NET_DVR_ALARMINFO_V30 -> com.hikvision.netsdk.NET_DVR_ALARMINFO_V30:
    int dwAlarmType -> dwAlarmType
    int dwAlarmInputNumber -> dwAlarmInputNumber
    byte[] byAlarmOutputNumber -> byAlarmOutputNumber
    byte[] byAlarmRelateChannel -> byAlarmRelateChannel
    byte[] byChannel -> byChannel
    byte[] byDiskNumber -> byDiskNumber
com.hikvision.netsdk.NET_DVR_ALARMOUTCFG_V30 -> com.hikvision.netsdk.NET_DVR_ALARMOUTCFG_V30:
    byte[] sAlarmOutName -> sAlarmOutName
    int dwAlarmOutDelay -> dwAlarmOutDelay
    com.hikvision.netsdk.NET_DVR_SCHEDTIME[][] struAlarmOutTime -> struAlarmOutTime
com.hikvision.netsdk.NET_DVR_ALARMOUTSTATUS_V30 -> com.hikvision.netsdk.NET_DVR_ALARMOUTSTATUS_V30:
    byte[] Output -> Output
com.hikvision.netsdk.NET_DVR_AP_INFO -> com.hikvision.netsdk.NET_DVR_AP_INFO:
    byte[] sSsid -> sSsid
    int dwMode -> dwMode
    int dwSecurity -> dwSecurity
    int dwChannel -> dwChannel
    int dwSignalStrength -> dwSignalStrength
    int dwSpeed -> dwSpeed
com.hikvision.netsdk.NET_DVR_AP_INFO_LIST -> com.hikvision.netsdk.NET_DVR_AP_INFO_LIST:
    int dwCount -> dwCount
    com.hikvision.netsdk.NET_DVR_AP_INFO[] struApInfo -> struApInfo
com.hikvision.netsdk.NET_DVR_BASE_ALARM -> com.hikvision.netsdk.NET_DVR_BASE_ALARM:
com.hikvision.netsdk.NET_DVR_CHANNELSTATE_V30 -> com.hikvision.netsdk.NET_DVR_CHANNELSTATE_V30:
    byte byRecordStatic -> byRecordStatic
    byte bySignalStatic -> bySignalStatic
    byte byHardwareStatic -> byHardwareStatic
    int dwBitRate -> dwBitRate
    int dwLinkNum -> dwLinkNum
    com.hikvision.netsdk.NET_DVR_IPADDR[] struClientIP -> struClientIP
    int dwIPLinkNum -> dwIPLinkNum
    byte byExceedMaxLink -> byExceedMaxLink
com.hikvision.netsdk.NET_DVR_CLIENTINFO -> com.hikvision.netsdk.NET_DVR_CLIENTINFO:
    int lChannel -> lChannel
    int lLinkMode -> lLinkMode
    java.lang.String sMultiCastIP -> sMultiCastIP
com.hikvision.netsdk.NET_DVR_COMPRESSIONCFG_ABILITY -> com.hikvision.netsdk.NET_DVR_COMPRESSIONCFG_ABILITY:
    int dwSize -> dwSize
    int dwAbilityNum -> dwAbilityNum
    com.hikvision.netsdk.NET_DVR_ABILITY_LIST[] struAbilityNode -> struAbilityNode
com.hikvision.netsdk.NET_DVR_COMPRESSIONCFG_V30 -> com.hikvision.netsdk.NET_DVR_COMPRESSIONCFG_V30:
    com.hikvision.netsdk.NET_DVR_COMPRESSION_INFO_V30 struNormHighRecordPara -> struNormHighRecordPara
    com.hikvision.netsdk.NET_DVR_COMPRESSION_INFO_V30 struEventRecordPara -> struEventRecordPara
    com.hikvision.netsdk.NET_DVR_COMPRESSION_INFO_V30 struNetPara -> struNetPara
    com.hikvision.netsdk.NET_DVR_COMPRESSION_INFO_V30 struRes -> struRes
com.hikvision.netsdk.NET_DVR_COMPRESSION_AUDIO -> com.hikvision.netsdk.NET_DVR_COMPRESSION_AUDIO:
    byte byAudioEncType -> byAudioEncType
    byte[] byres -> byres
com.hikvision.netsdk.NET_DVR_COMPRESSION_INFO_V30 -> com.hikvision.netsdk.NET_DVR_COMPRESSION_INFO_V30:
    byte byStreamType -> byStreamType
    byte byResolution -> byResolution
    byte byBitrateType -> byBitrateType
    byte byPicQuality -> byPicQuality
    int dwVideoBitrate -> dwVideoBitrate
    int dwVideoFrameRate -> dwVideoFrameRate
    short wIntervalFrameI -> wIntervalFrameI
    byte byIntervalBPFrame -> byIntervalBPFrame
    byte byVideoEncType -> byVideoEncType
    byte byAudioEncType -> byAudioEncType
com.hikvision.netsdk.NET_DVR_CONFIG -> com.hikvision.netsdk.NET_DVR_CONFIG:
com.hikvision.netsdk.NET_DVR_DECODERCFG_V30 -> com.hikvision.netsdk.NET_DVR_DECODERCFG_V30:
    int dwBaudRate -> dwBaudRate
    byte byDataBit -> byDataBit
    byte byStopBit -> byStopBit
    byte byParity -> byParity
    byte byFlowcontrol -> byFlowcontrol
    short wDecoderType -> wDecoderType
    short wDecoderAddress -> wDecoderAddress
    byte[] bySetPreset -> bySetPreset
    byte[] bySetCruise -> bySetCruise
    byte[] bySetTrack -> bySetTrack
com.hikvision.netsdk.NET_DVR_DESC_NODE -> com.hikvision.netsdk.NET_DVR_DESC_NODE:
    int iValue -> iValue
    byte[] byDescribe -> byDescribe
    int dwFreeSpace -> dwFreeSpace
    byte[] byRes -> byRes
com.hikvision.netsdk.NET_DVR_DEVICECFG -> com.hikvision.netsdk.NET_DVR_DEVICECFG:
    byte[] sDVRName -> sDVRName
    int dwDVRID -> dwDVRID
    int dwRecycleRecord -> dwRecycleRecord
    byte[] sSerialNumber -> sSerialNumber
    int dwSoftwareVersion -> dwSoftwareVersion
    int dwSoftwareBuildDate -> dwSoftwareBuildDate
    int dwDSPSoftwareVersion -> dwDSPSoftwareVersion
    int dwDSPSoftwareBuildDate -> dwDSPSoftwareBuildDate
    int dwPanelVersion -> dwPanelVersion
    int dwHardwareVersion -> dwHardwareVersion
    byte byAlarmInPortNum -> byAlarmInPortNum
    byte byAlarmOutPortNum -> byAlarmOutPortNum
    byte byRS232Num -> byRS232Num
    byte byRS485Num -> byRS485Num
    byte byNetworkPortNum -> byNetworkPortNum
    byte byDiskCtrlNum -> byDiskCtrlNum
    byte byDiskNum -> byDiskNum
    byte byDVRType -> byDVRType
    byte byChanNum -> byChanNum
    byte byStartChan -> byStartChan
    byte byDecordChans -> byDecordChans
    byte byVGANum -> byVGANum
    byte byUSBNum -> byUSBNum
    byte byAuxoutNum -> byAuxoutNum
    byte byAudioNum -> byAudioNum
    byte byIPChanNum -> byIPChanNum
com.hikvision.netsdk.NET_DVR_DEVICECFG_V40 -> com.hikvision.netsdk.NET_DVR_DEVICECFG_V40:
    byte[] byDevTypeName -> byDevTypeName
com.hikvision.netsdk.NET_DVR_DEVICEINFO_V30 -> com.hikvision.netsdk.NET_DVR_DEVICEINFO_V30:
    byte[] sSerialNumber -> sSerialNumber
    byte byAlarmInPortNum -> byAlarmInPortNum
    byte byAlarmOutPortNum -> byAlarmOutPortNum
    byte byDiskNum -> byDiskNum
    byte byDVRType -> byDVRType
    byte byChanNum -> byChanNum
    byte byStartChan -> byStartChan
    byte byAudioChanNum -> byAudioChanNum
    byte byIPChanNum -> byIPChanNum
    byte byZeroChanNum -> byZeroChanNum
com.hikvision.netsdk.NET_DVR_DISKSTATE -> com.hikvision.netsdk.NET_DVR_DISKSTATE:
    int dwVolume -> dwVolume
    int dwFreeSpace -> dwFreeSpace
    int dwHardDiskStatic -> dwHardDiskStatic
com.hikvision.netsdk.NET_DVR_ETHERNET_V30 -> com.hikvision.netsdk.NET_DVR_ETHERNET_V30:
    com.hikvision.netsdk.NET_DVR_IPADDR struDVRIP -> struDVRIP
    com.hikvision.netsdk.NET_DVR_IPADDR struDVRIPMask -> struDVRIPMask
    int dwNetInterface -> dwNetInterface
    int wDVRPort -> wDVRPort
    int wMTU -> wMTU
    byte[] byMACAddr -> byMACAddr
com.hikvision.netsdk.NET_DVR_FILECOND -> com.hikvision.netsdk.NET_DVR_FILECOND:
    int lChannel -> lChannel
    int dwFileType -> dwFileType
    int dwIsLocked -> dwIsLocked
    int dwUseCardNo -> dwUseCardNo
    byte[] sCardNumber -> sCardNumber
    com.hikvision.netsdk.NET_DVR_TIME struStartTime -> struStartTime
    com.hikvision.netsdk.NET_DVR_TIME struStopTime -> struStopTime
com.hikvision.netsdk.NET_DVR_FINDDATA_V30 -> com.hikvision.netsdk.NET_DVR_FINDDATA_V30:
    byte[] sFileName -> sFileName
    com.hikvision.netsdk.NET_DVR_TIME struStartTime -> struStartTime
    com.hikvision.netsdk.NET_DVR_TIME struStopTime -> struStopTime
    int dwFileSize -> dwFileSize
    byte[] sCardNum -> sCardNum
    byte byLocked -> byLocked
    byte byFileType -> byFileType
    byte[] byRes -> byRes
com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 -> com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30:
    int dwHandleType -> dwHandleType
    byte[] byRelAlarmOut -> byRelAlarmOut
com.hikvision.netsdk.NET_DVR_HIDEALARM_V30 -> com.hikvision.netsdk.NET_DVR_HIDEALARM_V30:
    int dwEnableHideAlarm -> dwEnableHideAlarm
    short wHideAlarmAreaTopLeftX -> wHideAlarmAreaTopLeftX
    short wHideAlarmAreaTopLeftY -> wHideAlarmAreaTopLeftY
    short wHideAlarmAreaWidth -> wHideAlarmAreaWidth
    short wHideAlarmAreaHeight -> wHideAlarmAreaHeight
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struHideAlarmHandleType -> struHideAlarmHandleType
    com.hikvision.netsdk.NET_DVR_SCHEDTIME[][] struAlarmTime -> struAlarmTime
com.hikvision.netsdk.NET_DVR_IPADDR -> com.hikvision.netsdk.NET_DVR_IPADDR:
    byte[] sIpV4 -> sIpV4
    byte[] sIpV6 -> sIpV6
com.hikvision.netsdk.NET_DVR_IPALARMOUTCFG -> com.hikvision.netsdk.NET_DVR_IPALARMOUTCFG:
    int dwSize -> dwSize
    com.hikvision.netsdk.NET_DVR_IPALARMOUTINFO[] struIPAlarmOutInfo -> struIPAlarmOutInfo
com.hikvision.netsdk.NET_DVR_IPALARMOUTINFO -> com.hikvision.netsdk.NET_DVR_IPALARMOUTINFO:
    byte byIPID -> byIPID
    byte byAlarmOut -> byAlarmOut
    byte[] byRes -> byRes
com.hikvision.netsdk.NET_DVR_IPCHANINFO -> com.hikvision.netsdk.NET_DVR_IPCHANINFO:
    byte byEnable -> byEnable
    byte byIPID -> byIPID
    byte byChannel -> byChannel
com.hikvision.netsdk.NET_DVR_IPDEVINFO_V31 -> com.hikvision.netsdk.NET_DVR_IPDEVINFO_V31:
    byte byEnable -> byEnable
    byte byProType -> byProType
    byte[] sUserName -> sUserName
    byte[] sPassword -> sPassword
    byte[] byDomain -> byDomain
    com.hikvision.netsdk.NET_DVR_IPADDR struIP -> struIP
    int wDVRPort -> wDVRPort
com.hikvision.netsdk.NET_DVR_IPPARACFG_V31 -> com.hikvision.netsdk.NET_DVR_IPPARACFG_V31:
    com.hikvision.netsdk.NET_DVR_IPDEVINFO_V31[] struIPDevInfo -> struIPDevInfo
    byte[] byAnalogChanEnable -> byAnalogChanEnable
    com.hikvision.netsdk.NET_DVR_IPCHANINFO[] struIPChanInfo -> struIPChanInfo
com.hikvision.netsdk.NET_DVR_IPPARACFG_V40 -> com.hikvision.netsdk.NET_DVR_IPPARACFG_V40:
    int dwGroupNum -> dwGroupNum
    int dwAChanNum -> dwAChanNum
    int dwDChanNum -> dwDChanNum
    int dwStartDChan -> dwStartDChan
    byte[] byAnalogChanEnable -> byAnalogChanEnable
    com.hikvision.netsdk.NET_DVR_IPDEVINFO_V31[] struIPDevInfo -> struIPDevInfo
    com.hikvision.netsdk.NET_DVR_IPCHANINFO[] struIPChanInfo -> struIPChanInfo
com.hikvision.netsdk.NET_DVR_JPEGPARA -> com.hikvision.netsdk.NET_DVR_JPEGPARA:
    short wPicSize -> wPicSize
    short wPicQuality -> wPicQuality
com.hikvision.netsdk.NET_DVR_MOTION_V30 -> com.hikvision.netsdk.NET_DVR_MOTION_V30:
    byte[][] byMotionScope -> byMotionScope
    byte byMotionSensitive -> byMotionSensitive
    byte byEnableHandleMotion -> byEnableHandleMotion
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struMotionHandleType -> struMotionHandleType
    com.hikvision.netsdk.NET_DVR_SCHEDTIME[][] struAlarmTime -> struAlarmTime
    byte[] byRelRecordChan -> byRelRecordChan
com.hikvision.netsdk.NET_DVR_NETCFG_V30 -> com.hikvision.netsdk.NET_DVR_NETCFG_V30:
    com.hikvision.netsdk.NET_DVR_ETHERNET_V30[] struEtherNet -> struEtherNet
    com.hikvision.netsdk.NET_DVR_IPADDR struAlarmHostIpAddr -> struAlarmHostIpAddr
    int wAlarmHostIpPort -> wAlarmHostIpPort
    byte byUseDhcp -> byUseDhcp
    com.hikvision.netsdk.NET_DVR_IPADDR struDnsServer1IpAddr -> struDnsServer1IpAddr
    com.hikvision.netsdk.NET_DVR_IPADDR struDnsServer2IpAddr -> struDnsServer2IpAddr
    byte[] byIpResolver -> byIpResolver
    int wIpResolverPort -> wIpResolverPort
    int wHttpPortNo -> wHttpPortNo
    com.hikvision.netsdk.NET_DVR_IPADDR struMulticastIpAddr -> struMulticastIpAddr
    com.hikvision.netsdk.NET_DVR_IPADDR struGatewayIpAddr -> struGatewayIpAddr
    com.hikvision.netsdk.NET_DVR_PPPOECFG struPPPoE -> struPPPoE
com.hikvision.netsdk.NET_DVR_NTPPARA -> com.hikvision.netsdk.NET_DVR_NTPPARA:
    byte[] sNTPServer -> sNTPServer
    short wInterval -> wInterval
    byte byEnableNTP -> byEnableNTP
    char cTimeDifferenceH -> cTimeDifferenceH
    char cTimeDifferenceM -> cTimeDifferenceM
    short wNtpPort -> wNtpPort
com.hikvision.netsdk.NET_DVR_PICCFG_V30 -> com.hikvision.netsdk.NET_DVR_PICCFG_V30:
    byte[] sChanName -> sChanName
    int dwVideoFormat -> dwVideoFormat
    int dwShowChanName -> dwShowChanName
    short wShowNameTopLeftX -> wShowNameTopLeftX
    short wShowNameTopLeftY -> wShowNameTopLeftY
    com.hikvision.netsdk.NET_DVR_VILOST_V30 struVILost -> struVILost
    com.hikvision.netsdk.NET_DVR_MOTION_V30 struMotion -> struMotion
    com.hikvision.netsdk.NET_DVR_HIDEALARM_V30 struHideAlarm -> struHideAlarm
    int dwEnableHide -> dwEnableHide
    com.hikvision.netsdk.NET_DVR_SHELTER[] struShelter -> struShelter
    int dwShowOsd -> dwShowOsd
    short wOSDTopLeftX -> wOSDTopLeftX
    short wOSDTopLeftY -> wOSDTopLeftY
    byte byOSDType -> byOSDType
    byte byDispWeek -> byDispWeek
    byte byOSDAttrib -> byOSDAttrib
    byte byHourOsdType -> byHourOsdType
    byte byFontSize -> byFontSize
com.hikvision.netsdk.NET_DVR_PLAYBACK_INFO -> com.hikvision.netsdk.NET_DVR_PLAYBACK_INFO:
com.hikvision.netsdk.NET_DVR_POINT_FRAME -> com.hikvision.netsdk.NET_DVR_POINT_FRAME:
    int xTop -> xTop
    int yTop -> yTop
    int xBottom -> xBottom
    int yBottom -> yBottom
    int bCounter -> bCounter
com.hikvision.netsdk.NET_DVR_PPPOECFG -> com.hikvision.netsdk.NET_DVR_PPPOECFG:
    int dwPPPOE -> dwPPPOE
    byte[] sPPPoEUser -> sPPPoEUser
    byte[] sPPPoEPassword -> sPPPoEPassword
    com.hikvision.netsdk.NET_DVR_IPADDR struPPPoEIP -> struPPPoEIP
com.hikvision.netsdk.NET_DVR_PTZCFG -> com.hikvision.netsdk.NET_DVR_PTZCFG:
    int dwPtzNum -> dwPtzNum
    com.hikvision.netsdk.NET_DVR_PTZ_PROTOCOL[] struPtz -> struPtz
com.hikvision.netsdk.NET_DVR_PTZ_PROTOCOL -> com.hikvision.netsdk.NET_DVR_PTZ_PROTOCOL:
    int dwType -> dwType
    byte[] byDescribe -> byDescribe
com.hikvision.netsdk.NET_DVR_RECORDDAY -> com.hikvision.netsdk.NET_DVR_RECORDDAY:
    short wAllDayRecord -> wAllDayRecord
    byte byRecordType -> byRecordType
com.hikvision.netsdk.NET_DVR_RECORDSCHED -> com.hikvision.netsdk.NET_DVR_RECORDSCHED:
    com.hikvision.netsdk.NET_DVR_SCHEDTIME struRecordTime -> struRecordTime
    byte byRecordType -> byRecordType
com.hikvision.netsdk.NET_DVR_RECORD_V30 -> com.hikvision.netsdk.NET_DVR_RECORD_V30:
    int dwRecord -> dwRecord
    com.hikvision.netsdk.NET_DVR_RECORDDAY[] struRecAllDay -> struRecAllDay
    com.hikvision.netsdk.NET_DVR_RECORDSCHED[][] struRecordSched -> struRecordSched
    int dwRecordTime -> dwRecordTime
    int dwPreRecordTime -> dwPreRecordTime
    int dwRecorderDuration -> dwRecorderDuration
    byte byRedundancyRec -> byRedundancyRec
    byte byAudioRec -> byAudioRec
com.hikvision.netsdk.NET_DVR_RESOLVE_DEVICEINFO -> com.hikvision.netsdk.NET_DVR_RESOLVE_DEVICEINFO:
    byte[] sGetIP -> sGetIP
    int dwPort -> dwPort
com.hikvision.netsdk.NET_DVR_SCHEDTIME -> com.hikvision.netsdk.NET_DVR_SCHEDTIME:
    byte byStartHour -> byStartHour
    byte byStartMin -> byStartMin
    byte byStopHour -> byStopHour
    byte byStopMin -> byStopMin
com.hikvision.netsdk.NET_DVR_SDKLOCAL_CFG -> com.hikvision.netsdk.NET_DVR_SDKLOCAL_CFG:
    byte byEnableAbilityParse -> byEnableAbilityParse
    byte[] byProtectKey -> byProtectKey
com.hikvision.netsdk.NET_DVR_SHELTER -> com.hikvision.netsdk.NET_DVR_SHELTER:
    short wHideAreaTopLeftX -> wHideAreaTopLeftX
    short wHideAreaTopLeftY -> wHideAreaTopLeftY
    short wHideAreaWidth -> wHideAreaWidth
    short wHideAreaHeight -> wHideAreaHeight
com.hikvision.netsdk.NET_DVR_TIME -> com.hikvision.netsdk.NET_DVR_TIME:
    int dwYear -> dwYear
    int dwMonth -> dwMonth
    int dwDay -> dwDay
    int dwHour -> dwHour
    int dwMinute -> dwMinute
    int dwSecond -> dwSecond
    java.lang.String ToString() -> ToString
com.hikvision.netsdk.NET_DVR_UPNP_NAT_STATE -> com.hikvision.netsdk.NET_DVR_UPNP_NAT_STATE:
    com.hikvision.netsdk.NET_DVR_UPNP_PORT_STATE[] strUpnpPort -> strUpnpPort
com.hikvision.netsdk.NET_DVR_UPNP_PORT_STATE -> com.hikvision.netsdk.NET_DVR_UPNP_PORT_STATE:
    int dwEnabled -> dwEnabled
    short wInternalPort -> wInternalPort
    short wExternalPort -> wExternalPort
    int dwStatus -> dwStatus
    com.hikvision.netsdk.NET_DVR_IPADDR struNatExternalIp -> struNatExternalIp
    com.hikvision.netsdk.NET_DVR_IPADDR struNatInternalIp -> struNatInternalIp
com.hikvision.netsdk.NET_DVR_VIDEOEFFECT -> com.hikvision.netsdk.NET_DVR_VIDEOEFFECT:
    int iBrightValue -> iBrightValue
    int iContrastValue -> iContrastValue
    int iSaturationValue -> iSaturationValue
    int iHueValue -> iHueValue
com.hikvision.netsdk.NET_DVR_VILOST_V30 -> com.hikvision.netsdk.NET_DVR_VILOST_V30:
    byte byEnableHandleVILost -> byEnableHandleVILost
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struVILostHandleType -> struVILostHandleType
    com.hikvision.netsdk.NET_DVR_SCHEDTIME[][] struAlarmTime -> struAlarmTime
com.hikvision.netsdk.NET_DVR_WIFIETHERNET -> com.hikvision.netsdk.NET_DVR_WIFIETHERNET:
    byte[] sIpAddress -> sIpAddress
    byte[] sIpMask -> sIpMask
    byte[] byMACAddr -> byMACAddr
    int dwEnableDhcp -> dwEnableDhcp
    int dwAutoDns -> dwAutoDns
    byte[] sFirstDns -> sFirstDns
    byte[] sSecondDns -> sSecondDns
    byte[] sGatewayIpAddr -> sGatewayIpAddr
com.hikvision.netsdk.NET_DVR_WIFI_CFG -> com.hikvision.netsdk.NET_DVR_WIFI_CFG:
    com.hikvision.netsdk.NET_DVR_WIFIETHERNET struEtherNet -> struEtherNet
    byte[] sEssid -> sEssid
    int dwMode -> dwMode
    int dwSecurity -> dwSecurity
    com.hikvision.netsdk.WEP wep -> wep
    com.hikvision.netsdk.WPA_PSK wpa_psk -> wpa_psk
    com.hikvision.netsdk.WPA_WPA2 wpa_wpa2 -> wpa_wpa2
com.hikvision.netsdk.NET_DVR_WIFI_CONNECT_STATUS -> com.hikvision.netsdk.NET_DVR_WIFI_CONNECT_STATUS:
    byte byCurStatus -> byCurStatus
    int dwErrorCode -> dwErrorCode
com.hikvision.netsdk.NET_DVR_WORKSTATE_V30 -> com.hikvision.netsdk.NET_DVR_WORKSTATE_V30:
    int dwDeviceStatic -> dwDeviceStatic
    com.hikvision.netsdk.NET_DVR_DISKSTATE[] struHardDiskStatic -> struHardDiskStatic
    com.hikvision.netsdk.NET_DVR_CHANNELSTATE_V30[] struChanStatic -> struChanStatic
    byte[] byAlarmInStatic -> byAlarmInStatic
    byte[] byAlarmOutStatic -> byAlarmOutStatic
    int dwLocalDisplay -> dwLocalDisplay
    byte[] byAudioChanStatus -> byAudioChanStatus
com.hikvision.netsdk.NET_DVR_ZEROCHANCFG -> com.hikvision.netsdk.NET_DVR_ZEROCHANCFG:
    byte byEnable -> byEnable
    int dwVideoBitrate -> dwVideoBitrate
    int dwVideoFrameRate -> dwVideoFrameRate
com.hikvision.netsdk.NET_IPC_AUX_ALARMCFG -> com.hikvision.netsdk.NET_IPC_AUX_ALARMCFG:
    com.hikvision.netsdk.NET_IPC_SINGLE_AUX_ALARMCFG[] struAlarm -> struAlarm
com.hikvision.netsdk.NET_IPC_CALLHELP_ALARMCFG -> com.hikvision.netsdk.NET_IPC_CALLHELP_ALARMCFG:
    byte byAlarmHandle -> byAlarmHandle
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType -> struAlarmHandleType
    byte[] byRelRecordChan -> byRelRecordChan
com.hikvision.netsdk.NET_IPC_PIR_ALARMCFG -> com.hikvision.netsdk.NET_IPC_PIR_ALARMCFG:
    byte[] byAlarmName -> byAlarmName
    byte byAlarmHandle -> byAlarmHandle
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType -> struAlarmHandleType
    byte[] byRelRecordChan -> byRelRecordChan
com.hikvision.netsdk.NET_IPC_SINGLE_AUX_ALARMCFG -> com.hikvision.netsdk.NET_IPC_SINGLE_AUX_ALARMCFG:
    byte byAlarmType -> byAlarmType
    com.hikvision.netsdk.NET_IPC_PIR_ALARMCFG struPIRAlarm -> struPIRAlarm
    com.hikvision.netsdk.NET_IPC_SINGLE_WIRELESS_ALARMCFG[] struWirelessAlarm -> struWirelessAlarm
    com.hikvision.netsdk.NET_IPC_CALLHELP_ALARMCFG struCallHelpAlarm -> struCallHelpAlarm
com.hikvision.netsdk.NET_IPC_SINGLE_WIRELESS_ALARMCFG -> com.hikvision.netsdk.NET_IPC_SINGLE_WIRELESS_ALARMCFG:
    byte[] byAlarmName -> byAlarmName
    byte byAlarmHandle -> byAlarmHandle
    byte byID -> byID
    com.hikvision.netsdk.NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType -> struAlarmHandleType
    byte[] byRelRecordChan -> byRelRecordChan
com.hikvision.netsdk.PTZCommand -> com.hikvision.netsdk.PTZCommand:
    int LIGHT_PWRON -> LIGHT_PWRON
    int WIPER_PWRON -> WIPER_PWRON
    int FAN_PWRON -> FAN_PWRON
    int HEATER_PWRON -> HEATER_PWRON
    int AUX_PWRON1 -> AUX_PWRON1
    int AUX_PWRON2 -> AUX_PWRON2
    int ZOOM_IN -> ZOOM_IN
    int ZOOM_OUT -> ZOOM_OUT
    int FOCUS_NEAR -> FOCUS_NEAR
    int FOCUS_FAR -> FOCUS_FAR
    int IRIS_OPEN -> IRIS_OPEN
    int IRIS_CLOSE -> IRIS_CLOSE
    int TILT_UP -> TILT_UP
    int TILT_DOWN -> TILT_DOWN
    int PAN_LEFT -> PAN_LEFT
    int PAN_RIGHT -> PAN_RIGHT
    int UP_LEFT -> UP_LEFT
    int UP_RIGHT -> UP_RIGHT
    int DOWN_LEFT -> DOWN_LEFT
    int DOWN_RIGHT -> DOWN_RIGHT
    int PAN_AUTO -> PAN_AUTO
com.hikvision.netsdk.PTZCruiseCmd -> com.hikvision.netsdk.PTZCruiseCmd:
    int FILL_PRE_SEQ -> FILL_PRE_SEQ
    int SET_SEQ_DWELL -> SET_SEQ_DWELL
    int SET_SEQ_SPEED -> SET_SEQ_SPEED
    int CLE_PRE_SEQ -> CLE_PRE_SEQ
    int RUN_SEQ -> RUN_SEQ
    int STOP_SEQ -> STOP_SEQ
com.hikvision.netsdk.PTZPresetCmd -> com.hikvision.netsdk.PTZPresetCmd:
    int SET_PRESET -> SET_PRESET
    int CLE_PRESET -> CLE_PRESET
    int GOTO_PRESET -> GOTO_PRESET
com.hikvision.netsdk.PTZTrackCmd -> com.hikvision.netsdk.PTZTrackCmd:
    int STA_MEM_CRUISE -> STA_MEM_CRUISE
    int STO_MEM_CRUISE -> STO_MEM_CRUISE
    int RUN_CRUISE -> RUN_CRUISE
com.hikvision.netsdk.PlaybackCallBack -> com.hikvision.netsdk.PlaybackCallBack:
    void fPlayDataCallBack(int,int,byte[],int) -> fPlayDataCallBack
com.hikvision.netsdk.PlaybackControlCommand -> com.hikvision.netsdk.PlaybackControlCommand:
    int NET_DVR_PLAYSTART -> NET_DVR_PLAYSTART
    int NET_DVR_PLAYSTOP -> NET_DVR_PLAYSTOP
    int NET_DVR_PLAYPAUSE -> NET_DVR_PLAYPAUSE
    int NET_DVR_PLAYRESTART -> NET_DVR_PLAYRESTART
    int NET_DVR_PLAYFAST -> NET_DVR_PLAYFAST
    int NET_DVR_PLAYSLOW -> NET_DVR_PLAYSLOW
    int NET_DVR_PLAYNORMAL -> NET_DVR_PLAYNORMAL
    int NET_DVR_PLAYSTARTAUDIO -> NET_DVR_PLAYSTARTAUDIO
    int NET_DVR_PLAYSTOPAUDIO -> NET_DVR_PLAYSTOPAUDIO
    int NET_DVR_PLAYSETPOS -> NET_DVR_PLAYSETPOS
com.hikvision.netsdk.RealPlayCallBack -> com.hikvision.netsdk.RealPlayCallBack:
    void fRealDataCallBack(int,int,byte[],int) -> fRealDataCallBack
com.hikvision.netsdk.SDKError -> com.hikvision.netsdk.SDKError:
    int NET_DVR_NOERROR -> NET_DVR_NOERROR
    int NET_DVR_PASSWORD_ERROR -> NET_DVR_PASSWORD_ERROR
    int NET_DVR_NOENOUGHPRI -> NET_DVR_NOENOUGHPRI
    int NET_DVR_NOINIT -> NET_DVR_NOINIT
    int NET_DVR_CHANNEL_ERROR -> NET_DVR_CHANNEL_ERROR
    int NET_DVR_OVER_MAXLINK -> NET_DVR_OVER_MAXLINK
    int NET_DVR_VERSIONNOMATCH -> NET_DVR_VERSIONNOMATCH
    int NET_DVR_NETWORK_FAIL_CONNECT -> NET_DVR_NETWORK_FAIL_CONNECT
    int NET_DVR_NETWORK_SEND_ERROR -> NET_DVR_NETWORK_SEND_ERROR
    int NET_DVR_NETWORK_RECV_ERROR -> NET_DVR_NETWORK_RECV_ERROR
    int NET_DVR_NETWORK_RECV_TIMEOUT -> NET_DVR_NETWORK_RECV_TIMEOUT
    int NET_DVR_NETWORK_ERRORDATA -> NET_DVR_NETWORK_ERRORDATA
    int NET_DVR_ORDER_ERROR -> NET_DVR_ORDER_ERROR
    int NET_DVR_OPERNOPERMIT -> NET_DVR_OPERNOPERMIT
    int NET_DVR_COMMANDTIMEOUT -> NET_DVR_COMMANDTIMEOUT
    int NET_DVR_ERRORSERIALPORT -> NET_DVR_ERRORSERIALPORT
    int NET_DVR_ERRORALARMPORT -> NET_DVR_ERRORALARMPORT
    int NET_DVR_PARAMETER_ERROR -> NET_DVR_PARAMETER_ERROR
    int NET_DVR_CHAN_EXCEPTION -> NET_DVR_CHAN_EXCEPTION
    int NET_DVR_NODISK -> NET_DVR_NODISK
    int NET_DVR_ERRORDISKNUM -> NET_DVR_ERRORDISKNUM
    int NET_DVR_DISK_FULL -> NET_DVR_DISK_FULL
    int NET_DVR_DISK_ERROR -> NET_DVR_DISK_ERROR
    int NET_DVR_NOSUPPORT -> NET_DVR_NOSUPPORT
    int NET_DVR_BUSY -> NET_DVR_BUSY
    int NET_DVR_MODIFY_FAIL -> NET_DVR_MODIFY_FAIL
    int NET_DVR_PASSWORD_FORMAT_ERROR -> NET_DVR_PASSWORD_FORMAT_ERROR
    int NET_DVR_DISK_FORMATING -> NET_DVR_DISK_FORMATING
    int NET_DVR_DVRNORESOURCE -> NET_DVR_DVRNORESOURCE
    int NET_DVR_DVROPRATEFAILED -> NET_DVR_DVROPRATEFAILED
    int NET_DVR_OPENHOSTSOUND_FAIL -> NET_DVR_OPENHOSTSOUND_FAIL
    int NET_DVR_DVRVOICEOPENED -> NET_DVR_DVRVOICEOPENED
    int NET_DVR_TIMEINPUTERROR -> NET_DVR_TIMEINPUTERROR
    int NET_DVR_NOSPECFILE -> NET_DVR_NOSPECFILE
    int NET_DVR_CREATEFILE_ERROR -> NET_DVR_CREATEFILE_ERROR
    int NET_DVR_FILEOPENFAIL -> NET_DVR_FILEOPENFAIL
    int NET_DVR_OPERNOTFINISH -> NET_DVR_OPERNOTFINISH
    int NET_DVR_GETPLAYTIMEFAIL -> NET_DVR_GETPLAYTIMEFAIL
    int NET_DVR_PLAYFAIL -> NET_DVR_PLAYFAIL
    int NET_DVR_FILEFORMAT_ERROR -> NET_DVR_FILEFORMAT_ERROR
    int NET_DVR_DIR_ERROR -> NET_DVR_DIR_ERROR
    int NET_DVR_ALLOC_RESOURCE_ERROR -> NET_DVR_ALLOC_RESOURCE_ERROR
    int NET_DVR_AUDIO_MODE_ERROR -> NET_DVR_AUDIO_MODE_ERROR
    int NET_DVR_NOENOUGH_BUF -> NET_DVR_NOENOUGH_BUF
    int NET_DVR_CREATESOCKET_ERROR -> NET_DVR_CREATESOCKET_ERROR
    int NET_DVR_SETSOCKET_ERROR -> NET_DVR_SETSOCKET_ERROR
    int NET_DVR_MAX_NUM -> NET_DVR_MAX_NUM
    int NET_DVR_USERNOTEXIST -> NET_DVR_USERNOTEXIST
    int NET_DVR_WRITEFLASHERROR -> NET_DVR_WRITEFLASHERROR
    int NET_DVR_UPGRADEFAIL -> NET_DVR_UPGRADEFAIL
    int NET_DVR_CARDHAVEINIT -> NET_DVR_CARDHAVEINIT
    int NET_DVR_PLAYERFAILED -> NET_DVR_PLAYERFAILED
    int NET_DVR_MAX_USERNUM -> NET_DVR_MAX_USERNUM
    int NET_DVR_GETLOCALIPANDMACFAIL -> NET_DVR_GETLOCALIPANDMACFAIL
    int NET_DVR_NOENCODEING -> NET_DVR_NOENCODEING
    int NET_DVR_IPMISMATCH -> NET_DVR_IPMISMATCH
    int NET_DVR_MACMISMATCH -> NET_DVR_MACMISMATCH
    int NET_DVR_UPGRADELANGMISMATCH -> NET_DVR_UPGRADELANGMISMATCH
    int NET_DVR_MAX_PLAYERPORT -> NET_DVR_MAX_PLAYERPORT
    int NET_DVR_NOSPACEBACKUP -> NET_DVR_NOSPACEBACKUP
    int NET_DVR_NODEVICEBACKUP -> NET_DVR_NODEVICEBACKUP
    int NET_DVR_PICTURE_BITS_ERROR -> NET_DVR_PICTURE_BITS_ERROR
    int NET_DVR_PICTURE_DIMENSION_ERROR -> NET_DVR_PICTURE_DIMENSION_ERROR
    int NET_DVR_PICTURE_SIZ_ERROR -> NET_DVR_PICTURE_SIZ_ERROR
    int NET_DVR_LOADPLAYERSDKFAILED -> NET_DVR_LOADPLAYERSDKFAILED
    int NET_DVR_LOADPLAYERSDKPROC_ERROR -> NET_DVR_LOADPLAYERSDKPROC_ERROR
    int NET_DVR_LOADDSSDKFAILED -> NET_DVR_LOADDSSDKFAILED
    int NET_DVR_LOADDSSDKPROC_ERROR -> NET_DVR_LOADDSSDKPROC_ERROR
    int NET_DVR_DSSDK_ERROR -> NET_DVR_DSSDK_ERROR
    int NET_DVR_VOICEMONOPOLIZE -> NET_DVR_VOICEMONOPOLIZE
    int NET_DVR_JOINMULTICASTFAILED -> NET_DVR_JOINMULTICASTFAILED
    int NET_DVR_CREATEDIR_ERROR -> NET_DVR_CREATEDIR_ERROR
    int NET_DVR_BINDSOCKET_ERROR -> NET_DVR_BINDSOCKET_ERROR
    int NET_DVR_SOCKETCLOSE_ERROR -> NET_DVR_SOCKETCLOSE_ERROR
    int NET_DVR_USERID_ISUSING -> NET_DVR_USERID_ISUSING
    int NET_DVR_SOCKETLISTEN_ERROR -> NET_DVR_SOCKETLISTEN_ERROR
    int NET_DVR_PROGRAM_EXCEPTION -> NET_DVR_PROGRAM_EXCEPTION
    int NET_DVR_WRITEFILE_FAILED -> NET_DVR_WRITEFILE_FAILED
    int NET_DVR_FORMAT_READONLY -> NET_DVR_FORMAT_READONLY
    int NET_DVR_WITHSAMEUSERNAME -> NET_DVR_WITHSAMEUSERNAME
    int NET_DVR_DEVICETYPE_ERROR -> NET_DVR_DEVICETYPE_ERROR
    int NET_DVR_LANGUAGE_ERROR -> NET_DVR_LANGUAGE_ERROR
    int NET_DVR_PARAVERSION_ERROR -> NET_DVR_PARAVERSION_ERROR
    int NET_DVR_IPCHAN_NOTALIVE -> NET_DVR_IPCHAN_NOTALIVE
    int NET_DVR_RTSP_SDK_ERROR -> NET_DVR_RTSP_SDK_ERROR
    int NET_DVR_CONVERT_SDK_ERROR -> NET_DVR_CONVERT_SDK_ERROR
    int NET_DVR_IPC_COUNT_OVERFLOW -> NET_DVR_IPC_COUNT_OVERFLOW
    int NET_DVR_MAX_ADD_NUM -> NET_DVR_MAX_ADD_NUM
    int NET_DVR_PARAMMODE_ERROR -> NET_DVR_PARAMMODE_ERROR
    int NET_DVR_CODESPITTER_OFFLINE -> NET_DVR_CODESPITTER_OFFLINE
    int NET_DVR_BACKUP_COPYING -> NET_DVR_BACKUP_COPYING
    int NET_DVR_CHAN_NOTSUPPORT -> NET_DVR_CHAN_NOTSUPPORT
    int NET_DVR_CALLINEINVALID -> NET_DVR_CALLINEINVALID
    int NET_DVR_CALCANCELCONFLICT -> NET_DVR_CALCANCELCONFLICT
    int NET_DVR_CALPOINTOUTRANGE -> NET_DVR_CALPOINTOUTRANGE
    int NET_DVR_FILTERRECTINVALID -> NET_DVR_FILTERRECTINVALID
    int NET_DVR_DDNS_DEVOFFLINE -> NET_DVR_DDNS_DEVOFFLINE
    int NET_DVR_DDNS_INTER_ERROR -> NET_DVR_DDNS_INTER_ERROR
    int NET_DVR_FUNCTION_NOT_SUPPORT_OS -> NET_DVR_FUNCTION_NOT_SUPPORT_OS
    int NET_DVR_ALIAS_DUPLICATE -> NET_DVR_ALIAS_DUPLICATE
    int NET_DVR_RTSP_ERROR_NOENOUGHPRI -> NET_DVR_RTSP_ERROR_NOENOUGHPRI
    int NET_DVR_RTSP_ERROR_ALLOC_RESOURCE -> NET_DVR_RTSP_ERROR_ALLOC_RESOURCE
    int NET_DVR_RTSP_ERROR_PARAMETER -> NET_DVR_RTSP_ERROR_PARAMETER
    int NET_DVR_RTSP_ERROR_NO_URL -> NET_DVR_RTSP_ERROR_NO_URL
    int NET_DVR_RTSP_ERROR_FORCE_STOP -> NET_DVR_RTSP_ERROR_FORCE_STOP
    int NET_DVR_RTSP_GETPORTFAILED -> NET_DVR_RTSP_GETPORTFAILED
    int NET_DVR_RTSP_DESCRIBERROR -> NET_DVR_RTSP_DESCRIBERROR
    int NET_DVR_RTSP_DESCRIBESENDTIMEOUT -> NET_DVR_RTSP_DESCRIBESENDTIMEOUT
    int NET_DVR_RTSP_DESCRIBESENDERROR -> NET_DVR_RTSP_DESCRIBESENDERROR
    int NET_DVR_RTSP_DESCRIBERECVTIMEOUT -> NET_DVR_RTSP_DESCRIBERECVTIMEOUT
    int NET_DVR_RTSP_DESCRIBERECVDATALOST -> NET_DVR_RTSP_DESCRIBERECVDATALOST
    int NET_DVR_RTSP_DESCRIBERECVERROR -> NET_DVR_RTSP_DESCRIBERECVERROR
    int NET_DVR_RTSP_DESCRIBESERVERERR -> NET_DVR_RTSP_DESCRIBESERVERERR
    int NET_DVR_RTSP_SETUPSENDTIMEOUT -> NET_DVR_RTSP_SETUPSENDTIMEOUT
    int NET_DVR_RTSP_SETUPSENDERROR -> NET_DVR_RTSP_SETUPSENDERROR
    int NET_DVR_RTSP_SETUPRECVTIMEOUT -> NET_DVR_RTSP_SETUPRECVTIMEOUT
    int NET_DVR_RTSP_SETUPRECVDATALOST -> NET_DVR_RTSP_SETUPRECVDATALOST
    int NET_DVR_RTSP_SETUPRECVERROR -> NET_DVR_RTSP_SETUPRECVERROR
    int NET_DVR_RTSP_OVER_MAX_CHAN -> NET_DVR_RTSP_OVER_MAX_CHAN
    int NET_DVR_RTSP_PLAYSENDTIMEOUT -> NET_DVR_RTSP_PLAYSENDTIMEOUT
    int NET_DVR_RTSP_PLAYSENDERROR -> NET_DVR_RTSP_PLAYSENDERROR
    int NET_DVR_RTSP_PLAYRECVTIMEOUT -> NET_DVR_RTSP_PLAYRECVTIMEOUT
    int NET_DVR_RTSP_PLAYRECVDATALOST -> NET_DVR_RTSP_PLAYRECVDATALOST
    int NET_DVR_RTSP_PLAYRECVERROR -> NET_DVR_RTSP_PLAYRECVERROR
    int NET_DVR_RTSP_PLAYSERVERERR -> NET_DVR_RTSP_PLAYSERVERERR
    int NET_DVR_RTSP_TEARDOWNSENDTIMEOUT -> NET_DVR_RTSP_TEARDOWNSENDTIMEOUT
    int NET_DVR_RTSP_TEARDOWNSENDERROR -> NET_DVR_RTSP_TEARDOWNSENDERROR
    int NET_DVR_RTSP_TEARDOWNRECVTIMEOUT -> NET_DVR_RTSP_TEARDOWNRECVTIMEOUT
    int NET_DVR_RTSP_TEARDOWNRECVDATALOST -> NET_DVR_RTSP_TEARDOWNRECVDATALOST
    int NET_DVR_RTSP_TEARDOWNRECVERROR -> NET_DVR_RTSP_TEARDOWNRECVERROR
    int NET_DVR_RTSP_TEARDOWNSERVERERR -> NET_DVR_RTSP_TEARDOWNSERVERERR
com.hikvision.netsdk.SerialDataCallBack -> com.hikvision.netsdk.SerialDataCallBack:
    void fSerialDataCallBack(int,byte[],int) -> fSerialDataCallBack
com.hikvision.netsdk.VoiceDataCallBack -> com.hikvision.netsdk.VoiceDataCallBack:
    void fVoiceDataCallBack(int,byte[],int,int) -> fVoiceDataCallBack
com.hikvision.netsdk.WEP -> com.hikvision.netsdk.WEP:
    int dwAuthentication -> dwAuthentication
    int dwKeyLength -> dwKeyLength
    int dwKeyType -> dwKeyType
    int dwActive -> dwActive
    byte[][] sKeyInfo -> sKeyInfo
com.hikvision.netsdk.WPA_PSK -> com.hikvision.netsdk.WPA_PSK:
    int dwKeyLength -> dwKeyLength
    byte[] sKeyInfo -> sKeyInfo
    byte byEncryptType -> byEncryptType
com.hikvision.netsdk.WPA_WPA2 -> com.hikvision.netsdk.WPA_WPA2:
    byte byEncryptType -> byEncryptType
    byte byAuthType -> byAuthType
    com.hikvision.netsdk.EAP_TTLS struEapTtls -> struEapTtls
    com.hikvision.netsdk.EAP_PEAP struEapPeap -> struEapPeap
    com.hikvision.netsdk.EAP_TLS struEapTls -> struEapTls
com.hikvision.wifi.UdpClient.UdpClient -> com.hikvision.wifi.UdpClient.UdpClient:
    int config(java.lang.String,int,java.lang.String,java.lang.String) -> config
    int stop() -> stop
com.hikvision.wifi.UdpClient.UdpClientMsgCallback -> com.hikvision.wifi.UdpClient.UdpClientMsgCallback:
    void onMsgCallBack(int) -> onMsgCallBack
com.hikvision.wifi.configuration.BaseUtil -> com.hikvision.wifi.configuration.BaseUtil:
    java.lang.String getMaskIpAddress(android.content.Context) -> getMaskIpAddress
    java.lang.String getWifiSSID(android.content.Context) -> getWifiSSID
    java.lang.String long2ip(long) -> long2ip
    java.util.List getDataLength(java.lang.String,int,int) -> getDataLength
com.hikvision.wifi.configuration.Bonjour -> com.hikvision.wifi.configuration.Bonjour:
    java.lang.String serviceType -> serviceType
    com.hikvision.wifi.configuration.DeviceDiscoveryListener listener -> listener
    void setServiceType(java.lang.String) -> setServiceType
    java.lang.String getServiceType() -> getServiceType
    void setDeviceDiscoveryListener(com.hikvision.wifi.configuration.DeviceDiscoveryListener) -> setDeviceDiscoveryListener
    void startBonjour() -> startBonjour
    void stopBonjour() -> stopBonjour
com.hikvision.wifi.configuration.DeviceDiscoveryListener -> com.hikvision.wifi.configuration.DeviceDiscoveryListener:
    void onDeviceLost(com.hikvision.wifi.configuration.DeviceInfo) -> onDeviceLost
    void onDeviceFound(com.hikvision.wifi.configuration.DeviceInfo) -> onDeviceFound
com.hikvision.wifi.configuration.DeviceInfo -> com.hikvision.wifi.configuration.DeviceInfo:
    java.lang.String name -> name
    java.lang.String type -> type
    java.lang.String serialNo -> serialNo
    java.lang.String ip -> ip
    int port -> port
    com.hikvision.wifi.configuration.DeviceInfo$DevceState state -> state
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getSerialNo() -> getSerialNo
    void setSerialNo(java.lang.String) -> setSerialNo
    java.lang.String getIp() -> getIp
    void setIp(java.lang.String) -> setIp
    int getPort() -> getPort
    void setPort(int) -> setPort
    com.hikvision.wifi.configuration.DeviceInfo$DevceState getState() -> getState
    void setState(com.hikvision.wifi.configuration.DeviceInfo$DevceState) -> setState
    java.lang.String toString() -> toString
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
com.hikvision.wifi.configuration.DeviceInfo$DevceState -> com.hikvision.wifi.configuration.DeviceInfo$DevceState:
    com.hikvision.wifi.configuration.DeviceInfo$DevceState NORTH -> NORTH
    com.hikvision.wifi.configuration.DeviceInfo$DevceState WIFI -> WIFI
    com.hikvision.wifi.configuration.DeviceInfo$DevceState PLAT -> PLAT
    com.hikvision.wifi.configuration.DeviceInfo$DevceState[] ENUM$VALUES -> ENUM$VALUES
    com.hikvision.wifi.configuration.DeviceInfo$DevceState[] values() -> values
    com.hikvision.wifi.configuration.DeviceInfo$DevceState valueOf(java.lang.String) -> valueOf
com.hikvision.wifi.configuration.IBonjour -> com.hikvision.wifi.configuration.IBonjour:
    void startBonjour(android.content.Context) -> startBonjour
    void stopBonjour() -> stopBonjour
    void setDeviceDiscoveryListener(com.hikvision.wifi.configuration.DeviceDiscoveryListener) -> setDeviceDiscoveryListener
    void setServiceType(java.lang.String) -> setServiceType
com.hikvision.wifi.configuration.JmdnsBonjour -> com.hikvision.wifi.configuration.JmdnsBonjour:
    javax.jmdns.JmDNS jmdns -> jmdns
    com.hikvision.wifi.configuration.DeviceDiscoveryListener listener -> listener
    void startBonjour(android.content.Context) -> startBonjour
    void stopBonjour() -> stopBonjour
    void setDeviceDiscoveryListener(com.hikvision.wifi.configuration.DeviceDiscoveryListener) -> setDeviceDiscoveryListener
    void setServiceType(java.lang.String) -> setServiceType
com.hikvision.wifi.configuration.NSDBonjour -> com.hikvision.wifi.configuration.NSDBonjour:
    com.hikvision.wifi.configuration.DeviceDiscoveryListener listener -> listener
    android.net.nsd.NsdManager nsd -> nsd
    void startBonjour(android.content.Context) -> startBonjour
    void stopBonjour() -> stopBonjour
    void setDeviceDiscoveryListener(com.hikvision.wifi.configuration.DeviceDiscoveryListener) -> setDeviceDiscoveryListener
    void setServiceType(java.lang.String) -> setServiceType
com.hikvision.wifi.configuration.OneStepWifiConfigurationManager -> com.hikvision.wifi.configuration.OneStepWifiConfigurationManager:
    java.lang.String TAG -> TAG
    int HAS_SENDING -> HAS_SENDING
    int START_SUCESS -> START_SUCESS
    int PARAM_ERROR -> PARAM_ERROR
    java.lang.String TYPE -> TYPE
    android.content.Context contex -> contex
    java.lang.String maskIpAddress -> maskIpAddress
    com.hikvision.wifi.UdpClient.UdpClient udpClient -> udpClient
    boolean stop -> stop
    javax.jmdns.JmDNS jmdns -> jmdns
    com.hikvision.wifi.configuration.DeviceDiscoveryListener devDiscoveryListen -> devDiscoveryListen
    void setDeviceDiscoveryListener(com.hikvision.wifi.configuration.DeviceDiscoveryListener) -> setDeviceDiscoveryListener
    int startConfig(java.lang.String,java.lang.String) -> startConfig
    void stopConfig() -> stopConfig
    void startBonjour() -> startBonjour
    void stopBonjour() -> stopBonjour
    com.hikvision.wifi.configuration.DeviceInfo parseServiceEvent(javax.jmdns.ServiceEvent) -> parseServiceEvent
    com.hikvision.wifi.configuration.DeviceInfo$DevceState getState(java.lang.String) -> getState
    void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
    void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    com.hikvision.wifi.UdpClient.UdpClient access$0(com.hikvision.wifi.configuration.OneStepWifiConfigurationManager) -> access$0
    java.lang.String access$1(com.hikvision.wifi.configuration.OneStepWifiConfigurationManager) -> access$1
com.hikvision.wifi.configuration.OneStepWifiConfigurationManager$1 -> com.hikvision.wifi.configuration.OneStepWifiConfigurationManager$1:
    com.hikvision.wifi.configuration.OneStepWifiConfigurationManager this$0 -> this$0
    java.lang.String val$ssidStr -> val$ssidStr
    java.lang.String val$key -> val$key
    void run() -> run
com.hikvision.wifi.configuration.WifiConfigMessageCode -> com.hikvision.wifi.configuration.WifiConfigMessageCode:
    int SEND_INTERNAL_ERROR -> SEND_INTERNAL_ERROR
    int SEND_STOP -> SEND_STOP
    int OVER_MAX_TIMES -> OVER_MAX_TIMES
com.nostra13.universalimageloader.cache.disc.DiskCache -> com.nostra13.universalimageloader.cache.disc.DiskCache:
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String TEMP_IMAGE_POSTFIX -> TEMP_IMAGE_POSTFIX
    java.io.File cacheDir -> cacheDir
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.io.File getFile(java.lang.String) -> getFile
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void clear() -> clear
    void rememberUsage(java.lang.String) -> rememberUsage
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION_1 -> VERSION_1
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> LEGAL_KEY_PATTERN
    java.lang.String CLEAN -> CLEAN
    java.lang.String DIRTY -> DIRTY
    java.lang.String REMOVE -> REMOVE
    java.lang.String READ -> READ
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int maxFileCount -> maxFileCount
    int valueCount -> valueCount
    long size -> size
    int fileCount -> fileCount
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    int getMaxFileCount() -> getMaxFileCount
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    long fileCount() -> fileCount
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void trimToFileCount() -> trimToFileCount
    void delete() -> delete
    void validateKey(java.lang.String) -> validateKey
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.io.Writer access$0(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$0
    void access$1(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$1
    void access$2(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$2
    boolean access$3(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$3
    void access$4(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$4
    void access$5(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> access$5
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$6(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,long) -> access$6
    java.lang.String access$7(java.io.InputStream) -> access$7
    int access$8(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$8
    java.io.File access$9(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$9
    java.io.OutputStream access$10() -> access$10
    void access$11(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$11
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    void access$0(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$0
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$2(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$2
    boolean[] access$3(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$3
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry:
    java.lang.String key -> key
    long[] lengths -> lengths
    boolean readable -> readable
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[]) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$0(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$0
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$1(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1
    java.lang.String access$2(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$2
    void access$4(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> access$4
    void access$5(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$5
    void access$6(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> access$6
    long[] access$7(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$7
    long access$8(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$8
    void access$9(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> access$9
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot:
    java.lang.String key -> key
    long sequenceNumber -> sequenceNumber
    java.io.File[] files -> files
    java.io.InputStream[] ins -> ins
    long[] lengths -> lengths
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit() -> edit
    java.io.File getFile(int) -> getFile
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String ERROR_ARG_NEGATIVE -> ERROR_ARG_NEGATIVE
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> cache
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    void initCache(java.io.File,java.io.File,long,int) -> initCache
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.lang.String getKey(java.lang.String) -> getKey
    void setReserveCacheDir(java.io.File) -> setReserveCacheDir
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$0(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> access$0
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> this$0
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.nostra13.universalimageloader.cache.disc.impl.ext.Util:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
com.nostra13.universalimageloader.cache.memory.MemoryCache -> com.nostra13.universalimageloader.cache.memory.MemoryCache:
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    java.util.concurrent.Executor createTaskDistributor() -> createTaskDistributor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> createDiskCache
    java.io.File createReserveDiskCacheDir(android.content.Context) -> createReserveDiskCacheDir
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    int imageResOnDecryptFail -> imageResOnDecryptFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    android.graphics.drawable.Drawable imageOnDecryptFail -> imageOnDecryptFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean needDecrypt -> needDecrypt
    boolean method -> method
    java.lang.String postData -> postData
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldShowImageOnDecryptFail() -> shouldShowImageOnDecryptFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    android.graphics.drawable.Drawable getImageOnDecryptFail(android.content.res.Resources) -> getImageOnDecryptFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisk() -> isCacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    boolean isNeedDecrypt() -> isNeedDecrypt
    boolean getMethod() -> getMethod
    java.lang.String getPostData() -> getPostData
    void setPostData(java.lang.String) -> setPostData
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$0(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$0
    int access$1(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1
    int access$2(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2
    android.graphics.drawable.Drawable access$3(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3
    android.graphics.drawable.Drawable access$4(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$4
    android.graphics.drawable.Drawable access$5(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$5
    boolean access$6(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$6
    boolean access$7(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$7
    boolean access$8(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$8
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$9(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$9
    android.graphics.BitmapFactory$Options access$10(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$10
    int access$11(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$11
    boolean access$12(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$12
    java.lang.Object access$13(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$13
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$14(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$14
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$15(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$15
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$16(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$16
    android.os.Handler access$17(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$17
    boolean access$18(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$18
    boolean access$19(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$19
    boolean access$20(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$20
    java.lang.String access$21(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$21
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    int imageResOnDecryptFail -> imageResOnDecryptFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    android.graphics.drawable.Drawable imageOnDecryptFail -> imageOnDecryptFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean needDecrypt -> needDecrypt
    boolean method -> method
    java.lang.String postData -> postData
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnDecryptFail(int) -> showImageOnDecryptFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnDecryptFail(android.graphics.drawable.Drawable) -> showImageOnDecryptFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> cacheOnDisk
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder needDecrypt(boolean) -> needDecrypt
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder method(boolean) -> method
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postData(java.lang.String) -> postData
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$0(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$0
    int access$1(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1
    int access$2(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$2
    int access$3(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$3
    android.graphics.drawable.Drawable access$4(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$4
    android.graphics.drawable.Drawable access$5(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$5
    android.graphics.drawable.Drawable access$6(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$6
    android.graphics.drawable.Drawable access$7(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$7
    boolean access$8(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$8
    boolean access$9(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$9
    boolean access$10(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$10
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$11(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$11
    android.graphics.BitmapFactory$Options access$12(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$12
    int access$13(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$13
    boolean access$14(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$14
    java.lang.Object access$15(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$15
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$16(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$16
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$17(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$17
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$18(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$18
    android.os.Handler access$19(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$19
    boolean access$20(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$20
    boolean access$21(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$21
    boolean access$22(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$22
    java.lang.String access$23(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$23
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCache getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiskCache() -> getDiskCache
    void clearDiskCache() -> clearDiskCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDecryptDiskCache() -> getDecryptDiskCache
    void clearDecryptDiskCache() -> clearDecryptDiskCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener -> com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.cache.disc.DiskCache decryptDiskCache -> decryptDiskCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISK_CACHE_PARAMS -> WARNING_OVERLAP_DISK_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    long diskCacheSize -> diskCacheSize
    int diskCacheFileCount -> diskCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.cache.disc.DiskCache decryptDiskCache -> decryptDiskCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> diskCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCache) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> diskCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileCount(int) -> diskCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> diskCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder decryptDiskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> decryptDiskCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$0(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$0
    int access$1(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1
    int access$2(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$2
    int access$3(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$3
    int access$4(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$4
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$5(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$5
    java.util.concurrent.Executor access$6(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$6
    java.util.concurrent.Executor access$7(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$7
    int access$8(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$8
    int access$9(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$9
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$10(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$10
    com.nostra13.universalimageloader.cache.disc.DiskCache access$11(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$11
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$12(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$12
    com.nostra13.universalimageloader.cache.disc.DiskCache access$13(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$13
    com.nostra13.universalimageloader.core.DisplayImageOptions access$14(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$14
    com.nostra13.universalimageloader.core.download.ImageDownloader access$15(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$15
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$16(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$16
    boolean access$17(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$17
    boolean access$18(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$18
    boolean access$19(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$19
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
    java.io.InputStream getStream(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStream
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme() -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
    java.io.InputStream getStream(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStream
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme() -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.Executor taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask,com.nostra13.universalimageloader.core.DisplayImageOptions) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void fireCallback(java.lang.Runnable) -> fireCallback
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$0(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$0
    java.util.concurrent.Executor access$1(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$1
    java.util.concurrent.Executor access$2(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$2
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    com.nostra13.universalimageloader.core.DisplayImageOptions val$options -> val$options
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISK_CACHE -> LOG_LOAD_IMAGE_FROM_DISK_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISK -> LOG_CACHE_IMAGE_ON_DISK
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISK_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISK_CACHE_NULL
    java.util.Map mProgressListenerMap -> mProgressListenerMap
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    boolean syncLoading -> syncLoading
    boolean needDecrypt -> needDecrypt
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisk() -> tryCacheImageOnDisk
    boolean downloadImage() -> downloadImage
    boolean tryDecryptImage() -> tryDecryptImage
    boolean decryptImage() -> decryptImage
    boolean resizeAndSaveImage(int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$0(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$0
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    java.util.List val$progressListenerList -> val$progressListenerList
    int val$current -> val$current
    int val$total -> val$total
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    int length -> length
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECRYPT_ERROR -> DECRYPT_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] ENUM$VALUES -> ENUM$VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] ENUM$VALUES -> ENUM$VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom DECRYPT_DISC_CACHE -> DECRYPT_DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] ENUM$VALUES -> ENUM$VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] ENUM$VALUES -> ENUM$VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] ENUM$VALUES -> ENUM$VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SUBSAMPLE_IMAGE -> LOG_SUBSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientatiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    java.lang.String originalImageUri -> originalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions displayOptions -> displayOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    java.lang.String getOriginalImageUri() -> getOriginalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions getDisplayOptions() -> getDisplayOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisk -> animateFromDisk
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String CONTENT_CONTACTS_URI_PREFIX -> CONTENT_CONTACTS_URI_PREFIX
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
    java.io.InputStream getStream(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStream
    java.io.InputStream getStreamForDecryptFile(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamForDecryptFile
    java.io.InputStream getStreamFromNetwork(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromOtherSource
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme() -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    com.nostra13.universalimageloader.core.download.BaseImageDownloader this$0 -> this$0
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.nostra13.universalimageloader.core.download.BaseImageDownloader$2 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$2:
    com.nostra13.universalimageloader.core.download.BaseImageDownloader this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.nostra13.universalimageloader.core.download.DecryptFileInfo -> com.nostra13.universalimageloader.core.download.DecryptFileInfo:
    java.lang.String deviceSerial -> deviceSerial
    java.lang.String checkSum -> checkSum
    java.lang.String getDeviceSerial() -> getDeviceSerial
    void setDeviceSerial(java.lang.String) -> setDeviceSerial
    java.lang.String getCheckSum() -> getCheckSum
    void setCheckSum(java.lang.String) -> setCheckSum
com.nostra13.universalimageloader.core.download.HttpClientImageDownloader -> com.nostra13.universalimageloader.core.download.HttpClientImageDownloader:
    org.apache.http.client.HttpClient httpClient -> httpClient
    java.io.InputStream getStreamFromNetwork(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamFromNetwork
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DECRYPT -> DECRYPT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] ENUM$VALUES -> ENUM$VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.imageaware.NonViewAware -> com.nostra13.universalimageloader.core.imageaware.NonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.nostra13.universalimageloader.core.imageaware.ViewAware:
    java.lang.String WARN_CANT_SET_DRAWABLE -> WARN_CANT_SET_DRAWABLE
    java.lang.String WARN_CANT_SET_BITMAP -> WARN_CANT_SET_BITMAP
    java.lang.ref.Reference viewRef -> viewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.listener.PauseOnScrollListener -> com.nostra13.universalimageloader.core.listener.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.DiscCacheUtils -> com.nostra13.universalimageloader.utils.DiscCacheUtils:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> removeFromCache
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    int DEFAULT_MAX_BITMAP_DIMENSION -> DEFAULT_MAX_BITMAP_DIMENSION
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> maxBitmapSize
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$ViewScaleType
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$ViewScaleType() -> $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int CONTINUE_LOADING_PERCENTAGE -> CONTINUE_LOADING_PERCENTAGE
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> copyStream
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> copyStream
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> shouldStopLoading
    void readAndCloseStream(java.io.InputStream) -> readAndCloseStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.utils.IoUtils$CopyListener:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    boolean writeDebugLogs -> writeDebugLogs
    boolean writeLogs -> writeLogs
    void writeDebugLogs(boolean) -> writeDebugLogs
    void writeLogs(boolean) -> writeLogs
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.utils.MemoryCacheUtils:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> removeFromCache
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.utils.MemoryCacheUtils$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String EXTERNAL_STORAGE_PERMISSION -> EXTERNAL_STORAGE_PERMISSION
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.novell.sasl.client.DigestChallenge -> com.a.a.a.a:
    java.util.ArrayList m_realms -> a
    java.lang.String m_nonce -> b
    int m_qop -> c
    boolean m_staleFlag -> d
    int m_maxBuf -> e
    java.lang.String m_characterSet -> f
    java.lang.String m_algorithm -> g
    int m_cipherOptions -> h
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    void handleNonce(com.novell.sasl.client.ParsedDirective) -> a
    void handleRealm(com.novell.sasl.client.ParsedDirective) -> b
    void handleQop(com.novell.sasl.client.ParsedDirective) -> c
    void handleMaxbuf(com.novell.sasl.client.ParsedDirective) -> d
    void handleCharset(com.novell.sasl.client.ParsedDirective) -> e
    void handleAlgorithm(com.novell.sasl.client.ParsedDirective) -> f
    void handleCipher(com.novell.sasl.client.ParsedDirective) -> g
    void handleStale(com.novell.sasl.client.ParsedDirective) -> h
    java.util.ArrayList getRealms() -> a
    java.lang.String getNonce() -> b
    int getQop() -> c
    java.lang.String getAlgorithm() -> d
com.novell.sasl.client.DigestMD5SaslClient -> com.a.a.a.b:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    java.lang.String m_qopValue -> g
    char[] m_HA1 -> h
    java.lang.String m_digestURI -> i
    com.novell.sasl.client.DigestChallenge m_dc -> j
    java.lang.String m_clientNonce -> k
    java.lang.String m_realm -> l
    java.lang.String m_name -> m
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> a
    byte[] evaluateChallenge(byte[]) -> a
    char[] convertToHex(byte[]) -> b
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String createDigestResponse(byte[]) -> d
    boolean checkServerResponseAuth(byte[]) -> c
    char getHexChar(byte) -> a
    java.lang.String getClientNonce() -> b
com.novell.sasl.client.DirectiveList -> com.a.a.a.c:
    int m_curPos -> a
    int m_errorPos -> b
    java.lang.String m_directives -> c
    int m_state -> d
    java.util.ArrayList m_directiveList -> e
    int m_scanStart -> f
    void parseDirectives() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
    void addDirective(java.lang.String,boolean) -> a
    java.util.Iterator getIterator() -> b
com.novell.sasl.client.ParsedDirective -> com.a.a.a.d:
    int m_valueType -> a
    java.lang.String m_name -> b
    java.lang.String m_value -> c
    java.lang.String getValue() -> a
    java.lang.String getName() -> b
com.novell.sasl.client.ResponseAuth -> com.a.a.a.e:
    java.lang.String m_responseValue -> a
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    java.lang.String getResponseValue() -> a
com.novell.sasl.client.TokenParser -> com.a.a.a.f:
    int m_curPos -> a
    int m_scanStart -> b
    int m_state -> c
    java.lang.String m_tokens -> d
    java.lang.String parseToken() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
com.videogo.BuildConfig -> com.videogo.BuildConfig:
    boolean DEBUG -> DEBUG
com.videogo.EzvizApplication -> com.videogo.EzvizApplication:
    java.lang.String APP_KEY -> APP_KEY
    java.lang.String SECRET_KEY -> SECRET_KEY
    java.lang.String API_URL -> API_URL
    java.lang.String WEB_URL -> WEB_URL
    void onCreate() -> onCreate
com.videogo.EzvizBroadcastReceiver -> com.videogo.EzvizBroadcastReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.LoginSelectActivity -> com.videogo.LoginSelectActivity:
    com.videogo.openapi.EzvizAPI mEzvizAPI -> mEzvizAPI
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void openPlatformLoginDialog() -> openPlatformLoginDialog
    com.videogo.openapi.EzvizAPI access$0(com.videogo.LoginSelectActivity) -> access$0
com.videogo.LoginSelectActivity$1 -> com.videogo.LoginSelectActivity$1:
    com.videogo.LoginSelectActivity this$0 -> this$0
    android.widget.EditText val$editText -> val$editText
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.Manifest -> com.videogo.Manifest:
com.videogo.Manifest$permission -> com.videogo.Manifest$permission:
    java.lang.String C2D_MESSAGE -> C2D_MESSAGE
com.videogo.R -> com.videogo.R:
com.videogo.R$anim -> com.videogo.R$anim:
    int fade_down -> fade_down
    int fade_up -> fade_up
    int play_full_multiple_anim_bg -> play_full_multiple_anim_bg
    int rotate_clockwise -> rotate_clockwise
com.videogo.R$attr -> com.videogo.R$attr:
    int backButton -> backButton
    int background -> background
    int ptrListViewExtrasEnabled -> ptrListViewExtrasEnabled
    int ptrOverScroll -> ptrOverScroll
    int ptrRefreshableViewBackground -> ptrRefreshableViewBackground
    int ptrScrollingWhileRefreshingEnabled -> ptrScrollingWhileRefreshingEnabled
    int textColor -> textColor
com.videogo.R$color -> com.videogo.R$color:
    int a1_blue_color -> a1_blue_color
    int a1_orange_color -> a1_orange_color
    int active_color -> active_color
    int application_bg -> application_bg
    int articletext_backcolor -> articletext_backcolor
    int auto_blue_text -> auto_blue_text
    int auto_tip_text -> auto_tip_text
    int auto_wifi_blue -> auto_wifi_blue
    int auto_wifi_red -> auto_wifi_red
    int bar_text -> bar_text
    int bar_text_sel -> bar_text_sel
    int black -> black
    int black_bg -> black_bg
    int black_text -> black_text
    int blue -> blue
    int blue_text -> blue_text
    int cameralist_gray -> cameralist_gray
    int channel_item_bg -> channel_item_bg
    int color_r1_cancel_color -> color_r1_cancel_color
    int common_bg -> common_bg
    int common_hint_text -> common_hint_text
    int common_line -> common_line
    int common_sub_text -> common_sub_text
    int common_text -> common_text
    int common_text_sel -> common_text_sel
    int corsor_color -> corsor_color
    int dark_bg_20p -> dark_bg_20p
    int dark_bg_70p -> dark_bg_70p
    int divider -> divider
    int event_message_bg_selector -> event_message_bg_selector
    int event_message_from_tv -> event_message_from_tv
    int event_message_play_btn -> event_message_play_btn
    int fragment_line_color -> fragment_line_color
    int gray -> gray
    int gray_bg -> gray_bg
    int gray_text -> gray_text
    int green_text -> green_text
    int grey -> grey
    int leavemessage_gray -> leavemessage_gray
    int leavemessage_text_color -> leavemessage_text_color
    int leavemessage_time_text_color -> leavemessage_time_text_color
    int line_color -> line_color
    int loading_text -> loading_text
    int login_line_color -> login_line_color
    int message_bg -> message_bg
    int message_button_text -> message_button_text
    int message_button_text_selector -> message_button_text_selector
    int mode_bg -> mode_bg
    int my_list_deviver -> my_list_deviver
    int normal_color -> normal_color
    int orange_text -> orange_text
    int page_bg_color -> page_bg_color
    int page_change_gray -> page_change_gray
    int play_translucent_bg -> play_translucent_bg
    int possible_result_points -> possible_result_points
    int progress_back -> progress_back
    int progress_select -> progress_select
    int pureblack -> pureblack
    int r1_item_bg -> r1_item_bg
    int realplay_loading_text -> realplay_loading_text
    int record_alarm -> record_alarm
    int record_normal -> record_normal
    int record_osd -> record_osd
    int record_point -> record_point
    int record_time -> record_time
    int red -> red
    int reg_deal_text_bule -> reg_deal_text_bule
    int remotefile_line_color -> remotefile_line_color
    int remotefile_timebar_alarm_color -> remotefile_timebar_alarm_color
    int remotefile_timebar_color -> remotefile_timebar_color
    int remotelist_item_duration_text_color -> remotelist_item_duration_text_color
    int remotelist_item_select -> remotelist_item_select
    int result_view -> result_view
    int setting_hint_text -> setting_hint_text
    int shadow -> shadow
    int share_bule -> share_bule
    int share_green -> share_green
    int share_red -> share_red
    int share_tip_red -> share_tip_red
    int state_abnormal_text -> state_abnormal_text
    int state_normal_text -> state_normal_text
    int state_off_text -> state_off_text
    int tab_color -> tab_color
    int tab_sel_color -> tab_sel_color
    int table_value -> table_value
    int text_black -> text_black
    int textview_txtcolor_selector -> textview_txtcolor_selector
    int tip_bg -> tip_bg
    int tip_color -> tip_color
    int title_line -> title_line
    int title_text -> title_text
    int trans_bg_color -> trans_bg_color
    int translucent_black -> translucent_black
    int transparent -> transparent
    int transparent_bg -> transparent_bg
    int unopen -> unopen
    int upgrade_gray -> upgrade_gray
    int upgrade_green -> upgrade_green
    int upgrade_orange -> upgrade_orange
    int upgrade_red -> upgrade_red
    int upload_sel_count -> upload_sel_count
    int version_gray -> version_gray
    int viewfinder_frame -> viewfinder_frame
    int viewfinder_laser -> viewfinder_laser
    int viewfinder_mask -> viewfinder_mask
    int white -> white
    int yahei -> yahei
    int yellow_text -> yellow_text
com.videogo.R$dimen -> com.videogo.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int assistant_text_size -> assistant_text_size
    int button_text_size -> button_text_size
    int button_text_small_size -> button_text_small_size
    int content_text_size -> content_text_size
    int context_text_size -> context_text_size
    int defence_mode_layout_height -> defence_mode_layout_height
    int detector_state_layout_height -> detector_state_layout_height
    int device_set_arrow_padding -> device_set_arrow_padding
    int device_set_layout_height -> device_set_layout_height
    int device_set_layout_padding -> device_set_layout_padding
    int device_set_padding -> device_set_padding
    int device_set_sub_text_size -> device_set_sub_text_size
    int device_set_text_size -> device_set_text_size
    int device_upgrade_padding -> device_upgrade_padding
    int fun_height_size -> fun_height_size
    int guide_large_text_size -> guide_large_text_size
    int guide_text_size -> guide_text_size
    int large_text_size -> large_text_size
    int layout_margin_bottom -> layout_margin_bottom
    int layout_margin_left -> layout_margin_left
    int layout_margin_right -> layout_margin_right
    int layout_margin_top -> layout_margin_top
    int leavemessage_text_size -> leavemessage_text_size
    int loading_text_size -> loading_text_size
    int login_text_size -> login_text_size
    int logo_version_distance_left -> logo_version_distance_left
    int logo_version_distance_top -> logo_version_distance_top
    int maintab_message_count_text_size -> maintab_message_count_text_size
    int more_layout_height -> more_layout_height
    int pwd_text_size -> pwd_text_size
    int realplay_button_text_size -> realplay_button_text_size
    int realplay_channel_text_size -> realplay_channel_text_size
    int realplay_ratio_text_size -> realplay_ratio_text_size
    int realplay_text_size -> realplay_text_size
    int realplay_tip_text_size -> realplay_tip_text_size
    int remotelist_item_local_time_size -> remotelist_item_local_time_size
    int remotelist_item_more_text_size -> remotelist_item_more_text_size
    int remotelist_num_tip_size -> remotelist_num_tip_size
    int remotelist_time_text_size -> remotelist_time_text_size
    int remoteplayback_button_text_size -> remoteplayback_button_text_size
    int remoteplayback_channel_text_size -> remoteplayback_channel_text_size
    int remoteplayback_ratio_text_size -> remoteplayback_ratio_text_size
    int remoteplayback_text_size -> remoteplayback_text_size
    int remoteplayback_tip_text_size -> remoteplayback_tip_text_size
    int storage_layout_height -> storage_layout_height
    int storage_layout_padding -> storage_layout_padding
    int sub_button_text_size -> sub_button_text_size
    int sub_title_text_size -> sub_title_text_size
    int tab_button_text_size -> tab_button_text_size
    int tab_text_size -> tab_text_size
    int tab_text_size_half -> tab_text_size_half
    int thumbnail_text_size -> thumbnail_text_size
    int title_button_padding -> title_button_padding
    int title_text_size -> title_text_size
    int title_text_small_size -> title_text_small_size
    int top_left_btn_margin -> top_left_btn_margin
    int updatebar_content_height -> updatebar_content_height
    int updatebar_height -> updatebar_height
    int updatebar_padding -> updatebar_padding
    int version_text_size -> version_text_size
com.videogo.R$drawable -> com.videogo.R$drawable:
    int add_camera_button_dis -> add_camera_button_dis
    int alarm_encrypt_image_mid -> alarm_encrypt_image_mid
    int arrow_down -> arrow_down
    int auto_button_blue_sel -> auto_button_blue_sel
    int auto_button_bule -> auto_button_bule
    int auto_button_red -> auto_button_red
    int auto_button_red_sel -> auto_button_red_sel
    int auto_wifi_add_success_2 -> auto_wifi_add_success_2
    int auto_wifi_cicle_120 -> auto_wifi_cicle_120
    int auto_wifi_cicle_240 -> auto_wifi_cicle_240
    int auto_wifi_cicle_bg -> auto_wifi_cicle_bg
    int auto_wifi_failed -> auto_wifi_failed
    int auto_wifi_success -> auto_wifi_success
    int auto_wifi_wait -> auto_wifi_wait
    int auto_wifi_wait1 -> auto_wifi_wait1
    int auto_wifi_wait2 -> auto_wifi_wait2
    int auto_wifi_wait3 -> auto_wifi_wait3
    int auto_wifi_wait4 -> auto_wifi_wait4
    int back -> back
    int back_press -> back_press
    int backbtn_selector -> backbtn_selector
    int btn_auto_blue_selector -> btn_auto_blue_selector
    int btn_auto_red_selector -> btn_auto_red_selector
    int camera_list_item -> camera_list_item
    int camera_list_item_press -> camera_list_item_press
    int camera_list_refresh -> camera_list_refresh
    int cameralist_add_camer_btn -> cameralist_add_camer_btn
    int cameralist_add_camer_btn_sel -> cameralist_add_camer_btn_sel
    int cameralist_button_selector -> cameralist_button_selector
    int cameralist_history_video_selector -> cameralist_history_video_selector
    int cameralist_item_selector -> cameralist_item_selector
    int capture -> capture
    int capture_disable -> capture_disable
    int capture_press -> capture_press
    int capturebtn_selector -> capturebtn_selector
    int common_refresh -> common_refresh
    int common_refresh_indeterminate -> common_refresh_indeterminate
    int common_title -> common_title
    int common_title_back -> common_title_back
    int common_title_back_sel -> common_title_back_sel
    int common_title_back_selector -> common_title_back_selector
    int common_title_cancel -> common_title_cancel
    int common_title_cancel_sel -> common_title_cancel_sel
    int common_title_cancel_selector -> common_title_cancel_selector
    int common_title_confirm -> common_title_confirm
    int common_title_confirm_dis -> common_title_confirm_dis
    int common_title_confirm_sel -> common_title_confirm_sel
    int common_title_confirm_selector -> common_title_confirm_selector
    int common_title_input -> common_title_input
    int common_title_input_sel -> common_title_input_sel
    int common_title_input_selector -> common_title_input_selector
    int common_title_more -> common_title_more
    int common_title_more_sel -> common_title_more_sel
    int common_title_more_selector -> common_title_more_selector
    int common_title_refresh -> common_title_refresh
    int common_title_setup -> common_title_setup
    int common_title_setup_sel -> common_title_setup_sel
    int common_title_setup_selector -> common_title_setup_selector
    int common_title_share -> common_title_share
    int common_title_share_sel -> common_title_share_sel
    int common_title_share_selector -> common_title_share_selector
    int connect_reset -> connect_reset
    int control_bar_bg -> control_bar_bg
    int defalut_alarm -> defalut_alarm
    int default_figure -> default_figure
    int device_offline -> device_offline
    int display_frame -> display_frame
    int equipment -> equipment
    int equipment_sel -> equipment_sel
    int equipment_selector -> equipment_selector
    int event_list_fail_pic -> event_list_fail_pic
    int exit -> exit
    int exit_sel -> exit_sel
    int exit_selector -> exit_selector
    int graybtn -> graybtn
    int graybtn_press -> graybtn_press
    int graybtn_secetor -> graybtn_secetor
    int history_video -> history_video
    int history_video_dis -> history_video_dis
    int history_video_sel -> history_video_sel
    int input_shade -> input_shade
    int inputlayout_bg -> inputlayout_bg
    int leave_message_play -> leave_message_play
    int leave_message_play_sel -> leave_message_play_sel
    int leave_message_play_selector -> leave_message_play_selector
    int login_btn_selector -> login_btn_selector
    int login_logo -> login_logo
    int login_logo_button -> login_logo_button
    int login_logo_button_sel -> login_logo_button_sel
    int message_back -> message_back
    int message_back_sel -> message_back_sel
    int message_back_selector -> message_back_selector
    int message_border_bg -> message_border_bg
    int message_callhelp -> message_callhelp
    int message_door -> message_door
    int message_infrared -> message_infrared
    int message_play -> message_play
    int message_play_dis -> message_play_dis
    int message_play_sel -> message_play_sel
    int message_play_selector -> message_play_selector
    int message_smoke -> message_smoke
    int message_video -> message_video
    int message_video_dis -> message_video_dis
    int message_video_sel -> message_video_sel
    int message_video_selector -> message_video_selector
    int my_add -> my_add
    int my_cover -> my_cover
    int my_no_video -> my_no_video
    int my_progress_drawable -> my_progress_drawable
    int my_shoping -> my_shoping
    int nomessage -> nomessage
    int notify_bg -> notify_bg
    int number_bg -> number_bg
    int offline -> offline
    int opinion -> opinion
    int palyback_close -> palyback_close
    int palyback_close_sel -> palyback_close_sel
    int palyback_close_selector -> palyback_close_selector
    int palyback_date_down -> palyback_date_down
    int palyback_date_down_sel -> palyback_date_down_sel
    int palyback_full_down -> palyback_full_down
    int palyback_full_up -> palyback_full_up
    int palyback_pause -> palyback_pause
    int palyback_pause_sel -> palyback_pause_sel
    int palyback_previously -> palyback_previously
    int palyback_previously_sel -> palyback_previously_sel
    int palyback_previously_selector -> palyback_previously_selector
    int palyback_replay -> palyback_replay
    int palyback_time_bg -> palyback_time_bg
    int palyback_video -> palyback_video
    int palyback_video_now -> palyback_video_now
    int palyback_video_now_sel -> palyback_video_now_sel
    int palyback_video_now_selector -> palyback_video_now_selector
    int palyback_video_sel -> palyback_video_sel
    int palyback_video_selector -> palyback_video_selector
    int play -> play
    int play_balanced -> play_balanced
    int play_balanced_disabel -> play_balanced_disabel
    int play_balanced_sel -> play_balanced_sel
    int play_balanced_selector -> play_balanced_selector
    int play_big -> play_big
    int play_big_press -> play_big_press
    int play_bigbtn_selector -> play_bigbtn_selector
    int play_button_bg -> play_button_bg
    int play_button_sel -> play_button_sel
    int play_button_selector -> play_button_selector
    int play_close -> play_close
    int play_close_sel -> play_close_sel
    int play_close_selector -> play_close_selector
    int play_disable -> play_disable
    int play_flunet -> play_flunet
    int play_flunet_disabel -> play_flunet_disabel
    int play_flunet_sel -> play_flunet_sel
    int play_flunet_selector -> play_flunet_selector
    int play_full_loding_logo -> play_full_loding_logo
    int play_full_multiple -> play_full_multiple
    int play_full_multiple2 -> play_full_multiple2
    int play_full_multiple3 -> play_full_multiple3
    int play_full_multiple4 -> play_full_multiple4
    int play_full_multiple5 -> play_full_multiple5
    int play_full_pause -> play_full_pause
    int play_full_pause_sel -> play_full_pause_sel
    int play_full_pause_selector -> play_full_pause_selector
    int play_full_play -> play_full_play
    int play_full_play_sel -> play_full_play_sel
    int play_full_play_selector -> play_full_play_selector
    int play_full_previously -> play_full_previously
    int play_full_previously_sel -> play_full_previously_sel
    int play_full_previously_selector -> play_full_previously_selector
    int play_full_soundoff_btn_selector -> play_full_soundoff_btn_selector
    int play_full_soundon_btn_selector -> play_full_soundon_btn_selector
    int play_full_stop -> play_full_stop
    int play_full_stop_sel -> play_full_stop_sel
    int play_full_stop_selector -> play_full_stop_selector
    int play_full_video -> play_full_video
    int play_full_video_now -> play_full_video_now
    int play_full_video_now_sel -> play_full_video_now_sel
    int play_full_video_now_selector -> play_full_video_now_selector
    int play_full_video_sel -> play_full_video_sel
    int play_full_video_selector -> play_full_video_selector
    int play_hd -> play_hd
    int play_hd_disabel -> play_hd_disabel
    int play_hd_sel -> play_hd_sel
    int play_hd_selector -> play_hd_selector
    int play_play -> play_play
    int play_play_sel -> play_play_sel
    int play_play_selector -> play_play_selector
    int play_press -> play_press
    int play_previously -> play_previously
    int play_previously_disabel -> play_previously_disabel
    int play_previously_selector -> play_previously_selector
    int play_ptz -> play_ptz
    int play_ptz_disabel -> play_ptz_disabel
    int play_ptz_selector -> play_ptz_selector
    int play_small -> play_small
    int play_small_press -> play_small_press
    int play_smallbtn_selector -> play_smallbtn_selector
    int play_stop -> play_stop
    int play_stop_sel -> play_stop_sel
    int play_stop_selector -> play_stop_selector
    int play_talk -> play_talk
    int play_talk_disabel -> play_talk_disabel
    int play_talk_selector -> play_talk_selector
    int play_talkback -> play_talkback
    int play_talkback_sel -> play_talkback_sel
    int play_talkback_selector -> play_talkback_selector
    int play_video -> play_video
    int play_video_disabel -> play_video_disabel
    int play_video_record -> play_video_record
    int play_video_selector -> play_video_selector
    int play_video_start -> play_video_start
    int play_video_time_bg -> play_video_time_bg
    int playback_cut -> playback_cut
    int playback_cut_btn_selector -> playback_cut_btn_selector
    int playback_cut_disable -> playback_cut_disable
    int playback_cut_sel -> playback_cut_sel
    int playback_play -> playback_play
    int playback_play_sel -> playback_play_sel
    int playbackslider -> playbackslider
    int playbackslider_sel -> playbackslider_sel
    int playbtn_selector -> playbtn_selector
    int ptz_bg -> ptz_bg
    int ptz_bottom_sel -> ptz_bottom_sel
    int ptz_left_sel -> ptz_left_sel
    int ptz_right_sel -> ptz_right_sel
    int ptz_turn -> ptz_turn
    int ptz_turn_sel -> ptz_turn_sel
    int ptz_turn_selector -> ptz_turn_selector
    int ptz_up_sel -> ptz_up_sel
    int push_close -> push_close
    int push_close_sel -> push_close_sel
    int push_close_selector -> push_close_selector
    int refresh_selector -> refresh_selector
    int remote_cal_selector -> remote_cal_selector
    int remote_list_pause_btn_selector -> remote_list_pause_btn_selector
    int remote_list_play_btn_selector -> remote_list_play_btn_selector
    int remote_list_soundoff_btn_selector -> remote_list_soundoff_btn_selector
    int remote_list_soundon_btn_selector -> remote_list_soundon_btn_selector
    int remote_seekbar_style -> remote_seekbar_style
    int remote_seekbar_thumb -> remote_seekbar_thumb
    int seekbar_thumb -> seekbar_thumb
    int shipin7_alarm_msg_new -> shipin7_alarm_msg_new
    int small_button_cameralist -> small_button_cameralist
    int sound_off -> sound_off
    int sound_off_blue -> sound_off_blue
    int sound_off_sel -> sound_off_sel
    int sound_off_sel_blue -> sound_off_sel_blue
    int sound_on -> sound_on
    int sound_on_blue -> sound_on_blue
    int sound_on_sel -> sound_on_sel
    int sound_on_sel_blue -> sound_on_sel_blue
    int stop -> stop
    int stop_disable -> stop_disable
    int stop_press -> stop_press
    int stopbtn_selector -> stopbtn_selector
    int tiltle_button_selector -> tiltle_button_selector
    int tittel_button_bg -> tittel_button_bg
    int tittel_button_press_bg -> tittel_button_press_bg
    int top_bar_bg -> top_bar_bg
    int translucent -> translucent
    int video_file_watermark -> video_file_watermark
    int videogo_icon -> videogo_icon
    int waiting_bg -> waiting_bg
    int waiting_progressbar_bg -> waiting_progressbar_bg
    int water_alarm -> water_alarm
    int wifi_connect_tip -> wifi_connect_tip
com.videogo.R$id -> com.videogo.R$id:
    int TextView01 -> TextView01
    int TextView03 -> TextView03
    int addCameraContainer -> addCameraContainer
    int alarm_close_btn -> alarm_close_btn
    int alarm_info_rl -> alarm_info_rl
    int alarmlist_lv -> alarmlist_lv
    int alarmlist_ly -> alarmlist_ly
    int auto_focus -> auto_focus
    int btnAddCameraSuccess -> btnAddCameraSuccess
    int btnBack -> btnBack
    int btnFinish -> btnFinish
    int btnLineConnet -> btnLineConnet
    int btnLineConnetOk -> btnLineConnetOk
    int btnNext -> btnNext
    int btnReset -> btnReset
    int btnRetry -> btnRetry
    int camera_del_btn -> camera_del_btn
    int camera_item_btn -> camera_item_btn
    int camera_item_rl -> camera_item_rl
    int camera_list_gc_ly -> camera_list_gc_ly
    int camera_list_gc_tv -> camera_list_gc_tv
    int camera_list_refresh_btn -> camera_list_refresh_btn
    int camera_listview -> camera_listview
    int camera_name_tv -> camera_name_tv
    int cancel_btn -> cancel_btn
    int decode -> decode
    int decode_failed -> decode_failed
    int decode_succeeded -> decode_succeeded
    int default_figure_iv -> default_figure_iv
    int divider -> divider
    int edtPassword -> edtPassword
    int encode_failed -> encode_failed
    int encode_succeeded -> encode_succeeded
    int flt_layout -> flt_layout
    int footer_hint -> footer_hint
    int footer_hint_more -> footer_hint_more
    int footer_loading_layout -> footer_loading_layout
    int footer_progress -> footer_progress
    int from_tv -> from_tv
    int get_camera_fail_tip_ly -> get_camera_fail_tip_ly
    int get_sms_code_btn -> get_sms_code_btn
    int get_sms_code_lyt -> get_sms_code_lyt
    int goto_cameralist_btn -> goto_cameralist_btn
    int handle_lyt -> handle_lyt
    int header_arrow -> header_arrow
    int header_hint -> header_hint
    int header_hint_more -> header_hint_more
    int header_progress -> header_progress
    int header_text_layout -> header_text_layout
    int header_time -> header_time
    int header_time_layout -> header_time_layout
    int imgAnimation -> imgAnimation
    int imgLineConnectGuid -> imgLineConnectGuid
    int imgResetPic -> imgResetPic
    int imgStatus -> imgStatus
    int input_view1 -> input_view1
    int item_icon -> item_icon
    int item_icon_area -> item_icon_area
    int item_offline -> item_offline
    int item_play_btn -> item_play_btn
    int launch_product_query -> launch_product_query
    int lineConnectContainer -> lineConnectContainer
    int message1 -> message1
    int message2 -> message2
    int message_content -> message_content
    int message_from -> message_from
    int message_image -> message_image
    int message_layout -> message_layout
    int message_list -> message_list
    int message_num_tv -> message_num_tv
    int message_play_layout -> message_play_layout
    int message_time -> message_time
    int message_type -> message_type
    int message_video_layout -> message_video_layout
    int mid_vertical_view -> mid_vertical_view
    int myRelativeLayout -> myRelativeLayout
    int name_tv -> name_tv
    int new_password -> new_password
    int no_camera_tip_ly -> no_camera_tip_ly
    int no_message_layout -> no_message_layout
    int no_more_hint -> no_more_hint
    int no_more_text -> no_more_text
    int offline_bg -> offline_bg
    int phone_et -> phone_et
    int phone_lyt -> phone_lyt
    int platform_login_btn -> platform_login_btn
    int play_video_layout -> play_video_layout
    int preview_view -> preview_view
    int ptz_bottom_btn -> ptz_bottom_btn
    int ptz_close_btn -> ptz_close_btn
    int ptz_control_ly -> ptz_control_ly
    int ptz_flip_btn -> ptz_flip_btn
    int ptz_left_btn -> ptz_left_btn
    int ptz_right_btn -> ptz_right_btn
    int ptz_top_btn -> ptz_top_btn
    int quality_balanced_btn -> quality_balanced_btn
    int quality_close_btn -> quality_close_btn
    int quality_flunet_btn -> quality_flunet_btn
    int quality_hd_btn -> quality_hd_btn
    int quit -> quit
    int realplay_area -> realplay_area
    int realplay_back_btn -> realplay_back_btn
    int realplay_capture_iv -> realplay_capture_iv
    int realplay_capture_rl -> realplay_capture_rl
    int realplay_capture_watermark_iv -> realplay_capture_watermark_iv
    int realplay_control_bar -> realplay_control_bar
    int realplay_control_rl -> realplay_control_rl
    int realplay_display_view -> realplay_display_view
    int realplay_flow_tv -> realplay_flow_tv
    int realplay_full_flow_ly -> realplay_full_flow_ly
    int realplay_full_flow_tv -> realplay_full_flow_tv
    int realplay_full_operate_bar -> realplay_full_operate_bar
    int realplay_full_play_btn -> realplay_full_play_btn
    int realplay_full_previously_btn -> realplay_full_previously_btn
    int realplay_full_rate_tv -> realplay_full_rate_tv
    int realplay_full_sound_btn -> realplay_full_sound_btn
    int realplay_full_video_btn -> realplay_full_video_btn
    int realplay_full_video_container -> realplay_full_video_container
    int realplay_full_video_start_btn -> realplay_full_video_start_btn
    int realplay_loading_iv -> realplay_loading_iv
    int realplay_loading_ly -> realplay_loading_ly
    int realplay_loading_pb_ly -> realplay_loading_pb_ly
    int realplay_loading_rl -> realplay_loading_rl
    int realplay_loading_tv -> realplay_loading_tv
    int realplay_operate_bar -> realplay_operate_bar
    int realplay_page_ly -> realplay_page_ly
    int realplay_pages_gallery -> realplay_pages_gallery
    int realplay_play_btn -> realplay_play_btn
    int realplay_play_iv -> realplay_play_iv
    int realplay_play_rl -> realplay_play_rl
    int realplay_previously_btn -> realplay_previously_btn
    int realplay_ptz_btn -> realplay_ptz_btn
    int realplay_quality_btn -> realplay_quality_btn
    int realplay_ratio_tv -> realplay_ratio_tv
    int realplay_record_iv -> realplay_record_iv
    int realplay_record_ly -> realplay_record_ly
    int realplay_record_tv -> realplay_record_tv
    int realplay_sound_btn -> realplay_sound_btn
    int realplay_stop_btn -> realplay_stop_btn
    int realplay_sv -> realplay_sv
    int realplay_sv_rl -> realplay_sv_rl
    int realplay_sv_view -> realplay_sv_view
    int realplay_talk_btn -> realplay_talk_btn
    int realplay_tip_tv -> realplay_tip_tv
    int realplay_title_tv -> realplay_title_tv
    int realplay_top_bar -> realplay_top_bar
    int realplay_video_btn -> realplay_video_btn
    int realplay_video_container -> realplay_video_container
    int realplay_video_start_btn -> realplay_video_start_btn
    int realplay_waiting_lr -> realplay_waiting_lr
    int realplay_watting_pb -> realplay_watting_pb
    int realplay_watting_tv -> realplay_watting_tv
    int realplay_wnd_sv -> realplay_wnd_sv
    int refresh_button -> refresh_button
    int refresh_layout -> refresh_layout
    int refresh_tip -> refresh_tip
    int remoteplayback_begin_time_tv -> remoteplayback_begin_time_tv
    int remoteplayback_capture_iv -> remoteplayback_capture_iv
    int remoteplayback_capture_rl -> remoteplayback_capture_rl
    int remoteplayback_capture_watermark_iv -> remoteplayback_capture_watermark_iv
    int remoteplayback_control_rl -> remoteplayback_control_rl
    int remoteplayback_end_time_tv -> remoteplayback_end_time_tv
    int remoteplayback_file_time_bar -> remoteplayback_file_time_bar
    int remoteplayback_flow_tv -> remoteplayback_flow_tv
    int remoteplayback_full_down_btn -> remoteplayback_full_down_btn
    int remoteplayback_full_flow_ly -> remoteplayback_full_flow_ly
    int remoteplayback_full_flow_tv -> remoteplayback_full_flow_tv
    int remoteplayback_full_operate_bar -> remoteplayback_full_operate_bar
    int remoteplayback_full_play_btn -> remoteplayback_full_play_btn
    int remoteplayback_full_previously_btn -> remoteplayback_full_previously_btn
    int remoteplayback_full_rate_tv -> remoteplayback_full_rate_tv
    int remoteplayback_full_sound_btn -> remoteplayback_full_sound_btn
    int remoteplayback_full_video_btn -> remoteplayback_full_video_btn
    int remoteplayback_full_video_container -> remoteplayback_full_video_container
    int remoteplayback_full_video_start_btn -> remoteplayback_full_video_start_btn
    int remoteplayback_loading_iv -> remoteplayback_loading_iv
    int remoteplayback_loading_ly -> remoteplayback_loading_ly
    int remoteplayback_loading_pb_ly -> remoteplayback_loading_pb_ly
    int remoteplayback_loading_play_btn -> remoteplayback_loading_play_btn
    int remoteplayback_loading_tv -> remoteplayback_loading_tv
    int remoteplayback_operate_bar -> remoteplayback_operate_bar
    int remoteplayback_page_ly -> remoteplayback_page_ly
    int remoteplayback_play_btn -> remoteplayback_play_btn
    int remoteplayback_play_rl -> remoteplayback_play_rl
    int remoteplayback_previously_btn -> remoteplayback_previously_btn
    int remoteplayback_progress_ly -> remoteplayback_progress_ly
    int remoteplayback_progress_seekbar -> remoteplayback_progress_seekbar
    int remoteplayback_progressbar -> remoteplayback_progressbar
    int remoteplayback_ratio_tv -> remoteplayback_ratio_tv
    int remoteplayback_record_iv -> remoteplayback_record_iv
    int remoteplayback_record_ly -> remoteplayback_record_ly
    int remoteplayback_record_tv -> remoteplayback_record_tv
    int remoteplayback_replay_btn -> remoteplayback_replay_btn
    int remoteplayback_small_previously_btn -> remoteplayback_small_previously_btn
    int remoteplayback_small_video_btn -> remoteplayback_small_video_btn
    int remoteplayback_small_video_container -> remoteplayback_small_video_container
    int remoteplayback_small_video_start_btn -> remoteplayback_small_video_start_btn
    int remoteplayback_sound_btn -> remoteplayback_sound_btn
    int remoteplayback_sv -> remoteplayback_sv
    int remoteplayback_sv_rl -> remoteplayback_sv_rl
    int remoteplayback_sv_view -> remoteplayback_sv_view
    int remoteplayback_time_tv -> remoteplayback_time_tv
    int remoteplayback_timebar -> remoteplayback_timebar
    int remoteplayback_timebar_rl -> remoteplayback_timebar_rl
    int remoteplayback_tip_tv -> remoteplayback_tip_tv
    int remoteplayback_video_btn -> remoteplayback_video_btn
    int remoteplayback_video_container -> remoteplayback_video_container
    int remoteplayback_video_start_btn -> remoteplayback_video_start_btn
    int restart_preview -> restart_preview
    int return_scan_result -> return_scan_result
    int serial_no_add_title_ryt -> serial_no_add_title_ryt
    int shipin7_logo_lyt -> shipin7_logo_lyt
    int sign_et -> sign_et
    int sms_code_et -> sms_code_et
    int sms_code_lyt -> sms_code_lyt
    int sms_verify_dailog_ly -> sms_verify_dailog_ly
    int tab_alarmlist_btn -> tab_alarmlist_btn
    int tab_alarmlist_rl -> tab_alarmlist_rl
    int tab_deviceother_btn -> tab_deviceother_btn
    int tab_deviceother_rl -> tab_deviceother_rl
    int tab_devicepicture_btn -> tab_devicepicture_btn
    int tab_devicepicture_rl -> tab_devicepicture_rl
    int tab_devicevideo_btn -> tab_devicevideo_btn
    int tab_devicevideo_rl -> tab_devicevideo_rl
    int tab_remoteplayback_btn -> tab_remoteplayback_btn
    int tab_remoteplayback_rl -> tab_remoteplayback_rl
    int tab_setdevice_btn -> tab_setdevice_btn
    int tab_setdevice_rl -> tab_setdevice_rl
    int tag_key_position -> tag_key_position
    int talkback_close_btn -> talkback_close_btn
    int talkback_control_btn -> talkback_control_btn
    int talkback_rv -> talkback_rv
    int time_tv -> time_tv
    int tipBotton -> tipBotton
    int tipTop -> tipTop
    int title_bar -> title_bar
    int tvDeviceWifiConfigTip -> tvDeviceWifiConfigTip
    int tvIntroduce1 -> tvIntroduce1
    int tvIntroduce2 -> tvIntroduce2
    int tvReset -> tvReset
    int tvSSID -> tvSSID
    int tvStatus -> tvStatus
    int tvTip -> tvTip
    int tvTitle -> tvTitle
    int txtResult -> txtResult
    int userid_et -> userid_et
    int userid_lyt -> userid_lyt
    int viewfinder_view -> viewfinder_view
    int wait_bar -> wait_bar
    int wait_tv -> wait_tv
    int watting_pb -> watting_pb
    int web_login_btn -> web_login_btn
    int webview -> webview
com.videogo.R$layout -> com.videogo.R$layout:
    int auto_wifi_connecting -> auto_wifi_connecting
    int auto_wifi_net_config -> auto_wifi_net_config
    int auto_wifi_reset_introduce -> auto_wifi_reset_introduce
    int cameralist_page -> cameralist_page
    int cameralist_small_item -> cameralist_small_item
    int capture_activity -> capture_activity
    int line_connecting_introduce_activity -> line_connecting_introduce_activity
    int login_page -> login_page
    int message_list_item -> message_list_item
    int message_page -> message_page
    int no_more_footer -> no_more_footer
    int notifier_alarmloginfo_list_item -> notifier_alarmloginfo_list_item
    int notifier_page -> notifier_page
    int password_error_layout -> password_error_layout
    int pull_to_refresh_footer -> pull_to_refresh_footer
    int pull_to_refresh_header -> pull_to_refresh_header
    int realplay_page -> realplay_page
    int realplay_ptz_wnd -> realplay_ptz_wnd
    int realplay_quality_wnd -> realplay_quality_wnd
    int realplay_talkback_wnd -> realplay_talkback_wnd
    int realplayer_item -> realplayer_item
    int realplayer_page -> realplayer_page
    int remote_playback_page -> remote_playback_page
    int sms_verify_dialog -> sms_verify_dialog
    int wait_dialog -> wait_dialog
    int web_page -> web_page
com.videogo.R$raw -> com.videogo.R$raw:
    int beep -> beep
    int paizhao -> paizhao
    int record -> record
com.videogo.R$string -> com.videogo.R$string:
    int acquire -> acquire
    int added_camera_success_txt -> added_camera_success_txt
    int alarm_message_del_fail_network_exception -> alarm_message_del_fail_network_exception
    int alarm_message_del_fail_txt -> alarm_message_del_fail_txt
    int alarm_type_baby_cry -> alarm_type_baby_cry
    int alarm_type_door -> alarm_type_door
    int alarm_type_gas -> alarm_type_gas
    int alarm_type_infrared -> alarm_type_infrared
    int alarm_type_motion_detection -> alarm_type_motion_detection
    int alarm_type_person_alarm -> alarm_type_person_alarm
    int alarm_type_remotecontrol -> alarm_type_remotecontrol
    int alarm_type_smoke -> alarm_type_smoke
    int alarm_type_unknown -> alarm_type_unknown
    int alarm_type_urgent_button -> alarm_type_urgent_button
    int alarm_type_water -> alarm_type_water
    int already_reset -> already_reset
    int aotu_wifi_add_device_success -> aotu_wifi_add_device_success
    int app_name -> app_name
    int auto_wifi_add_device_failed -> auto_wifi_add_device_failed
    int auto_wifi_cer_config_title -> auto_wifi_cer_config_title
    int auto_wifi_config_tip -> auto_wifi_config_tip
    int auto_wifi_connecting_failed -> auto_wifi_connecting_failed
    int auto_wifi_connecting_msg1 -> auto_wifi_connecting_msg1
    int auto_wifi_connecting_msg2 -> auto_wifi_connecting_msg2
    int auto_wifi_connecting_msg3 -> auto_wifi_connecting_msg3
    int auto_wifi_dialog_btn_wifi -> auto_wifi_dialog_btn_wifi
    int auto_wifi_dialog_connecting_msg -> auto_wifi_dialog_connecting_msg
    int auto_wifi_dialog_title_wifi_required -> auto_wifi_dialog_title_wifi_required
    int auto_wifi_line_connect -> auto_wifi_line_connect
    int auto_wifi_line_connected -> auto_wifi_line_connected
    int auto_wifi_line_msg -> auto_wifi_line_msg
    int auto_wifi_net -> auto_wifi_net
    int auto_wifi_network_add_device -> auto_wifi_network_add_device
    int auto_wifi_register_failed -> auto_wifi_register_failed
    int auto_wifi_ssid -> auto_wifi_ssid
    int auto_wifi_title_add_device -> auto_wifi_title_add_device
    int camera_not_online -> camera_not_online
    int cameras_txt -> cameras_txt
    int cancel -> cancel
    int certain -> certain
    int common_passwd_error -> common_passwd_error
    int complete_txt -> complete_txt
    int confirm -> confirm
    int connect_device_to_router -> connect_device_to_router
    int countdown -> countdown
    int detail_del_device_btn_tip -> detail_del_device_btn_tip
    int detail_del_device_success -> detail_del_device_success
    int device_picture -> device_picture
    int device_wificonfig_hasline_introduce -> device_wificonfig_hasline_introduce
    int exit -> exit
    int exit_tip -> exit_tip
    int get_device_picture_fail -> get_device_picture_fail
    int get_message_fail_service_exception -> get_message_fail_service_exception
    int get_sms_code -> get_sms_code
    int get_sms_code_fail -> get_sms_code_fail
    int getlist_fail_becauseof_network -> getlist_fail_becauseof_network
    int goto_cameralist_page_txt -> goto_cameralist_page_txt
    int how_to_reset -> how_to_reset
    int if_your_device_has_been_used -> if_your_device_has_been_used
    int if_your_device_has_set_time -> if_your_device_has_set_time
    int input_device_picture_size -> input_device_picture_size
    int input_device_picture_uuid -> input_device_picture_uuid
    int input_device_video_uuid -> input_device_video_uuid
    int later_alarm -> later_alarm
    int loading -> loading
    int local_network_exception -> local_network_exception
    int localmgt_video_square_txt -> localmgt_video_square_txt
    int login_password_tv_txt -> login_password_tv_txt
    int message_come_from_tip -> message_come_from_tip
    int message_encrypt_inputpsw_tip_title -> message_encrypt_inputpsw_tip_title
    int message_live -> message_live
    int message_no_data_text -> message_no_data_text
    int message_refresh_fail_network_exception -> message_refresh_fail_network_exception
    int message_refresh_fail_server_exception -> message_refresh_fail_server_exception
    int message_video -> message_video
    int next_button_txt -> next_button_txt
    int no_more_alarm_tip -> no_more_alarm_tip
    int no_more_leave_tip -> no_more_leave_tip
    int open_camera_fail -> open_camera_fail
    int platform_login_button_txt -> platform_login_button_txt
    int please_input_phonenumber_txt -> please_input_phonenumber_txt
    int please_input_platform_accesstoken_txt -> please_input_platform_accesstoken_txt
    int please_input_platform_sms_txt -> please_input_platform_sms_txt
    int please_input_sign_get_sms_txt -> please_input_sign_get_sms_txt
    int please_input_sign_txt -> please_input_sign_txt
    int please_input_userid_txt -> please_input_userid_txt
    int please_open_wifi_network -> please_open_wifi_network
    int press_to_talk_release_to_listen -> press_to_talk_release_to_listen
    int push_event_from -> push_event_from
    int push_event_get -> push_event_get
    int push_event_get_count -> push_event_get_count
    int push_out_event_alarm_title -> push_out_event_alarm_title
    int realplay_continue -> realplay_continue
    int realplay_encrypt_password_error_message -> realplay_encrypt_password_error_message
    int realplay_encrypt_password_error_title -> realplay_encrypt_password_error_title
    int realplay_fail_connect_device -> realplay_fail_connect_device
    int realplay_fail_device_not_exist -> realplay_fail_device_not_exist
    int realplay_loading -> realplay_loading
    int realplay_net_warn -> realplay_net_warn
    int realplay_password_error_message1 -> realplay_password_error_message1
    int realplay_password_error_message3 -> realplay_password_error_message3
    int realplay_password_error_title -> realplay_password_error_title
    int realplay_play_fail -> realplay_play_fail
    int realplay_play_fail_becauseof_network -> realplay_play_fail_becauseof_network
    int realplay_play_talkback_fail -> realplay_play_talkback_fail
    int realplay_play_talkback_fail_ison -> realplay_play_talkback_fail_ison
    int realplay_play_talkback_fail_privacy -> realplay_play_talkback_fail_privacy
    int realplay_set_fail_network -> realplay_set_fail_network
    int realplay_set_fail_status -> realplay_set_fail_status
    int realplay_set_vediomode_fail -> realplay_set_vediomode_fail
    int realplay_stop -> realplay_stop
    int receice_leave_msg_audio -> receice_leave_msg_audio
    int receice_leave_msg_video -> receice_leave_msg_video
    int refresh -> refresh
    int remoteplayback_SDCard_disable_use -> remoteplayback_SDCard_disable_use
    int remoteplayback_capture_fail -> remoteplayback_capture_fail
    int remoteplayback_capture_fail_for_memory -> remoteplayback_capture_fail_for_memory
    int remoteplayback_connect_device_error -> remoteplayback_connect_device_error
    int remoteplayback_connect_server_error -> remoteplayback_connect_server_error
    int remoteplayback_fail -> remoteplayback_fail
    int remoteplayback_norecordfile -> remoteplayback_norecordfile
    int remoteplayback_norecordfile_alarm -> remoteplayback_norecordfile_alarm
    int remoteplayback_over_link -> remoteplayback_over_link
    int remoteplayback_record_fail -> remoteplayback_record_fail
    int remoteplayback_record_fail_for_memory -> remoteplayback_record_fail_for_memory
    int remoteplayback_searchfile_fail_for_device -> remoteplayback_searchfile_fail_for_device
    int remoteplayback_searchfile_fail_for_network -> remoteplayback_searchfile_fail_for_network
    int reset_10_sec_to_release -> reset_10_sec_to_release
    int reset_device -> reset_device
    int retry -> retry
    int scan_cue_txt -> scan_cue_txt
    int scan_device_add_by_others -> scan_device_add_by_others
    int scan_title_txt -> scan_title_txt
    int select_date -> select_date
    int serial_number_error -> serial_number_error
    int set_device_wifi_network_need_reset_the_device -> set_device_wifi_network_need_reset_the_device
    int setting_video_level -> setting_video_level
    int sms_verify_code_received -> sms_verify_code_received
    int start_voice_talk -> start_voice_talk
    int stop_in_seconds -> stop_in_seconds
    int submit_sms_code -> submit_sms_code
    int talking -> talking
    int today -> today
    int unknow_ssid -> unknow_ssid
    int update_exit -> update_exit
    int verify_sms_code_fail -> verify_sms_code_fail
    int video_square -> video_square
    int wait -> wait
    int web_login_button_txt -> web_login_button_txt
    int wifi_connection_finish_need_refresh -> wifi_connection_finish_need_refresh
    int wifi_set -> wifi_set
    int wired_connection -> wired_connection
    int xlistview_footer_hint_no_more_device -> xlistview_footer_hint_no_more_device
    int xlistview_footer_hint_normal -> xlistview_footer_hint_normal
    int xlistview_footer_hint_ready -> xlistview_footer_hint_ready
    int xlistview_footer_no_more -> xlistview_footer_no_more
    int xlistview_footer_no_more_msg -> xlistview_footer_no_more_msg
    int xlistview_header_hint_loading -> xlistview_header_hint_loading
    int xlistview_header_hint_more -> xlistview_header_hint_more
    int xlistview_header_hint_normal -> xlistview_header_hint_normal
    int xlistview_header_hint_ready -> xlistview_header_hint_ready
    int xlistview_header_last_time -> xlistview_header_last_time
com.videogo.R$style -> com.videogo.R$style:
    int CommonGridView -> CommonGridView
    int CommonListView -> CommonListView
    int TitleBar_Dark -> TitleBar_Dark
    int TitleBar_Light -> TitleBar_Light
    int TitleBar_Light_Web -> TitleBar_Light_Web
    int popwindowUpAnim -> popwindowUpAnim
com.videogo.R$styleable -> com.videogo.R$styleable:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int[] TitleBar -> TitleBar
    int TitleBar_backButton -> TitleBar_backButton
    int TitleBar_background -> TitleBar_background
    int TitleBar_textColor -> TitleBar_textColor
com.videogo.ad.AdDraw -> com.videogo.ad.AdDraw:
    android.graphics.Bitmap a -> a
    int b -> b
    java.nio.FloatBuffer c -> c
    java.nio.FloatBuffer d -> d
    java.nio.ShortBuffer e -> e
    void init(javax.microedition.khronos.opengles.GL10) -> init
    void drawframe(javax.microedition.khronos.opengles.GL10,int,int) -> drawframe
    int pow2(int) -> pow2
    void delete(javax.microedition.khronos.opengles.GL10) -> delete
com.videogo.ad.AdRenderer -> com.videogo.ad.AdRenderer:
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    void init(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> init
    void change(javax.microedition.khronos.opengles.GL10,int,int) -> change
    void drawframe(javax.microedition.khronos.opengles.GL10) -> drawframe
    void drawBackgroundImage(javax.microedition.khronos.opengles.GL10,int) -> drawBackgroundImage
    int pow2(int) -> pow2
    void delete(javax.microedition.khronos.opengles.GL10) -> delete
com.videogo.ad.AdTexture2D -> com.videogo.ad.AdTexture2D:
    int k -> k
    int l -> l
    int m -> m
    float[] n -> n
    float[] o -> o
    java.nio.ByteBuffer p -> p
    void a(javax.microedition.khronos.opengles.GL10,int,int,int,int) -> a
    void a(int,int,int[],int[]) -> a
    void RGB565SurfaceInit(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,int,int) -> RGB565SurfaceInit
    void DrawIntoTextureRGB565(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,int,int) -> DrawIntoTextureRGB565
com.videogo.ad.AdThread -> com.videogo.ad.AdThread:
    android.view.SurfaceHolder q -> q
    boolean r -> r
    android.graphics.Bitmap a -> a
    javax.microedition.khronos.egl.EGLContext s -> s
    javax.microedition.khronos.egl.EGL10 t -> t
    javax.microedition.khronos.egl.EGLDisplay u -> u
    javax.microedition.khronos.opengles.GL10 v -> v
    javax.microedition.khronos.egl.EGLSurface w -> w
    void a() -> a
    void b() -> b
    void c() -> c
    void run() -> run
    void requestExitAndWait() -> requestExitAndWait
com.videogo.ad.GraphicUtil -> com.videogo.ad.GraphicUtil:
    java.util.Hashtable y -> y
    java.util.Hashtable z -> z
    java.util.Hashtable A -> A
    java.util.Hashtable B -> B
    java.util.Hashtable C -> C
    java.util.Hashtable D -> D
    android.graphics.BitmapFactory$Options E -> E
    float[] getVertices(int) -> getVertices
    float[] getColors(int) -> getColors
    float[] getCoords(int) -> getCoords
    java.nio.FloatBuffer makeVerticesBuffer(float[]) -> makeVerticesBuffer
    java.nio.FloatBuffer makeColorsBuffer(float[]) -> makeColorsBuffer
    java.nio.FloatBuffer makeTexCoordsBuffer(float[]) -> makeTexCoordsBuffer
    void drawTexture(javax.microedition.khronos.opengles.GL10,float,float,float,float,int,float,float,float,float,float,float,float,float) -> drawTexture
    void drawTexture(javax.microedition.khronos.opengles.GL10,float,float,float,float,int,float,float,float,float) -> drawTexture
    int loadTexture(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> loadTexture
    java.nio.FloatBuffer makeFloatBuffer(float[]) -> makeFloatBuffer
com.videogo.ad.Texture2D -> com.videogo.ad.Texture2D:
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    float F -> F
    float G -> G
    android.graphics.Bitmap H -> H
    int b -> b
    void delete(javax.microedition.khronos.opengles.GL10) -> delete
    int pow2(int) -> pow2
    void init(javax.microedition.khronos.opengles.GL10) -> init
    void change(javax.microedition.khronos.opengles.GL10,int,int) -> change
    void draw(javax.microedition.khronos.opengles.GL10,float,float,float,float) -> draw
    void draw(javax.microedition.khronos.opengles.GL10,float,float) -> draw
com.videogo.alarm.AlarmLogInfo -> com.videogo.alarm.AlarmLogInfo:
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    int M -> M
    java.lang.String N -> N
    int O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    int R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    boolean U -> U
    boolean V -> V
    java.lang.String W -> W
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setAlarmLogId(java.lang.String) -> setAlarmLogId
    java.lang.String getAlarmLogId() -> getAlarmLogId
    void setObjectName(java.lang.String) -> setObjectName
    java.lang.String getObjectName() -> getObjectName
    void setDeviceSerial(java.lang.String) -> setDeviceSerial
    java.lang.String getDeviceSerial() -> getDeviceSerial
    void setChannelType(java.lang.String) -> setChannelType
    java.lang.String getChannelType() -> getChannelType
    void setChannelNo(int) -> setChannelNo
    int getChannelNo() -> getChannelNo
    void setAlarmType(int) -> setAlarmType
    int getAlarmType() -> getAlarmType
    void setAlarmStartTime(java.lang.String) -> setAlarmStartTime
    java.lang.String getAlarmStartTime() -> getAlarmStartTime
    void setAlarmPicUrl(java.lang.String) -> setAlarmPicUrl
    java.lang.String getAlarmPicUrl() -> getAlarmPicUrl
    void setAlarmRecUrl(java.lang.String) -> setAlarmRecUrl
    java.lang.String getAlarmRecUrl() -> getAlarmRecUrl
    void setCheckState(int) -> setCheckState
    int getCheckState() -> getCheckState
    void setLogInfo(java.lang.String) -> setLogInfo
    java.lang.String getLogInfo() -> getLogInfo
    void setAlarmOccurTime(java.lang.String) -> setAlarmOccurTime
    java.lang.String getAlarmOccurTime() -> getAlarmOccurTime
    void setAlarmIsCloud(boolean) -> setAlarmIsCloud
    boolean getAlarmCloud() -> getAlarmCloud
    void setAlarmIsEncyption(boolean) -> setAlarmIsEncyption
    boolean getAlarmEncryption() -> getAlarmEncryption
    java.lang.String getCheckSum() -> getCheckSum
    void setCheckSum(java.lang.String) -> setCheckSum
    void copy(com.videogo.alarm.AlarmLogInfo) -> copy
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.alarm.AlarmLogInfo$1 -> com.videogo.alarm.AlarmLogInfo$1:
    com.videogo.alarm.AlarmLogInfo a(android.os.Parcel) -> a
    com.videogo.alarm.AlarmLogInfo[] a(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.alarm.AlarmLogInfoEx -> com.videogo.alarm.AlarmLogInfoEx:
    int ALARMTYPE -> ALARMTYPE
    int MESSAGETYPE -> MESSAGETYPE
    int DEVICETYPE -> DEVICETYPE
    int SYSTEMTYPE -> SYSTEMTYPE
    int Y -> Y
    int Z -> Z
    com.videogo.openapi.bean.resp.CameraInfo aa -> aa
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.videogo.openapi.bean.resp.CameraInfo getCameraInfo() -> getCameraInfo
    void setCameraInfo(com.videogo.openapi.bean.resp.CameraInfo) -> setCameraInfo
    int getAlarmNum() -> getAlarmNum
    void setAlarmNum(int) -> setAlarmNum
    int getLeaveLen() -> getLeaveLen
    void setLeaveLen(int) -> setLeaveLen
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.alarm.AlarmLogInfoEx$1 -> com.videogo.alarm.AlarmLogInfoEx$1:
    com.videogo.alarm.AlarmLogInfoEx b(android.os.Parcel) -> b
    com.videogo.alarm.AlarmLogInfoEx[] b(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.alarm.AlarmLogInfoManager -> com.videogo.alarm.AlarmLogInfoManager:
    java.lang.String TAG -> TAG
    com.videogo.alarm.AlarmLogInfoManager ab -> ab
    java.util.List ac -> ac
    java.util.List ad -> ad
    java.util.List ae -> ae
    com.videogo.alarm.AlarmLogInfoManager getInstance() -> getInstance
    java.util.List getNotifierDsiplayAlarmInfoList() -> getNotifierDsiplayAlarmInfoList
    java.util.List getAlarmLogInfoFromNotifier() -> getAlarmLogInfoFromNotifier
    java.util.List getPushListFromNotifierByCamera(android.content.Context,java.lang.String,int,int) -> getPushListFromNotifierByCamera
    void clearAlarmListFromNotifier() -> clearAlarmListFromNotifier
    void clearNotifierMessageList(int) -> clearNotifierMessageList
    void insertAlarmLogInfoFromNotifier(android.content.Context,com.videogo.alarm.AlarmLogInfoEx) -> insertAlarmLogInfoFromNotifier
    void clearAllOutsideAlarmList() -> clearAllOutsideAlarmList
    void insertAllOutsideAlarmList(android.content.Context,com.videogo.alarm.AlarmLogInfoEx) -> insertAllOutsideAlarmList
    java.util.List getAllOutsideAlarmList() -> getAllOutsideAlarmList
    java.util.List getAllOutsideAlarmList(int) -> getAllOutsideAlarmList
    void clearDeviceOfflineAlarmList() -> clearDeviceOfflineAlarmList
    void insertDeviceOfflineAlarmList(android.content.Context,com.videogo.alarm.AlarmLogInfoEx) -> insertDeviceOfflineAlarmList
    java.util.List getDeviceOfflineAlarmList() -> getDeviceOfflineAlarmList
    boolean isAlarmLogInfoExist(com.videogo.alarm.AlarmLogInfoEx) -> isAlarmLogInfoExist
    void insertNewAlarmLogInfo(android.content.Context,com.videogo.alarm.AlarmLogInfoEx,boolean) -> insertNewAlarmLogInfo
    void a(android.content.Context,com.videogo.alarm.AlarmLogInfoEx,boolean) -> a
    void b(android.content.Context,com.videogo.alarm.AlarmLogInfoEx,boolean) -> b
    void c(android.content.Context,com.videogo.alarm.AlarmLogInfoEx,boolean) -> c
    java.util.List getAlarmInfoListFromPush(android.content.Context,java.lang.String,boolean) -> getAlarmInfoListFromPush
com.videogo.alarm.AnalyzeMsgUtils -> com.videogo.alarm.AnalyzeMsgUtils:
    java.lang.String TAG -> TAG
    java.lang.String af -> af
    com.videogo.alarm.BaseMessageInfo getAlarmLogInfoFromPushMsg(android.content.Intent) -> getAlarmLogInfoFromPushMsg
    com.videogo.alarm.NoticeInfo a(java.lang.String,java.lang.String[]) -> a
    com.videogo.alarm.AlarmLogInfoEx b(java.lang.String,java.lang.String[]) -> b
    com.videogo.alarm.AlarmLogInfoEx c(java.lang.String,java.lang.String[]) -> c
    com.videogo.alarm.AlarmLogInfoEx d(java.lang.String,java.lang.String[]) -> d
    void getAlarmPicUrlFromPush(java.lang.String,java.lang.String,com.videogo.alarm.AlarmLogInfoEx) -> getAlarmPicUrlFromPush
com.videogo.alarm.BaseMessageInfo -> com.videogo.alarm.BaseMessageInfo:
    int ag -> ag
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getNotifyType() -> getNotifyType
    void setNotifyType(int) -> setNotifyType
    void copy(com.videogo.alarm.BaseMessageInfo) -> copy
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.alarm.BaseMessageInfo$1 -> com.videogo.alarm.BaseMessageInfo$1:
    com.videogo.alarm.BaseMessageInfo c(android.os.Parcel) -> c
    com.videogo.alarm.BaseMessageInfo[] c(int) -> c
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.alarm.NoticeInfo -> com.videogo.alarm.NoticeInfo:
    int ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getInfoType() -> getInfoType
    void setInfoType(int) -> setInfoType
    java.lang.String getInfoContant() -> getInfoContant
    void setInfoContant(java.lang.String) -> setInfoContant
    java.lang.String getUrl1() -> getUrl1
    void setUrl1(java.lang.String) -> setUrl1
    java.lang.String getUrl2() -> getUrl2
    void setUrl2(java.lang.String) -> setUrl2
    void copy(com.videogo.alarm.NoticeInfo) -> copy
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.alarm.NoticeInfo$1 -> com.videogo.alarm.NoticeInfo$1:
    com.videogo.alarm.NoticeInfo d(android.os.Parcel) -> d
    com.videogo.alarm.NoticeInfo[] d(int) -> d
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.androidpn.AndroidpnUtils -> com.videogo.androidpn.AndroidpnUtils:
    java.lang.String TAG -> TAG
    void startPushServer(android.content.Context) -> startPushServer
    void stopPushServer(android.content.Context) -> stopPushServer
    void removePushAccount(android.content.SharedPreferences) -> removePushAccount
    void unregisterPushAccount(android.content.Context) -> unregisterPushAccount
    void registerPushAccount(android.content.Context,java.lang.String) -> registerPushAccount
    void reportToPushService(android.content.Context) -> reportToPushService
com.videogo.androidpn.BroadcastUtil -> com.videogo.androidpn.BroadcastUtil:
    java.lang.String al -> al
    java.lang.String APN_STATUS_CONNECTING -> APN_STATUS_CONNECTING
    java.lang.String APN_STATUS_CONNECTED -> APN_STATUS_CONNECTED
    java.lang.String APN_STATUS_DISCONNECT -> APN_STATUS_DISCONNECT
    java.lang.String APN_STATUS_RECONNECTING -> APN_STATUS_RECONNECTING
    java.lang.String APN_STATUS_RECONNECT_SUCCESS -> APN_STATUS_RECONNECT_SUCCESS
    java.lang.String APN_STATUS_CONNECT_FAILED -> APN_STATUS_CONNECT_FAILED
    java.lang.String APN_STATUS_LOGINED -> APN_STATUS_LOGINED
    java.lang.String APN_STATUS_LOGINING -> APN_STATUS_LOGINING
    java.lang.String APN_STATUS_LOGIN_SUCCESS -> APN_STATUS_LOGIN_SUCCESS
    java.lang.String APN_STATUS_LOGIN_FAIL -> APN_STATUS_LOGIN_FAIL
    java.lang.String APN_ACTION_CONNECT -> APN_ACTION_CONNECT
    java.lang.String APN_ACTION_REGISTER -> APN_ACTION_REGISTER
    java.lang.String APN_ACTION_LOGIN -> APN_ACTION_LOGIN
    java.lang.String APN_ACTION_RECONNECT -> APN_ACTION_RECONNECT
    java.lang.String APN_ACTION_DISCONNECT -> APN_ACTION_DISCONNECT
    java.lang.String APN_ACTION_RECEIPT -> APN_ACTION_RECEIPT
    java.lang.String APN_ACTION_REQUEST_STATUS -> APN_ACTION_REQUEST_STATUS
    java.lang.String ANDROIDPN_MSG_RECEIVER_READY -> ANDROIDPN_MSG_RECEIVER_READY
    void sendBroadcast(android.content.Context,java.lang.String) -> sendBroadcast
    void sendBroadcast(android.content.Context,android.content.Intent) -> sendBroadcast
com.videogo.androidpn.CommonUtilities -> com.videogo.androidpn.CommonUtilities:
    java.lang.String am -> am
    java.lang.String SENDER_ID -> SENDER_ID
    java.lang.String TAG -> TAG
    void displayMessage(android.content.Context,java.lang.String) -> displayMessage
    void displayMessage(android.content.Context,java.lang.String,java.lang.String) -> displayMessage
com.videogo.androidpn.ConnectivityReceiver -> com.videogo.androidpn.ConnectivityReceiver:
    java.lang.String LOGTAG -> LOGTAG
    com.videogo.androidpn.NotificationService an -> an
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.androidpn.Constants -> com.videogo.androidpn.Constants:
    java.lang.String ANDROIDPN_PREFERENCE_NAME -> ANDROIDPN_PREFERENCE_NAME
    java.lang.String APIKEY -> APIKEY
    java.lang.String XMPPPORT -> XMPPPORT
    java.lang.String ANDROID_PARAMETER_ERROR -> ANDROID_PARAMETER_ERROR
    java.lang.String ANDROID_INTERNAL_ERROR -> ANDROID_INTERNAL_ERROR
    java.lang.String CALLBACK_ACTIVITY_PACKAGE_NAME -> CALLBACK_ACTIVITY_PACKAGE_NAME
    java.lang.String CALLBACK_ACTIVITY_CLASS_NAME -> CALLBACK_ACTIVITY_CLASS_NAME
    java.lang.String API_KEY -> API_KEY
    java.lang.String VERSION -> VERSION
    java.lang.String XMPP_HOST -> XMPP_HOST
    java.lang.String XMPP_PORT -> XMPP_PORT
    java.lang.String LEADER_HOST -> LEADER_HOST
    java.lang.String XMPP_USERNAME -> XMPP_USERNAME
    java.lang.String XMPP_PASSWORD -> XMPP_PASSWORD
    java.lang.String DEVICE_ID -> DEVICE_ID
    java.lang.String DEVICE_TOKEN -> DEVICE_TOKEN
    java.lang.String PREF_STARTED -> PREF_STARTED
    java.lang.String PREF_RETRY -> PREF_RETRY
    java.lang.String NOTIFICATION_ID -> NOTIFICATION_ID
    java.lang.String NOTIFICATION_API_KEY -> NOTIFICATION_API_KEY
    java.lang.String NOTIFICATION_MESSAGE -> NOTIFICATION_MESSAGE
    java.lang.String NOTIFICATION_EXT -> NOTIFICATION_EXT
    java.lang.String NOTIFICATION_TYPE -> NOTIFICATION_TYPE
    java.lang.String NOTIFICATION_RECEIVED_ACTION -> NOTIFICATION_RECEIVED_ACTION
    java.lang.String INTENT_EXTRA_IQ -> INTENT_EXTRA_IQ
    java.lang.String DEFAULT_NAMESPACE -> DEFAULT_NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
com.videogo.androidpn.GCMService -> com.videogo.androidpn.GCMService:
    java.lang.String TAG -> TAG
    android.os.AsyncTask ao -> ao
    void onCreate() -> onCreate
    android.content.Intent getIntent(android.content.Context) -> getIntent
    void a(java.lang.Object,java.lang.String) -> a
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    java.lang.String d() -> d
com.videogo.androidpn.GCMService$1 -> com.videogo.androidpn.GCMService$1:
    com.videogo.androidpn.GCMService ap -> ap
    android.content.Context aq -> aq
    java.lang.String ar -> ar
    java.lang.Void a(java.lang.Void[]) -> a
    void a(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.androidpn.NetworkUtil -> com.videogo.androidpn.NetworkUtil:
    java.lang.String LOGTAG -> LOGTAG
    boolean isNetworkAvaible(android.content.Context) -> isNetworkAvaible
com.videogo.androidpn.NotificationIQ -> com.videogo.androidpn.NotificationIQ:
    java.lang.String as -> as
    java.lang.String at -> at
    java.lang.String au -> au
    java.lang.String av -> av
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getApiKey() -> getApiKey
    void setApiKey(java.lang.String) -> setApiKey
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExt() -> getExt
    void setExt(java.lang.String) -> setExt
com.videogo.androidpn.NotificationIQProvider -> com.videogo.androidpn.NotificationIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
com.videogo.androidpn.NotificationPacketListener -> com.videogo.androidpn.NotificationPacketListener:
    java.lang.String LOGTAG -> LOGTAG
    com.videogo.androidpn.XmppManager aw -> aw
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.videogo.androidpn.NotificationService -> com.videogo.androidpn.NotificationService:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String XMPP_CLIENT_ID -> XMPP_CLIENT_ID
    java.lang.String ax -> ax
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String aA -> aA
    long aB -> aB
    boolean aC -> aC
    android.telephony.TelephonyManager aD -> aD
    android.content.BroadcastReceiver aE -> aE
    android.telephony.PhoneStateListener aF -> aF
    com.videogo.androidpn.XmppManager aw -> aw
    android.content.SharedPreferences aG -> aG
    void actionStart(android.content.Context) -> actionStart
    void actionStop(android.content.Context) -> actionStop
    void onCreate() -> onCreate
    void e() -> e
    boolean f() -> f
    void a(boolean) -> a
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    boolean onUnbind(android.content.Intent) -> onUnbind
    android.content.Intent getIntent(android.content.Context) -> getIntent
    android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    void connect() -> connect
    void disconnect() -> disconnect
    void g() -> g
    void h() -> h
    void start() -> start
    void stop() -> stop
    void i() -> i
    void startKeepAlives(android.content.Context) -> startKeepAlives
    void stopKeepAlives(android.content.Context) -> stopKeepAlives
    void reconnectIfNecessary() -> reconnectIfNecessary
    void saveRetryTimes(android.content.Context,int) -> saveRetryTimes
    int getRetryTimes(android.content.Context) -> getRetryTimes
    void scheduleReconnect(android.content.Context) -> scheduleReconnect
    void cancelReconnect(android.content.Context) -> cancelReconnect
com.videogo.androidpn.PersistentConnectionListener -> com.videogo.androidpn.PersistentConnectionListener:
    java.lang.String LOGTAG -> LOGTAG
    com.videogo.androidpn.XmppManager aw -> aw
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
com.videogo.androidpn.PhoneStateChangeListener -> com.videogo.androidpn.PhoneStateChangeListener:
    java.lang.String LOGTAG -> LOGTAG
    com.videogo.androidpn.NotificationService an -> an
    void onDataConnectionStateChanged(int) -> onDataConnectionStateChanged
    java.lang.String e(int) -> e
com.videogo.androidpn.ServerUtilities -> com.videogo.androidpn.ServerUtilities:
    java.lang.String TAG -> TAG
    int aH -> aH
    int aI -> aI
    java.util.Random aJ -> aJ
    boolean register(android.content.Context,java.lang.String) -> register
    void unregister(android.content.Context,java.lang.String) -> unregister
com.videogo.androidpn.XmppConnectReceiver -> com.videogo.androidpn.XmppConnectReceiver:
    java.lang.String al -> al
    java.lang.Object lock -> lock
    com.videogo.androidpn.XmppConnectReceiver aK -> aK
    android.content.Context aL -> aL
    android.os.Handler handler -> handler
    com.videogo.androidpn.XmppManager aw -> aw
    android.content.SharedPreferences aG -> aG
    java.lang.Runnable aM -> aM
    java.lang.Runnable aN -> aN
    java.lang.Runnable aO -> aO
    boolean aP -> aP
    java.lang.String aQ -> aQ
    int aR -> aR
    java.lang.String aS -> aS
    java.lang.String aT -> aT
    void initInstance(android.content.Context,com.videogo.androidpn.XmppManager) -> initInstance
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(org.jivesoftware.smack.packet.IQ) -> a
    void j() -> j
    void k() -> k
    void l() -> l
    void terminatePersistentConnection() -> terminatePersistentConnection
    void m() -> m
    java.lang.String d() -> d
    void a(com.videogo.androidpn.XmppConnectReceiver,boolean) -> a
    android.content.Context a(com.videogo.androidpn.XmppConnectReceiver) -> a
    com.videogo.androidpn.XmppManager b(com.videogo.androidpn.XmppConnectReceiver) -> b
    java.lang.String c(com.videogo.androidpn.XmppConnectReceiver) -> c
    int d(com.videogo.androidpn.XmppConnectReceiver) -> d
    android.os.Handler e(com.videogo.androidpn.XmppConnectReceiver) -> e
    void a(com.videogo.androidpn.XmppConnectReceiver,java.lang.String) -> a
    java.lang.String f(com.videogo.androidpn.XmppConnectReceiver) -> f
    void b(com.videogo.androidpn.XmppConnectReceiver,java.lang.String) -> b
    java.lang.String g(com.videogo.androidpn.XmppConnectReceiver) -> g
    void c(com.videogo.androidpn.XmppConnectReceiver,java.lang.String) -> c
    void a(com.videogo.androidpn.XmppConnectReceiver,int) -> a
    android.content.SharedPreferences h(com.videogo.androidpn.XmppConnectReceiver) -> h
    void i(com.videogo.androidpn.XmppConnectReceiver) -> i
    void j(com.videogo.androidpn.XmppConnectReceiver) -> j
    boolean k(com.videogo.androidpn.XmppConnectReceiver) -> k
    java.lang.Runnable l(com.videogo.androidpn.XmppConnectReceiver) -> l
com.videogo.androidpn.XmppConnectReceiver$1 -> com.videogo.androidpn.XmppConnectReceiver$1:
    com.videogo.androidpn.XmppConnectReceiver aU -> aU
    void run() -> run
com.videogo.androidpn.XmppConnectReceiver$DelayTime -> com.videogo.androidpn.XmppConnectReceiver$DelayTime:
    com.videogo.androidpn.XmppConnectReceiver$DelayTime aV -> aV
    java.util.concurrent.atomic.AtomicInteger aW -> aW
    void setTimes(int) -> setTimes
    int getTimes() -> getTimes
    void increase() -> increase
    int getWaitingTime() -> getWaitingTime
com.videogo.androidpn.XmppConnectReceiver$DisconnectTask -> com.videogo.androidpn.XmppConnectReceiver$DisconnectTask:
    com.videogo.androidpn.XmppConnectReceiver aU -> aU
    void run() -> run
com.videogo.androidpn.XmppConnectReceiver$LoginServer -> com.videogo.androidpn.XmppConnectReceiver$LoginServer:
    int aX -> aX
    com.videogo.androidpn.XmppConnectReceiver aU -> aU
    void run() -> run
    boolean n() -> n
    boolean o() -> o
    boolean p() -> p
    com.videogo.androidpn.XmppConnectReceiver a(com.videogo.androidpn.XmppConnectReceiver$LoginServer) -> a
com.videogo.androidpn.XmppConnectReceiver$LoginServer$1 -> com.videogo.androidpn.XmppConnectReceiver$LoginServer$1:
    com.videogo.androidpn.XmppConnectReceiver$LoginServer aY -> aY
    void run() -> run
com.videogo.androidpn.XmppConnectReceiver$ReconnectTask -> com.videogo.androidpn.XmppConnectReceiver$ReconnectTask:
    com.videogo.androidpn.XmppConnectReceiver aU -> aU
    void run() -> run
com.videogo.androidpn.XmppManager -> com.videogo.androidpn.XmppManager:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String XMPP_RESOURCE_NAME -> XMPP_RESOURCE_NAME
    android.content.Context aL -> aL
    android.content.SharedPreferences aG -> aG
    org.jivesoftware.smack.XMPPConnection aZ -> aZ
    org.jivesoftware.smack.ConnectionListener ba -> ba
    org.jivesoftware.smack.PacketListener bb -> bb
    android.os.Handler handler -> handler
    android.os.Handler bc -> bc
    java.lang.String bd -> bd
    void showToast(java.lang.String) -> showToast
    android.content.Context getContext() -> getContext
    void connect() -> connect
    void disconnect() -> disconnect
    void startReconnectionThread() -> startReconnectionThread
    void terminatePersistentConnection() -> terminatePersistentConnection
    org.jivesoftware.smack.XMPPConnection getConnection() -> getConnection
    void setConnection(org.jivesoftware.smack.XMPPConnection) -> setConnection
    org.jivesoftware.smack.ConnectionListener getConnectionListener() -> getConnectionListener
    org.jivesoftware.smack.PacketListener getNotificationPacketListener() -> getNotificationPacketListener
    android.os.Handler getHandler() -> getHandler
    void reregisterAccount() -> reregisterAccount
    boolean isConnected() -> isConnected
    boolean isAuthenticated() -> isAuthenticated
    boolean isRegistered() -> isRegistered
    void q() -> q
    void r() -> r
    void sendKeepAlive() -> sendKeepAlive
    void onSuccess() -> onSuccess
    void onClose() -> onClose
    void onError() -> onError
    android.content.Context a(com.videogo.androidpn.XmppManager) -> a
    java.lang.String b(com.videogo.androidpn.XmppManager) -> b
com.videogo.androidpn.XmppManager$1 -> com.videogo.androidpn.XmppManager$1:
    com.videogo.androidpn.XmppManager be -> be
    java.lang.String bf -> bf
    void run() -> run
com.videogo.camera.CameraInfo -> com.videogo.camera.CameraInfo:
    java.lang.String mCameraID -> mCameraID
    java.lang.String mCameraName -> mCameraName
    int mChannelNo -> mChannelNo
    java.lang.String mDeviceSN -> mDeviceSN
    java.lang.String mBigThumbnailUrl -> mBigThumbnailUrl
    java.lang.String mMidThumbnailUrl -> mMidThumbnailUrl
    java.lang.String mSmallThumbnailUrl -> mSmallThumbnailUrl
    boolean mIsAdded -> mIsAdded
    int mAlarmCount -> mAlarmCount
    int mType -> mType
    int VIDEO_LEVEL_FLUNET -> VIDEO_LEVEL_FLUNET
    int VIDEO_LEVEL_BALANCED -> VIDEO_LEVEL_BALANCED
    int VIDEO_LEVEL_HD -> VIDEO_LEVEL_HD
    int videoLevel -> videoLevel
    java.lang.String capability -> capability
    java.lang.String defenceStartTime -> defenceStartTime
    java.lang.String defenceStopTime -> defenceStopTime
    java.lang.String defencePeriod -> defencePeriod
    int defencePlanEnable -> defencePlanEnable
    int permission -> permission
    double latitude -> latitude
    double longitude -> longitude
    int defenceLbsEnable -> defenceLbsEnable
    int defenceRadius -> defenceRadius
    int defence -> defence
    java.lang.String fullModel -> fullModel
    int status -> status
    java.lang.String supportExt -> supportExt
    java.lang.String bg -> bg
    int bh -> bh
    java.lang.String bi -> bi
    java.lang.String getAdUrl() -> getAdUrl
    void setAdUrl(java.lang.String) -> setAdUrl
    java.lang.String getCameraID() -> getCameraID
    void setCameraID(java.lang.String) -> setCameraID
    void setCameraName(java.lang.String) -> setCameraName
    java.lang.String getCameraName() -> getCameraName
    void setChannelNo(int) -> setChannelNo
    int getChannelNo() -> getChannelNo
    void setDeviceSN(java.lang.String) -> setDeviceSN
    java.lang.String getDeviceID() -> getDeviceID
    java.lang.String getBigThumbnailUrl() -> getBigThumbnailUrl
    java.lang.String getBigThumbnailUrl2() -> getBigThumbnailUrl2
    void setBigThumbnailUrl(java.lang.String) -> setBigThumbnailUrl
    java.lang.String getMidThumbnailUrl() -> getMidThumbnailUrl
    void setMidThumbnailUrl(java.lang.String) -> setMidThumbnailUrl
    java.lang.String getSmallThumbnailUrl() -> getSmallThumbnailUrl
    java.lang.String getSmallThumbnailUrl2() -> getSmallThumbnailUrl2
    void setSmallThumbnailUrl(java.lang.String) -> setSmallThumbnailUrl
    boolean isAdded() -> isAdded
    void setAdded(boolean) -> setAdded
    int getAlarmCount() -> getAlarmCount
    void setAlarmCount(int) -> setAlarmCount
    void setType(int) -> setType
    int getType() -> getType
    void setVideoLevel(int) -> setVideoLevel
    int getVideoLevel() -> getVideoLevel
    java.lang.String getCapability() -> getCapability
    void setCapability(java.lang.String) -> setCapability
    void setDefenceStartTime(java.lang.String) -> setDefenceStartTime
    java.lang.String getDefenceStartTime() -> getDefenceStartTime
    void setDefenceStopTime(java.lang.String) -> setDefenceStopTime
    java.lang.String getDefenceStopTime() -> getDefenceStopTime
    void setDefencePeriod(java.lang.String) -> setDefencePeriod
    java.lang.String getDefencePeriod() -> getDefencePeriod
    void setDefencePlanEnable(int) -> setDefencePlanEnable
    int getDefencePlanEnable() -> getDefencePlanEnable
    void setPermission(int) -> setPermission
    int getPermission() -> getPermission
    void setDefenceLbsEnable(int) -> setDefenceLbsEnable
    int getDefenceLbsEnable() -> getDefenceLbsEnable
    void setDefenceRadius(int) -> setDefenceRadius
    int getDefenceRadius() -> getDefenceRadius
    void setLatitude(double) -> setLatitude
    double getLatitude() -> getLatitude
    void setLongitude(double) -> setLongitude
    double getLongitude() -> getLongitude
    void setDefence(int) -> setDefence
    int getDefence() -> getDefence
    java.lang.String getFullModel() -> getFullModel
    void setFullModel(java.lang.String) -> setFullModel
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    java.lang.String getSupportExt() -> getSupportExt
    void setSupportExt(java.lang.String) -> setSupportExt
    java.lang.String getThirdDevId() -> getThirdDevId
    void setThirdDevId(java.lang.String) -> setThirdDevId
    int getIsShared() -> getIsShared
    void setIsShared(int) -> setIsShared
    void copy(com.videogo.camera.CameraInfo) -> copy
com.videogo.camera.CameraInfoEx -> com.videogo.camera.CameraInfoEx:
    int CAMERA_STATUS_CLOSE -> CAMERA_STATUS_CLOSE
    int CAMERA_STATUS_OPEN -> CAMERA_STATUS_OPEN
    int TYPE_ERROR -> TYPE_ERROR
    int TYPE_C1 -> TYPE_C1
    int TYPE_C2 -> TYPE_C2
    int TYPE_C3 -> TYPE_C3
    int TYPE_C4 -> TYPE_C4
    int TYPE_8464 -> TYPE_8464
    int TYPE_8464_CV1 -> TYPE_8464_CV1
    int TYPE_8133 -> TYPE_8133
    int TYPE_D1 -> TYPE_D1
    int TYPE_N1 -> TYPE_N1
    int TYPE_R1 -> TYPE_R1
    java.lang.String MODEL_C1 -> MODEL_C1
    java.lang.String MODEL_C2 -> MODEL_C2
    java.lang.String MODEL_C3 -> MODEL_C3
    java.lang.String MODEL_C4 -> MODEL_C4
    java.lang.String MODEL_8464 -> MODEL_8464
    java.lang.String MODEL_8133 -> MODEL_8133
    java.lang.String MODEL_D1 -> MODEL_D1
    java.lang.String MODEL_N1 -> MODEL_N1
    java.lang.String MODEL_R1 -> MODEL_R1
    int STREAM_TYPE_MAIN -> STREAM_TYPE_MAIN
    int STREAM_TYPE_SUB -> STREAM_TYPE_SUB
    java.lang.String MODEL_8464_FORMER_VERSION -> MODEL_8464_FORMER_VERSION
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int supportWifi -> supportWifi
    com.videogo.camera.ShareCameraItem bC -> bC
    int SHARE_CAMERA_NO -> SHARE_CAMERA_NO
    int SHARE_CAMERA_START -> SHARE_CAMERA_START
    int SHARE_CAMERA_PROMPT -> SHARE_CAMERA_PROMPT
    int SHARE_CAMERA_END -> SHARE_CAMERA_END
    int getStreamType() -> getStreamType
    java.util.List getPermissionList() -> getPermissionList
    boolean isOnline() -> isOnline
    int getModelType() -> getModelType
    void setSupportExt(java.lang.String) -> setSupportExt
    int getSupportChangeSafePasswd() -> getSupportChangeSafePasswd
    int getSupportPtz() -> getSupportPtz
    int getSupportCapture() -> getSupportCapture
    int getSupportAlarmVoice() -> getSupportAlarmVoice
    int getSupportAutoOffline() -> getSupportAutoOffline
    int getSupportTalk() -> getSupportTalk
    int getSupportDefence() -> getSupportDefence
    int getSupportDefencePlan() -> getSupportDefencePlan
    int getSupportDisk() -> getSupportDisk
    int getSupportMessage() -> getSupportMessage
    int getSupportPrivacy() -> getSupportPrivacy
    int getSupportEncrypt() -> getSupportEncrypt
    int getSupportCloud() -> getSupportCloud
    int getSupportCloudVersion() -> getSupportCloudVersion
    int getSupportUpgrade() -> getSupportUpgrade
    int getSupportRelatedDevice() -> getSupportRelatedDevice
    void setShareCameraItem(com.videogo.camera.ShareCameraItem) -> setShareCameraItem
    com.videogo.camera.ShareCameraItem getShareCameraItem() -> getShareCameraItem
    int getShareCameraStatus() -> getShareCameraStatus
    int getShareCameraRemainMins() -> getShareCameraRemainMins
    void copy(com.videogo.camera.CameraInfoEx) -> copy
com.videogo.camera.CameraManager -> com.videogo.camera.CameraManager:
    java.lang.String TAG -> TAG
    int bD -> bD
    java.util.List bE -> bE
    java.util.List bF -> bF
    java.util.List bG -> bG
    com.videogo.camera.CameraManager bH -> bH
    com.nostra13.universalimageloader.core.ImageLoader bI -> bI
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    java.lang.String mHardwareCode -> mHardwareCode
    java.lang.String mSessionID -> mSessionID
    java.lang.String bJ -> bJ
    com.videogo.camera.CameraManager getInstance() -> getInstance
    java.util.List getAddedCameraList() -> getAddedCameraList
    void setAddedCameraListOnline() -> setAddedCameraListOnline
    void decAddedCameraUnreadMessageCount(java.lang.String,int) -> decAddedCameraUnreadMessageCount
    void incAddedCameraUnreadMessageCount(java.lang.String,int) -> incAddedCameraUnreadMessageCount
    java.util.List getAddedCameraListOnline() -> getAddedCameraListOnline
    java.util.List getAddedCameraList(java.lang.String) -> getAddedCameraList
    void clearAlarmCount() -> clearAlarmCount
    void setAddedCameras(java.util.List) -> setAddedCameras
    void addAddedCamera(com.videogo.camera.CameraInfoEx,boolean) -> addAddedCamera
    void addAddedCamera(com.videogo.camera.CameraInfoEx) -> addAddedCamera
    void updateAddCamraList(java.util.List) -> updateAddCamraList
    void setAlarmCount(com.videogo.camera.CameraInfoEx) -> setAlarmCount
    void deleteAddedCamera(java.lang.String) -> deleteAddedCamera
    void deleteCameraByDeviceId(java.lang.String) -> deleteCameraByDeviceId
    java.util.List getQueryCameraList() -> getQueryCameraList
    void setQueryCameras(java.util.List) -> setQueryCameras
    void addQueryCamera(com.videogo.camera.CameraInfoEx) -> addQueryCamera
    void deleteQueryCamera(com.videogo.camera.CameraInfoEx) -> deleteQueryCamera
    void setQueryCameraIsAdded(com.videogo.camera.CameraInfoEx) -> setQueryCameraIsAdded
    void clearCamera() -> clearCamera
    void clearQueryCameras() -> clearQueryCameras
    void clearAddedCameras() -> clearAddedCameras
    com.videogo.camera.CameraInfoEx getAddedCamera(java.lang.String,int) -> getAddedCamera
    com.videogo.camera.CameraInfoEx getAddedCameraByThirdDevId(java.lang.String) -> getAddedCameraByThirdDevId
    com.videogo.camera.CameraInfoEx getAddedCamera(java.lang.String) -> getAddedCamera
    com.videogo.camera.CameraInfoEx getAddedCameraById(java.lang.String) -> getAddedCameraById
    void setShareCameraItemList(java.util.List) -> setShareCameraItemList
    com.videogo.camera.CameraInfoEx getShareCameraInfo(java.lang.String) -> getShareCameraInfo
    java.lang.String a(java.lang.String) -> a
    java.lang.String getCameraSnapshot(java.lang.String) -> getCameraSnapshot
    void a(com.videogo.device.DeviceInfoEx,com.videogo.camera.CameraInfoEx,com.hik.CASClient.ST_CAPTURE_PIC_INFO,byte[],boolean) -> a
com.videogo.camera.ShareCameraInfo -> com.videogo.camera.ShareCameraInfo:
    java.lang.String bK -> bK
    java.util.List bL -> bL
    java.lang.String getServerTime() -> getServerTime
    void setServerTime(java.lang.String) -> setServerTime
    java.util.List getList() -> getList
    void setList(java.util.List) -> setList
    java.lang.String toString() -> toString
com.videogo.camera.ShareCameraItem -> com.videogo.camera.ShareCameraItem:
    java.lang.String bM -> bM
    java.lang.String bN -> bN
    java.lang.String bO -> bO
    java.lang.String bP -> bP
    int M -> M
    java.lang.String bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    java.lang.String bU -> bU
    java.lang.String getUuid() -> getUuid
    void setUuid(java.lang.String) -> setUuid
    java.lang.String getBeginTime() -> getBeginTime
    void setBeginTime(java.lang.String) -> setBeginTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
    java.lang.String getDeviceSN() -> getDeviceSN
    void setDeviceSN(java.lang.String) -> setDeviceSN
    int getChannelNo() -> getChannelNo
    void setChannelNo(int) -> setChannelNo
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    int getViewedCount() -> getViewedCount
    void setViewedCount(int) -> setViewedCount
    int getViewingCount() -> getViewingCount
    void setViewingCount(int) -> setViewingCount
    int getLikeCount() -> getLikeCount
    void setLikeCount(int) -> setLikeCount
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String toString() -> toString
com.videogo.cameramgt.CameraMgtCtrl -> com.videogo.cameramgt.CameraMgtCtrl:
    java.lang.String TAG -> TAG
    void getCameraDetail(java.lang.String) -> getCameraDetail
    java.util.List getCloudFileExList(com.videogo.openapi.bean.req.GetCloudFileList) -> getCloudFileExList
com.videogo.constant.Config -> com.videogo.constant.Config:
    boolean LOGGING -> LOGGING
    java.lang.String VERSION -> VERSION
    boolean STAT_SWITCH -> STAT_SWITCH
    boolean USE_GCM -> USE_GCM
com.videogo.constant.Constant -> com.videogo.constant.Constant:
    int ANDROID_TYPE -> ANDROID_TYPE
    int PSW_MAX_LENGTH -> PSW_MAX_LENGTH
    float LIVE_VIEW_RATIO -> LIVE_VIEW_RATIO
    int POOL_SIZE -> POOL_SIZE
    int THUMBNAILS_SIZE -> THUMBNAILS_SIZE
    int CPU_NUMS -> CPU_NUMS
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    long MILLISSECOND_ONE_DAY -> MILLISSECOND_ONE_DAY
    long GB -> GB
    long MB -> MB
    long KB -> KB
    int REFRESH_TIME_INTERVAL -> REFRESH_TIME_INTERVAL
    java.lang.String SNAP_URL_AND_PORT -> SNAP_URL_AND_PORT
    java.lang.String SNAP_ADDR -> SNAP_ADDR
    java.lang.String NOTIFIER_ALARM_LIST_CHANGE_ACTION -> NOTIFIER_ALARM_LIST_CHANGE_ACTION
    java.lang.String VIDEOGO_PREFERENCE_NAME -> VIDEOGO_PREFERENCE_NAME
    java.lang.String DEV_INFO_PREFERENCE_NAME -> DEV_INFO_PREFERENCE_NAME
    java.lang.String DEV_INFO_SAFEMODE_NAME -> DEV_INFO_SAFEMODE_NAME
    java.lang.String OAUTH_SUCCESS_ACTION -> OAUTH_SUCCESS_ACTION
    java.lang.String RESP_URL_PREFIX -> RESP_URL_PREFIX
    int SIGNATURE_HASH_CODE -> SIGNATURE_HASH_CODE
    java.lang.String RESP_URL_WXPAY -> RESP_URL_WXPAY
    int SMS_VERIFY_LOGIN -> SMS_VERIFY_LOGIN
    int SMS_VERIFY_HARDWARE -> SMS_VERIFY_HARDWARE
com.videogo.constant.IntentConsts -> com.videogo.constant.IntentConsts:
    java.lang.String bV -> bV
    java.lang.String EXTRA_WEBVIEW_ACTION -> EXTRA_WEBVIEW_ACTION
    java.lang.String EXTRA_DEVICE_ID -> EXTRA_DEVICE_ID
    java.lang.String EXTRA_DETECTOR_INFO -> EXTRA_DETECTOR_INFO
    java.lang.String EXTRA_DEVICE_INFO -> EXTRA_DEVICE_INFO
    java.lang.String EXTRA_LOGIN_OAUTH -> EXTRA_LOGIN_OAUTH
    java.lang.String EXTRA_URL -> EXTRA_URL
    java.lang.String EXTRA_CAMERA_ID -> EXTRA_CAMERA_ID
    java.lang.String EXTRA_CAMERA_NO -> EXTRA_CAMERA_NO
    java.lang.String EXTRA_NAME -> EXTRA_NAME
    java.lang.String EXTRA_ALARM_INFO -> EXTRA_ALARM_INFO
    java.lang.String EXTRA_OLD_SAFE_PWD -> EXTRA_OLD_SAFE_PWD
    java.lang.String EXTRA_RTSP_URL -> EXTRA_RTSP_URL
    java.lang.String EXTRA_ALARM_TIME -> EXTRA_ALARM_TIME
    java.lang.String EXTRA_CAMERA_INFO -> EXTRA_CAMERA_INFO
    java.lang.String EXTRA_PUSH -> EXTRA_PUSH
    java.lang.String EXTRA_CAMERA_INFO_LIST -> EXTRA_CAMERA_INFO_LIST
    java.lang.String EXTRA_DEVICE_CODE -> EXTRA_DEVICE_CODE
    java.lang.String EXTRA_DEVICE_TYPE -> EXTRA_DEVICE_TYPE
    java.lang.String EXTRA_WIFI_SSID -> EXTRA_WIFI_SSID
    java.lang.String EXTRA_WIFI_PASSWORD -> EXTRA_WIFI_PASSWORD
com.videogo.constant.UrlManager -> com.videogo.constant.UrlManager:
    java.lang.String PATH_CLOUD -> PATH_CLOUD
    java.lang.String PATH_CLOUD_BAIDU -> PATH_CLOUD_BAIDU
    java.lang.String PATH_RECOMMEND -> PATH_RECOMMEND
    java.lang.String PATH_SQUARE -> PATH_SQUARE
    java.lang.String PATH_QRCODE_CARD -> PATH_QRCODE_CARD
    java.lang.String PATH_QRCODE_CARD_DETAIL -> PATH_QRCODE_CARD_DETAIL
    java.lang.String PATH_SQUARE_SHARE -> PATH_SQUARE_SHARE
    java.lang.String PATH_DISCOVERY_AUTH -> PATH_DISCOVERY_AUTH
    java.lang.String PATH_DISCOVERY_NEWS -> PATH_DISCOVERY_NEWS
    java.lang.String PATH_DISCOVERY_VIDEO -> PATH_DISCOVERY_VIDEO
    int STREAMER_PORT -> STREAMER_PORT
    java.lang.String PARAM_FROM -> PARAM_FROM
    java.lang.String PARAM_VERSION -> PARAM_VERSION
    int PLAT_I -> PLAT_I
    int PLAT_TEST -> PLAT_TEST
    int PLAT_TEST2 -> PLAT_TEST2
    int PLAT_PB -> PLAT_PB
    int PLAT_TEST1 -> PLAT_TEST1
    int LANG_CN -> LANG_CN
    int LANG_EN -> LANG_EN
    int VERSION_CN -> VERSION_CN
    int VERSION_INT -> VERSION_INT
    int URL_MASK -> URL_MASK
    int URL_HELP -> URL_HELP
    int URL_HELP_DEVICE -> URL_HELP_DEVICE
    int URL_STORE -> URL_STORE
    int URL_SERVICE -> URL_SERVICE
    int URL_RECOMMEND -> URL_RECOMMEND
    int URL_CLOUD_INTRO -> URL_CLOUD_INTRO
    int URL_DISCOVERY -> URL_DISCOVERY
    int URL_VIDEO_SQUARE -> URL_VIDEO_SQUARE
    int URL_VIDEO_COMMENT -> URL_VIDEO_COMMENT
    int URL_AUTH -> URL_AUTH
    int URL_STREAMER -> URL_STREAMER
    int URL_BAIDU_CLOUD_INTRO -> URL_BAIDU_CLOUD_INTRO
    int bW -> bW
    android.util.SparseArray bX -> bX
    com.videogo.constant.UrlManager bY -> bY
    com.videogo.openapi.EzvizAPI bZ -> bZ
    com.videogo.util.LocalInfo ca -> ca
    void init(android.content.Context) -> init
    com.videogo.constant.UrlManager getInstance() -> getInstance
    java.lang.String getUrl(int) -> getUrl
    int s() -> s
    int t() -> t
    int getVersion() -> getVersion
com.videogo.demo.DemoRealPlayer -> com.videogo.demo.DemoRealPlayer:
    java.lang.String TAG -> TAG
    int PLAYBUF_SIZE -> PLAYBUF_SIZE
    org.MediaPlayer.PlayM4.Player mPlaySDK -> mPlaySDK
    int mPlayPort -> mPlayPort
    boolean mIsSoundOpen -> mIsSoundOpen
    java.util.Calendar mOSDTime -> mOSDTime
    long mStreamFlow -> mStreamFlow
    int mStatus -> mStatus
    com.hik.RtspClient.RtspClient mRtspClientSDK -> mRtspClientSDK
    int mRtspEngineIndex -> mRtspEngineIndex
    java.lang.String cb -> cb
    boolean mStopStatus -> mStopStatus
    com.videogo.realplay.RealPlayerHelper$PlayStage cc -> cc
    android.os.Handler mHandler -> mHandler
    android.view.SurfaceHolder mPlaySurface -> mPlaySurface
    boolean mDisplay -> mDisplay
    android.content.Context mContext -> mContext
    com.videogo.main.AppManager mAppManager -> mAppManager
    void setHandler(android.os.Handler) -> setHandler
    android.os.Handler getHandler() -> getHandler
    void setStopStatus(boolean) -> setStopStatus
    boolean getStopStatus() -> getStopStatus
    com.videogo.realplay.RealPlayerHelper$PlayStage getRealPlayStage() -> getRealPlayStage
    void setRealPlayStage(com.videogo.realplay.RealPlayerHelper$PlayStage) -> setRealPlayStage
    void startPlay(java.lang.String) -> startPlay
    void b(java.lang.String) -> b
    void u() -> u
    void stopPlay() -> stopPlay
    boolean openSound() -> openSound
    void closeSound() -> closeSound
    java.util.Calendar getOSDTime() -> getOSDTime
    boolean openPlayer(byte[],int) -> openPlayer
    void closePlayer() -> closePlayer
    boolean isSoundOpen() -> isSoundOpen
    int getPort() -> getPort
    void setPlaySurface(android.view.SurfaceHolder) -> setPlaySurface
    android.view.SurfaceHolder getPlaySurface() -> getPlaySurface
    long getStreamFlow() -> getStreamFlow
    void resetStreamFlow() -> resetStreamFlow
    void setStreamFlow() -> setStreamFlow
    void setStatus(int) -> setStatus
    int getStatus() -> getStatus
    void onDisplay(int,byte[],int,int,int,int,int,int) -> onDisplay
    void onDataCallBack(int,int,byte[],int,int,int,int) -> onDataCallBack
    void onMessageCallBack(int,int,int,int,int) -> onMessageCallBack
    boolean processStreamHeader(byte[],int) -> processStreamHeader
    void a(byte[],int) -> a
    void sendMessage(int,int,int) -> sendMessage
com.videogo.device.DeviceInfo -> com.videogo.device.DeviceInfo:
    java.lang.String TAG -> TAG
    int ONLINE -> ONLINE
    int OFFLINE -> OFFLINE
    int PRIVATE -> PRIVATE
    int SLEEP -> SLEEP
    java.lang.String mDeviceID -> mDeviceID
    java.lang.String mDeviceIP -> mDeviceIP
    int mDevicePort -> mDevicePort
    java.lang.String mLocalDeviceIp -> mLocalDeviceIp
    int mLocalDevicePort -> mLocalDevicePort
    int mLocalHttpPort -> mLocalHttpPort
    java.lang.String mDeviceSN -> mDeviceSN
    int mHttpPort -> mHttpPort
    int mDeviceStatus -> mDeviceStatus
    java.lang.String mModel -> mModel
    java.lang.String maskIp -> maskIp
    int netType -> netType
    java.lang.String ppvsAddr -> ppvsAddr
    short ppvsPort -> ppvsPort
    int upnp -> upnp
    int privateStatus -> privateStatus
    int defence -> defence
    int diskNum -> diskNum
    java.lang.String version -> version
    java.lang.String diskStatus -> diskStatus
    int resultCode -> resultCode
    java.lang.String fullSerial -> fullSerial
    java.lang.String fullModel -> fullModel
    int isNeedUpgrade -> isNeedUpgrade
    java.lang.String belongSerial -> belongSerial
    int belongNo -> belongNo
    int belongState -> belongState
    int isEncrypt -> isEncrypt
    int cmdPort -> cmdPort
    int streamPort -> streamPort
    int localCmdPort -> localCmdPort
    int localStreamPort -> localStreamPort
    java.lang.String casIp -> casIp
    int casPort -> casPort
    java.lang.String encryptPwd -> encryptPwd
    java.lang.String releaseVersion -> releaseVersion
    java.lang.String mDeviceName -> mDeviceName
    java.lang.String supportExt -> supportExt
    int supportWifi -> supportWifi
    int upgradeStatus -> upgradeStatus
    int cloudServiceStatus -> cloudServiceStatus
    java.lang.String picUrl -> picUrl
    int relatedDeviceCount -> relatedDeviceCount
    int unnormalStatus -> unnormalStatus
    int alarmSoundMode -> alarmSoundMode
    com.videogo.device.DeviceOnlineInfo onlineInfo -> onlineInfo
    int offlineNotify -> offlineNotify
    java.lang.String cd -> cd
    int ce -> ce
    java.lang.String cf -> cf
    int cg -> cg
    java.lang.String ch -> ch
    java.lang.String ci -> ci
    java.lang.String cj -> cj
    java.lang.String ck -> ck
    java.lang.String cl -> cl
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDeviceID() -> getDeviceID
    void setDeviceID(java.lang.String) -> setDeviceID
    java.lang.String getDeviceName() -> getDeviceName
    void setDeviceName(java.lang.String) -> setDeviceName
    java.lang.String getDeviceIP() -> getDeviceIP
    void setDeviceIP(java.lang.String) -> setDeviceIP
    int getDevicePort() -> getDevicePort
    void setDevicePort(int) -> setDevicePort
    java.lang.String getDeviceSN() -> getDeviceSN
    void setDeviceSN(java.lang.String) -> setDeviceSN
    int getDeviceStatus() -> getDeviceStatus
    void setDeviceStatus(int) -> setDeviceStatus
    void setHttpPort(int) -> setHttpPort
    int getHttpPort() -> getHttpPort
    java.lang.String getModel() -> getModel
    void setModel(java.lang.String) -> setModel
    java.lang.String getLocalDeviceIp() -> getLocalDeviceIp
    void setLocalDeviceIp(java.lang.String) -> setLocalDeviceIp
    int getLocalDevicePort() -> getLocalDevicePort
    void setLocalDevicePort(int) -> setLocalDevicePort
    void setMaskIp(java.lang.String) -> setMaskIp
    java.lang.String getMaskIp() -> getMaskIp
    void setNetType(int) -> setNetType
    int getNetType() -> getNetType
    void setPpvsAddr(java.lang.String) -> setPpvsAddr
    java.lang.String getPpvsAddr() -> getPpvsAddr
    void setPpvsPort(short) -> setPpvsPort
    short getPpvsPort() -> getPpvsPort
    void setUpnp(int) -> setUpnp
    int getUpnp() -> getUpnp
    void setPrivateStatus(int) -> setPrivateStatus
    int getPrivateStatus() -> getPrivateStatus
    void setDefence(int) -> setDefence
    int getDefence() -> getDefence
    void setDiskNum(int) -> setDiskNum
    int getDiskNum() -> getDiskNum
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getVersion() -> getVersion
    java.lang.String getDiskStatus() -> getDiskStatus
    void setDiskStatus(java.lang.String) -> setDiskStatus
    int getResultCode() -> getResultCode
    void setResultCode(int) -> setResultCode
    java.lang.String getFullSerial() -> getFullSerial
    void setFullSerial(java.lang.String) -> setFullSerial
    java.lang.String getFullModel() -> getFullModel
    void setFullModel(java.lang.String) -> setFullModel
    void setNeedUpgrade(int) -> setNeedUpgrade
    int getNeedUpgrade() -> getNeedUpgrade
    void setBelongSerial(java.lang.String) -> setBelongSerial
    java.lang.String getBelongSerial() -> getBelongSerial
    void setBelongNo(int) -> setBelongNo
    int getBelongNo() -> getBelongNo
    void setBelongState(int) -> setBelongState
    int getBelongState() -> getBelongState
    void setIsEncrypt(int) -> setIsEncrypt
    int getIsEncrypt() -> getIsEncrypt
    void setCmdPort(int) -> setCmdPort
    int getCmdPort() -> getCmdPort
    void setStreamPort(int) -> setStreamPort
    int getStreamPort() -> getStreamPort
    void setLocalCmdPort(int) -> setLocalCmdPort
    int getLocalCmdPort() -> getLocalCmdPort
    void setLocalStreamPort(int) -> setLocalStreamPort
    int getLocalStreamPort() -> getLocalStreamPort
    java.lang.String getCasIp() -> getCasIp
    void setCasIp(java.lang.String) -> setCasIp
    int getCasPort() -> getCasPort
    void setCasPort(int) -> setCasPort
    java.lang.String getEncryptPwd() -> getEncryptPwd
    void setEncryptPwd(java.lang.String) -> setEncryptPwd
    void setReleaseVersion(java.lang.String) -> setReleaseVersion
    java.lang.String getReleaseVersion() -> getReleaseVersion
    void setSupportExt(java.lang.String) -> setSupportExt
    java.lang.String getSupportExt() -> getSupportExt
    void setSupportWifi(int) -> setSupportWifi
    int getSupportWifi() -> getSupportWifi
    void setUpgradeStatus(int) -> setUpgradeStatus
    int getUpgradeStatus() -> getUpgradeStatus
    void setCloudServiceStatus(int) -> setCloudServiceStatus
    int getCloudServiceStatus() -> getCloudServiceStatus
    void setPicUrl(java.lang.String) -> setPicUrl
    java.lang.String getPicUrl() -> getPicUrl
    int getRelatedDeviceCount() -> getRelatedDeviceCount
    void setRelatedDeviceCount(int) -> setRelatedDeviceCount
    int getUnnormalStatus() -> getUnnormalStatus
    void setUnnormalStatus(int) -> setUnnormalStatus
    int getAlarmSoundMode() -> getAlarmSoundMode
    void setAlarmSoundMode(int) -> setAlarmSoundMode
    com.videogo.device.DeviceOnlineInfo getOnlineInfo() -> getOnlineInfo
    void setOnlineInfo(com.videogo.device.DeviceOnlineInfo) -> setOnlineInfo
    int getOfflineNotify() -> getOfflineNotify
    void setOfflineNotify(int) -> setOfflineNotify
    java.lang.String getVtmIp() -> getVtmIp
    void setVtmIp(java.lang.String) -> setVtmIp
    int getVtmPort() -> getVtmPort
    void setVtmPort(int) -> setVtmPort
    java.lang.String getTtsIp() -> getTtsIp
    void setTtsIp(java.lang.String) -> setTtsIp
    int getTtsPort() -> getTtsPort
    void setTtsPort(int) -> setTtsPort
    java.lang.String getUserDeviceCreateTime() -> getUserDeviceCreateTime
    void setUserDeviceCreateTime(java.lang.String) -> setUserDeviceCreateTime
    int getLocalHttpPort() -> getLocalHttpPort
    void setLocalHttpPort(int) -> setLocalHttpPort
    void copy(com.videogo.device.DeviceInfo) -> copy
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.device.DeviceInfo$1 -> com.videogo.device.DeviceInfo$1:
    com.videogo.device.DeviceInfo e(android.os.Parcel) -> e
    com.videogo.device.DeviceInfo[] f(int) -> f
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.device.DeviceInfoEx -> com.videogo.device.DeviceInfoEx:
    int TYPE_ERROR -> TYPE_ERROR
    int TYPE_C1 -> TYPE_C1
    int TYPE_C2 -> TYPE_C2
    int TYPE_C3 -> TYPE_C3
    int TYPE_C4 -> TYPE_C4
    int TYPE_8464 -> TYPE_8464
    int TYPE_8464_CV1 -> TYPE_8464_CV1
    int TYPE_8133 -> TYPE_8133
    int TYPE_D1 -> TYPE_D1
    int TYPE_N1 -> TYPE_N1
    int TYPE_R1 -> TYPE_R1
    int TYPE_A1 -> TYPE_A1
    int TYPE_F1 -> TYPE_F1
    int TYPE_C2_2 -> TYPE_C2_2
    java.lang.String MODEL_C1 -> MODEL_C1
    java.lang.String MODEL_C2 -> MODEL_C2
    java.lang.String MODEL_C2_2 -> MODEL_C2_2
    java.lang.String MODEL_C3 -> MODEL_C3
    java.lang.String MODEL_C4 -> MODEL_C4
    java.lang.String MODEL_8464 -> MODEL_8464
    java.lang.String MODEL_8133 -> MODEL_8133
    java.lang.String MODEL_D1 -> MODEL_D1
    java.lang.String MODEL_N1 -> MODEL_N1
    java.lang.String MODEL_R1 -> MODEL_R1
    java.lang.String MODEL_F1 -> MODEL_F1
    java.lang.String MODEL_A1 -> MODEL_A1
    java.lang.String MODEL_8464_FORMER_VERSION -> MODEL_8464_FORMER_VERSION
    int DEFENCE_OPEN -> DEFENCE_OPEN
    int DEFENCE_CLOSE -> DEFENCE_CLOSE
    int DEFENCE_AT_HOME -> DEFENCE_AT_HOME
    int DEFENCE_OUT_DOOR -> DEFENCE_OUT_DOOR
    int DEFENCE_FORCE -> DEFENCE_FORCE
    int DEFENCE_BABY_CRY -> DEFENCE_BABY_CRY
    int DEFENCE_MOTION_DETECT -> DEFENCE_MOTION_DETECT
    int DEFENCE_ALL -> DEFENCE_ALL
    int cm -> cm
    java.lang.String cn -> cn
    java.lang.String co -> co
    java.lang.String cp -> cp
    java.lang.String cq -> cq
    int mRealPlayType -> mRealPlayType
    int cr -> cr
    java.lang.String cs -> cs
    java.lang.String ct -> ct
    int cu -> cu
    int bw -> bw
    int bj -> bj
    int bv -> bv
    int bx -> bx
    int by -> by
    int bz -> bz
    int UPGRADE_STATUS_NO -> UPGRADE_STATUS_NO
    int UPGRADE_STATUS_UPGRADING -> UPGRADE_STATUS_UPGRADING
    int UPGRADE_STATUS_REBOOTING -> UPGRADE_STATUS_REBOOTING
    int UPGRADE_STATUS_SUCCEED -> UPGRADE_STATUS_SUCCEED
    int UPGRADE_STATUS_FAILED -> UPGRADE_STATUS_FAILED
    int UPGRADE_STATUS_WAITING -> UPGRADE_STATUS_WAITING
    int UPGRADE_STATUS_DOWNLOADING -> UPGRADE_STATUS_DOWNLOADING
    int UPGRADE_STATUS_ERROR -> UPGRADE_STATUS_ERROR
    int bn -> bn
    int bu -> bu
    int bs -> bs
    int bk -> bk
    int bt -> bt
    int bm -> bm
    int bo -> bo
    int br -> br
    int bl -> bl
    int bp -> bp
    int bq -> bq
    int bA -> bA
    int bB -> bB
    int supportWifi -> supportWifi
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    java.lang.String cz -> cz
    long cA -> cA
    int cB -> cB
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isOnline() -> isOnline
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getVerifyCodePassword() -> getVerifyCodePassword
    void setVerifyCodePassword(java.lang.String) -> setVerifyCodePassword
    java.lang.String getCloudSafeModePasswd() -> getCloudSafeModePasswd
    void setCloudSafeModePasswd(java.lang.String) -> setCloudSafeModePasswd
    void b(boolean) -> b
    void logout() -> logout
    int getLoginID() -> getLoginID
    long getLoginID(boolean) -> getLoginID
    int getRealPlayType() -> getRealPlayType
    void setRealPlayType(int) -> setRealPlayType
    int getPlayBackType() -> getPlayBackType
    void setPlayBackType(int) -> setPlayBackType
    int getInLan() -> getInLan
    void setInLan(int) -> setInLan
    void setDiskStatus(int,char) -> setDiskStatus
    void setOperationCode(java.lang.String) -> setOperationCode
    java.lang.String getOperationCode() -> getOperationCode
    void setEncryptKey(java.lang.String) -> setEncryptKey
    java.lang.String getEncryptKey() -> getEncryptKey
    void setEncryptType(int) -> setEncryptType
    int getEncryptType() -> getEncryptType
    boolean isSupportV17() -> isSupportV17
    int getModelType() -> getModelType
    boolean isNeedUpgradeInterim() -> isNeedUpgradeInterim
    void setSupportExt(java.lang.String) -> setSupportExt
    int getSupportUploadCloudFile() -> getSupportUploadCloudFile
    int getSupportChangeSafePasswd() -> getSupportChangeSafePasswd
    int getSupportPtz() -> getSupportPtz
    int getSupportCapture() -> getSupportCapture
    int getSupportAlarmVoice() -> getSupportAlarmVoice
    int getSupportAutoOffline() -> getSupportAutoOffline
    int getSupportTalk() -> getSupportTalk
    int getSupportDefence() -> getSupportDefence
    int getSupportDefencePlan() -> getSupportDefencePlan
    int getSupportDisk() -> getSupportDisk
    int getSupportMessage() -> getSupportMessage
    int getSupportPrivacy() -> getSupportPrivacy
    int getSupportEncrypt() -> getSupportEncrypt
    int getSupportCloud() -> getSupportCloud
    int getSupportCloudVersion() -> getSupportCloudVersion
    int getSupportUpgrade() -> getSupportUpgrade
    int getSupportRelatedDevice() -> getSupportRelatedDevice
    int getNotifyStatus() -> getNotifyStatus
    void setNotifyStatus(int) -> setNotifyStatus
    int getNotifyOnline() -> getNotifyOnline
    void setNotifyOnline(int) -> setNotifyOnline
    void setUpgradeProgress(int) -> setUpgradeProgress
    int getUpgradeProgress() -> getUpgradeProgress
    int getUpgradeErrorCode() -> getUpgradeErrorCode
    void setUpgradeErrorCode(int) -> setUpgradeErrorCode
    java.lang.String getUpgradeInputPwd() -> getUpgradeInputPwd
    void setUpgradeInputPwd(java.lang.String) -> setUpgradeInputPwd
    boolean hasUpgrade() -> hasUpgrade
    void setUpgradeStatus(int) -> setUpgradeStatus
    int getUpgradeStatus() -> getUpgradeStatus
    java.lang.String getVtduToken(int) -> getVtduToken
    com.hik.CASClient.ST_STREAM_INFO getStreamInfo(int,int,boolean) -> getStreamInfo
    void copy(com.videogo.device.DeviceInfoEx) -> copy
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.device.DeviceInfoEx$1 -> com.videogo.device.DeviceInfoEx$1:
    com.videogo.device.DeviceInfoEx f(android.os.Parcel) -> f
    com.videogo.device.DeviceInfoEx[] g(int) -> g
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.device.DeviceManager -> com.videogo.device.DeviceManager:
    java.lang.String TAG -> TAG
    java.lang.String DEVICE_LIST_CHANGE_ACTION -> DEVICE_LIST_CHANGE_ACTION
    java.util.List cC -> cC
    com.videogo.device.DeviceManager cD -> cD
    com.hik.ppvclient.PPVClient mPPVClientSDK -> mPPVClientSDK
    int mDeviceID -> mDeviceID
    android.content.Context mContext -> mContext
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    com.videogo.device.DeviceManager getInstance() -> getInstance
    com.videogo.device.DeviceInfoEx getDeviceInfoExById(java.lang.String) -> getDeviceInfoExById
    void logoutAllDevice() -> logoutAllDevice
    void setDeviceList(java.util.List) -> setDeviceList
    void a(java.util.List) -> a
    void v() -> v
    java.util.List getDeviceList() -> getDeviceList
    void addDevice(com.videogo.device.DeviceInfoEx) -> addDevice
    boolean a(com.videogo.device.DeviceInfoEx,boolean) -> a
    void deleteDevice(java.lang.String) -> deleteDevice
    void clearDevice() -> clearDevice
    boolean isDisplayNotice() -> isDisplayNotice
    java.util.List getDownloadUpgradeDeviceList() -> getDownloadUpgradeDeviceList
    boolean haveAlarmDevice() -> haveAlarmDevice
    boolean haveLeaveMessageDevice() -> haveLeaveMessageDevice
    void clearDevicePlayType() -> clearDevicePlayType
    int getDeviceNeedUpdateCount() -> getDeviceNeedUpdateCount
    boolean getDeviceIsOneKeyUpdating() -> getDeviceIsOneKeyUpdating
    boolean getDeviceOneKeyUpdateFinished() -> getDeviceOneKeyUpdateFinished
    void validatePwdByPPV(com.videogo.device.DeviceInfoEx,java.lang.String) -> validatePwdByPPV
    void onProgressNotifyCallBack(int,int,byte[]) -> onProgressNotifyCallBack
    boolean isLan(com.videogo.device.DeviceInfoEx) -> isLan
    java.util.List a(com.videogo.device.DeviceManager) -> a
    com.hik.CASClient.CASClient b(com.videogo.device.DeviceManager) -> b
com.videogo.device.DeviceManager$1 -> com.videogo.device.DeviceManager$1:
    com.videogo.device.DeviceManager cE -> cE
    java.util.List cF -> cF
    void run() -> run
com.videogo.device.DeviceManager$2 -> com.videogo.device.DeviceManager$2:
    com.videogo.device.DeviceManager cE -> cE
    void run() -> run
com.videogo.device.DeviceManager$3 -> com.videogo.device.DeviceManager$3:
    com.videogo.device.DeviceManager cE -> cE
    com.videogo.device.DeviceInfoEx cG -> cG
    void run() -> run
com.videogo.device.DeviceOnlineInfo -> com.videogo.device.DeviceOnlineInfo:
    int cH -> cH
    java.lang.String cI -> cI
    java.lang.String cJ -> cJ
    java.lang.String cK -> cK
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getOnlinePlan() -> getOnlinePlan
    void setOnlinePlan(int) -> setOnlinePlan
    void setOnlineTimeBegin(java.lang.String) -> setOnlineTimeBegin
    java.lang.String getOnlineTimeBegin() -> getOnlineTimeBegin
    void setOnlineTimeEnd(java.lang.String) -> setOnlineTimeEnd
    java.lang.String getOnlineWeek() -> getOnlineWeek
    void setOnlineWeek(java.lang.String) -> setOnlineWeek
    java.lang.String getOnlineTimeEnd() -> getOnlineTimeEnd
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.device.DeviceOnlineInfo$1 -> com.videogo.device.DeviceOnlineInfo$1:
    com.videogo.device.DeviceOnlineInfo g(android.os.Parcel) -> g
    com.videogo.device.DeviceOnlineInfo[] h(int) -> h
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.device.DeviceReportInfo -> com.videogo.device.DeviceReportInfo:
    java.lang.String TAG -> TAG
    int DEFENCE_OPEN -> DEFENCE_OPEN
    int DEFENCE_CLOSE -> DEFENCE_CLOSE
    int DISK_FORMAT -> DISK_FORMAT
    int UPGRADE -> UPGRADE
    int LEAVE_VOICE -> LEAVE_VOICE
    int ALARM_VOICE_MODE -> ALARM_VOICE_MODE
    int A1_MODE_ATHOME -> A1_MODE_ATHOME
    int A1_MODE_OUTDOOR -> A1_MODE_OUTDOOR
    int A1_MODE_CLOSE -> A1_MODE_CLOSE
    int F1_BABY_CRY_OPEN -> F1_BABY_CRY_OPEN
    int F1_BABY_CRY_CLOSE -> F1_BABY_CRY_CLOSE
com.videogo.device.PeripheralInfo -> com.videogo.device.PeripheralInfo:
    int id -> id
    java.lang.String cL -> cL
    int M -> M
    java.lang.String K -> K
    int cM -> cM
    java.lang.String L -> L
    java.lang.String cN -> cN
    java.lang.String cO -> cO
    int cP -> cP
    int cQ -> cQ
    int cR -> cR
    int cS -> cS
    int cT -> cT
    java.lang.String cU -> cU
    java.lang.String cV -> cV
    java.lang.String cW -> cW
    java.lang.String cX -> cX
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getChannelSerial() -> getChannelSerial
    void setChannelSerial(java.lang.String) -> setChannelSerial
    int getChannelNo() -> getChannelNo
    void setChannelNo(int) -> setChannelNo
    java.lang.String getDeviceSerial() -> getDeviceSerial
    void setDeviceSerial(java.lang.String) -> setDeviceSerial
    int getChannelState() -> getChannelState
    void setChannelState(int) -> setChannelState
    java.lang.String getChannelType() -> getChannelType
    void setChannelType(java.lang.String) -> setChannelType
    java.lang.String getChannelTypeStr() -> getChannelTypeStr
    void setChannelTypeStr(java.lang.String) -> setChannelTypeStr
    java.lang.String getLocation() -> getLocation
    void setLocationt(java.lang.String) -> setLocationt
    int getZfStatus() -> getZfStatus
    void setZfStatus(int) -> setZfStatus
    int getUvStatus() -> getUvStatus
    void setUvStatus(int) -> setUvStatus
    int getIwcStatus() -> getIwcStatus
    void setIwcStatus(int) -> setIwcStatus
    int getOlStatus() -> getOlStatus
    void setOlStatus(int) -> setOlStatus
    int getExtInt() -> getExtInt
    void setExtInt(int) -> setExtInt
    java.lang.String getExtStr() -> getExtStr
    void setExtStr(java.lang.String) -> setExtStr
    java.lang.String getCreateTime() -> getCreateTime
    void setCreateTime(java.lang.String) -> setCreateTime
    java.lang.String getUpdateTime() -> getUpdateTime
    void setUpdateTime(java.lang.String) -> setUpdateTime
    java.lang.String getPicPath() -> getPicPath
    void setPicPath(java.lang.String) -> setPicPath
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.device.PeripheralInfo$1 -> com.videogo.device.PeripheralInfo$1:
    com.videogo.device.PeripheralInfo h(android.os.Parcel) -> h
    com.videogo.device.PeripheralInfo[] i(int) -> i
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.device.SearchDeviceInfo -> com.videogo.device.SearchDeviceInfo:
    java.lang.String cY -> cY
    java.lang.String cZ -> cZ
    java.lang.String da -> da
    java.lang.String fullSerial -> fullSerial
    java.lang.String db -> db
    int supportWifi -> supportWifi
    java.lang.String releaseVersion -> releaseVersion
    int dc -> dc
    int relatedDeviceCount -> relatedDeviceCount
    java.lang.String getErrorCode() -> getErrorCode
    void setErrorCode(java.lang.String) -> setErrorCode
    java.lang.String getDisplayName() -> getDisplayName
    void setDisplayName(java.lang.String) -> setDisplayName
    java.lang.String getSubSerial() -> getSubSerial
    void setSubSerial(java.lang.String) -> setSubSerial
    java.lang.String getFullSerial() -> getFullSerial
    void setFullSerial(java.lang.String) -> setFullSerial
    java.lang.String getDefaultPicPath() -> getDefaultPicPath
    void setDefaultPicPath(java.lang.String) -> setDefaultPicPath
    int getSupportWifi() -> getSupportWifi
    void setSupportWifi(int) -> setSupportWifi
    java.lang.String getReleaseVersion() -> getReleaseVersion
    void setReleaseVersion(java.lang.String) -> setReleaseVersion
    int getAvailableChannelCount() -> getAvailableChannelCount
    void setAvailableChannelCount(int) -> setAvailableChannelCount
    int getRelatedDeviceCount() -> getRelatedDeviceCount
    void setRelatedDeviceCount(int) -> setRelatedDeviceCount
com.videogo.deviceupgrade.DeviceUpgradeCtrl -> com.videogo.deviceupgrade.DeviceUpgradeCtrl:
    com.videogo.deviceupgrade.DeviceUpgradeCtrl dd -> dd
    com.hik.CASClient.CASClient de -> de
    java.lang.String mHardwareCode -> mHardwareCode
    com.videogo.util.LocalInfo ca -> ca
    com.videogo.deviceupgrade.DeviceUpgradeCtrl getInstance() -> getInstance
    int startDeviceUpgrade(com.videogo.device.DeviceInfoEx) -> startDeviceUpgrade
com.videogo.deviceupgrade.DeviceUpgradeInfo -> com.videogo.deviceupgrade.DeviceUpgradeInfo:
    int df -> df
    java.util.List dg -> dg
    java.lang.String dh -> dh
    java.lang.String di -> di
    int dj -> dj
    java.lang.String cn -> cn
    java.lang.String co -> co
    java.lang.String dk -> dk
    void clear() -> clear
    void setFtpInfo(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> setFtpInfo
    void addDeviceVersionDto(com.videogo.deviceupgrade.DeviceVersionDto) -> addDeviceVersionDto
    java.util.List getDeviceVersionArray() -> getDeviceVersionArray
    int getModelCount() -> getModelCount
    java.lang.String getFtpDomain() -> getFtpDomain
    java.lang.String getFtpAddr() -> getFtpAddr
    int getPort() -> getPort
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getPubPath() -> getPubPath
    void setDeviceVersionArray(java.util.List) -> setDeviceVersionArray
    java.lang.String toString() -> toString
com.videogo.deviceupgrade.DeviceVersionDto -> com.videogo.deviceupgrade.DeviceVersionDto:
    java.lang.String mModel -> mModel
    java.lang.String dl -> dl
    java.lang.String dm -> dm
    java.lang.String dn -> dn
    java.lang.String do -> do
    long dp -> dp
    java.lang.String dq -> dq
    java.lang.String dr -> dr
    java.lang.String ds -> ds
    void setModel(java.lang.String) -> setModel
    void setMd5(java.lang.String) -> setMd5
    void setUrl(java.lang.String) -> setUrl
    void setVersion(java.lang.String) -> setVersion
    void setDesc(java.lang.String) -> setDesc
    void setSize(long) -> setSize
    java.lang.String getModel() -> getModel
    java.lang.String getMd5() -> getMd5
    java.lang.String getUrl() -> getUrl
    java.lang.String getVersion() -> getVersion
    java.lang.String getDesc() -> getDesc
    long getSize() -> getSize
    java.lang.String getInterimMd5() -> getInterimMd5
    java.lang.String getInterimUrl() -> getInterimUrl
    java.lang.String getInterimVersion() -> getInterimVersion
    void setInterimMd5(java.lang.String) -> setInterimMd5
    void setInterimUrl(java.lang.String) -> setInterimUrl
    void setInterimVersion(java.lang.String) -> setInterimVersion
    java.lang.String toString() -> toString
com.videogo.exception.BaseException -> com.videogo.exception.BaseException:
    int dt -> dt
    int getErrorCode() -> getErrorCode
com.videogo.exception.CASClientSDKException -> com.videogo.exception.CASClientSDKException:
    long serialVersionUID -> serialVersionUID
    int CASCLIENT_NO_ERROR -> CASCLIENT_NO_ERROR
    int CASCLIENT_NOINIT -> CASCLIENT_NOINIT
    int CASCLIENT_MSG_PU_NO_RESOURCE -> CASCLIENT_MSG_PU_NO_RESOURCE
    int CASCLIENT_CAS_TALK_CHANNEL_BUSY -> CASCLIENT_CAS_TALK_CHANNEL_BUSY
    int CASCLIENT_CAS_PU_OPEN_PRIVACY -> CASCLIENT_CAS_PU_OPEN_PRIVACY
    int CASCLIENT_CAS_STREAM_SEND_ERROR -> CASCLIENT_CAS_STREAM_SEND_ERROR
    int CASCLIENT_CAS_STREAM_RECV_ERROR -> CASCLIENT_CAS_STREAM_RECV_ERROR
    int CASCLIENT_CAS_NO_DATA -> CASCLIENT_CAS_NO_DATA
    int CASCLIENT_STREAM_ERROR -> CASCLIENT_STREAM_ERROR
    int CASCLIENT_AUDIO_ERROR -> CASCLIENT_AUDIO_ERROR
    int CASCLIENT_PLAYBACK_ERROR -> CASCLIENT_PLAYBACK_ERROR
com.videogo.exception.ErrorCode -> com.videogo.exception.ErrorCode:
    int ERROR_WEB_NETWORK_EXCEPTION -> ERROR_WEB_NETWORK_EXCEPTION
    int ERROR_WEB_PARAM_ERROR -> ERROR_WEB_PARAM_ERROR
    int ERROR_WEB_SESSION_ERROR -> ERROR_WEB_SESSION_ERROR
    int ERROR_WEB_SESSION_EXPIRE -> ERROR_WEB_SESSION_EXPIRE
    int ERROR_WEB_USER_PASSWORD_ERROR -> ERROR_WEB_USER_PASSWORD_ERROR
    int ERROR_WEB_APPKEY_ERROR -> ERROR_WEB_APPKEY_ERROR
    int ERROR_WEB_IP_LIMIT -> ERROR_WEB_IP_LIMIT
    int ERROR_WEB_INVOKE_LIMIT -> ERROR_WEB_INVOKE_LIMIT
    int ERROR_WEB_SIGN_ERROR -> ERROR_WEB_SIGN_ERROR
    int ERROR_WEB_SIGN_PARAM_ERROR -> ERROR_WEB_SIGN_PARAM_ERROR
    int ERROR_WEB_SIGN_EXPIRE -> ERROR_WEB_SIGN_EXPIRE
    int ERROR_WEB_CODE_ERROR -> ERROR_WEB_CODE_ERROR
    int ERROR_WEB_GET_CODE_LIMIT -> ERROR_WEB_GET_CODE_LIMIT
    int ERROR_WEB_CAMERA_NOTEXIT -> ERROR_WEB_CAMERA_NOTEXIT
    int ERROR_WEB_DEVICE_NOTEXIT -> ERROR_WEB_DEVICE_NOTEXIT
    int ERROR_WEB_HARDWARE_SIGNATURE_IS_NULL -> ERROR_WEB_HARDWARE_SIGNATURE_IS_NULL
    int ERROR_WEB_HARDWARE_SIGNATURE_ERROR -> ERROR_WEB_HARDWARE_SIGNATURE_ERROR
    int ERROR_WEB_HARDWARE_SIGNATURE_OP_ERROR -> ERROR_WEB_HARDWARE_SIGNATURE_OP_ERROR
    int ERROR_WEB_NET_EXCEPTION -> ERROR_WEB_NET_EXCEPTION
    int ERROR_WEB_DIVICE_NOT_ONLINE -> ERROR_WEB_DIVICE_NOT_ONLINE
    int ERROR_WEB_DIVICE_SO_TIMEOUT -> ERROR_WEB_DIVICE_SO_TIMEOUT
    int ERROR_WEB_DIVICE_NOT_HAVE -> ERROR_WEB_DIVICE_NOT_HAVE
    int ERROR_WEB_DEVICE_UNSUPPORT_CLOUD -> ERROR_WEB_DEVICE_UNSUPPORT_CLOUD
    int ERROR_WEB_DIVICE_NOT_ADD -> ERROR_WEB_DIVICE_NOT_ADD
    int ERROR_WEB_DATA_ERROR -> ERROR_WEB_DATA_ERROR
    int ERROR_WEB_SERVER_EXCEPTION -> ERROR_WEB_SERVER_EXCEPTION
    int ERROR_DEVICE_UPGRADE_BASE_CODE -> ERROR_DEVICE_UPGRADE_BASE_CODE
    int ERROR_DEVICE_UPGRADE_NO_ERROR -> ERROR_DEVICE_UPGRADE_NO_ERROR
    int ERROR_DEVICE_UPGRADE_PU_REQUEST_REFUSED -> ERROR_DEVICE_UPGRADE_PU_REQUEST_REFUSED
    int ERROR_DEVICE_UPGRADE_PU_REQUEST_VERSION_NOT_FOUND -> ERROR_DEVICE_UPGRADE_PU_REQUEST_VERSION_NOT_FOUND
    int ERROR_DEVICE_UPGRADE_PU_REQUEST_UNNEEDED -> ERROR_DEVICE_UPGRADE_PU_REQUEST_UNNEEDED
    int ERROR_DEVICE_UPGRADE_PU_REQUEST_NO_SERVER_ONLINE -> ERROR_DEVICE_UPGRADE_PU_REQUEST_NO_SERVER_ONLINE
    int ERROR_DEVICE_UPGRADE_PU_REQUEST_ALL_SERVER_BUSY -> ERROR_DEVICE_UPGRADE_PU_REQUEST_ALL_SERVER_BUSY
    int ERROR_DEVICE_UPGRADE_PU_UPGRADING -> ERROR_DEVICE_UPGRADE_PU_UPGRADING
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_FAILED -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_FAILED
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_WRITEFLASH_FAILED -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_WRITEFLASH_FAILED
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_LANGUAGE_DISMATCH -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_LANGUAGE_DISMATCH
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_PLATFORM_DISMATCH -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_PLATFORM_DISMATCH
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_SPACE_DISMATCH -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_SPACE_DISMATCH
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_MEM_DISMATCH -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_MEM_DISMATCH
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_MAJORTYPE_DISMATCH -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_MAJORTYPE_DISMATCH
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_MINORTYPE_DISMATCH -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_MINORTYPE_DISMATCH
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_FILE_NUMS_INVALID -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_FILE_NUMS_INVALID
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_PACK_LEN_INVALID -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_PACK_LEN_INVALID
    int ERROR_DEVICE_UPGRADE_PU_UPGRAD_CHECKSUM_ERR -> ERROR_DEVICE_UPGRADE_PU_UPGRAD_CHECKSUM_ERR
    int ERROR_DEVICE_UPGRADE_PU_UPGRADE_FRONT_FAIL -> ERROR_DEVICE_UPGRADE_PU_UPGRADE_FRONT_FAIL
    int ERROR_DEVICE_UPGRADE_PU_NO_RESOURCE -> ERROR_DEVICE_UPGRADE_PU_NO_RESOURCE
    int ERROR_DEVICE_UPGRADE_PU_OPER_NOPERMIT -> ERROR_DEVICE_UPGRADE_PU_OPER_NOPERMIT
    int ERROR_DEVICE_UPGRADE_PU_REBOOTING -> ERROR_DEVICE_UPGRADE_PU_REBOOTING
    int ERROR_DEVICE_UPGRADE_PU_NO_MEMORY -> ERROR_DEVICE_UPGRADE_PU_NO_MEMORY
    int ERROR_DEVICE_UPGRADE_PU_PARAM_ERR -> ERROR_DEVICE_UPGRADE_PU_PARAM_ERR
    int ERROR_DEVICE_UPGRADE_PU_HEAD_DATA_ERR -> ERROR_DEVICE_UPGRADE_PU_HEAD_DATA_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FAILED -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FAILED
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_PATH_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_PATH_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_PARAM_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_PARAM_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_ESTCMD_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_ESTCMD_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_CMD_FAILED -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_CMD_FAILED
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_CONNINIT_FAILED -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_CONNINIT_FAILED
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_TRANS_ABORT -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_TRANS_ABORT
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_SELECT_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_SELECT_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_GET_DATA_SOCK_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_GET_DATA_SOCK_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_RECV_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_RECV_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_BUFF_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_BUFF_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FILE_CHECK_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FILE_CHECK_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_CONN_ERR -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_CONN_ERR
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_LOGIN_FAILED -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_LOGIN_FAILED
    int ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_GET_FILEINFO_FAILED -> ERROR_DEVICE_UPGRADE_PU_DOWNLOAD_FTP_GET_FILEINFO_FAILED
    int ERROR_PB_NO_RECORD_FILE -> ERROR_PB_NO_RECORD_FILE
    int ERROR_PB_PPVS_ERROR -> ERROR_PB_PPVS_ERROR
    int ERROR_PB_PLAYER_HANDLE_NULL -> ERROR_PB_PLAYER_HANDLE_NULL
    int ERROR_PB_FINISHED_PLAY -> ERROR_PB_FINISHED_PLAY
    int ERROR_PB_FILE_PATH_NULL -> ERROR_PB_FILE_PATH_NULL
    int ERROR_PB_OPEN_FILE_FAILE -> ERROR_PB_OPEN_FILE_FAILE
    int ERROR_PB_MALLOC_BUFFER_FAILE -> ERROR_PB_MALLOC_BUFFER_FAILE
    int ERROR_PB_WRITE_FILE_FAILE -> ERROR_PB_WRITE_FILE_FAILE
    int ERROR_PB_NOT_PLAYING -> ERROR_PB_NOT_PLAYING
    int ERROR_PB_FILE_HANDLE_NULL -> ERROR_PB_FILE_HANDLE_NULL
    int ERROR_PB_WRITE_FILE_ERROR -> ERROR_PB_WRITE_FILE_ERROR
    int ERROR_PB_SYSTRANSFORM_ERROR -> ERROR_PB_SYSTRANSFORM_ERROR
    int ERROR_MP_NO_ERROR -> ERROR_MP_NO_ERROR
    int ERROR_MP_PARA_OVER -> ERROR_MP_PARA_OVER
    int ERROR_MP_ORDER_ERROR -> ERROR_MP_ORDER_ERROR
    int ERROR_MP_TIMER_ERROR -> ERROR_MP_TIMER_ERROR
    int ERROR_MP_DEC_VIDEO_ERROR -> ERROR_MP_DEC_VIDEO_ERROR
    int ERROR_MP_DEC_AUDIO_ERROR -> ERROR_MP_DEC_AUDIO_ERROR
    int ERROR_MP_ALLOC_MEMORY_ERROR -> ERROR_MP_ALLOC_MEMORY_ERROR
    int ERROR_MP_OPEN_FILE_ERROR -> ERROR_MP_OPEN_FILE_ERROR
    int ERROR_MP_CREATE_OBJ_ERROR -> ERROR_MP_CREATE_OBJ_ERROR
    int ERROR_MP_BUF_OVER -> ERROR_MP_BUF_OVER
    int ERROR_MP_CREATE_SOUND_ERROR -> ERROR_MP_CREATE_SOUND_ERROR
    int ERROR_MP_SET_VOLUME_ERROR -> ERROR_MP_SET_VOLUME_ERROR
    int ERROR_MP_SUPPORT_FILE_ONLY -> ERROR_MP_SUPPORT_FILE_ONLY
    int ERROR_MP_SUPPORT_STREAM_ONLY -> ERROR_MP_SUPPORT_STREAM_ONLY
    int ERROR_MP_SYS_NOT_SUPPORT -> ERROR_MP_SYS_NOT_SUPPORT
    int ERROR_MP_FILEHEADER_UNKNOWN -> ERROR_MP_FILEHEADER_UNKNOWN
    int ERROR_MP_VERSION_INCORRECT -> ERROR_MP_VERSION_INCORRECT
    int ERROR_MP_INIT_DECODER_ERROR -> ERROR_MP_INIT_DECODER_ERROR
    int ERROR_MP_CHECK_FILE_ERROR -> ERROR_MP_CHECK_FILE_ERROR
    int ERROR_MP_INIT_TIMER_ERROR -> ERROR_MP_INIT_TIMER_ERROR
    int ERROR_MP_BLT_ERROR -> ERROR_MP_BLT_ERROR
    int ERROR_MP_OPEN_FILE_ERROR_MULTI -> ERROR_MP_OPEN_FILE_ERROR_MULTI
    int ERROR_MP_OPEN_FILE_ERROR_VIDEO -> ERROR_MP_OPEN_FILE_ERROR_VIDEO
    int ERROR_MP_JPEG_COMPRESS_ERROR -> ERROR_MP_JPEG_COMPRESS_ERROR
    int ERROR_MP_EXTRACT_NOT_SUPPORT -> ERROR_MP_EXTRACT_NOT_SUPPORT
    int ERROR_MP_EXTRACT_DATA_ERROR -> ERROR_MP_EXTRACT_DATA_ERROR
    int ERROR_MP_SECRET_KEY_ERROR -> ERROR_MP_SECRET_KEY_ERROR
    int ERROR_MP_DECODE_KEYFRAME_ERROR -> ERROR_MP_DECODE_KEYFRAME_ERROR
    int ERROR_MP_NEED_MORE_DATA -> ERROR_MP_NEED_MORE_DATA
    int ERROR_MP_INVALID_PORT -> ERROR_MP_INVALID_PORT
    int ERROR_MP_FAIL_UNKNOWN -> ERROR_MP_FAIL_UNKNOWN
    int ERROR_MP_NOINIT -> ERROR_MP_NOINIT
    int ERROR_MP_GET_PORT_FAIL -> ERROR_MP_GET_PORT_FAIL
    int ERROR_MP_SET_FILEENDCB_FAIL -> ERROR_MP_SET_FILEENDCB_FAIL
    int ERROR_DVR_NO_ERROR -> ERROR_DVR_NO_ERROR
    int ERROR_DVR_PASSWORD_ERROR -> ERROR_DVR_PASSWORD_ERROR
    int ERROR_DVR_NOENOUGHPRI -> ERROR_DVR_NOENOUGHPRI
    int ERROR_DVR_NOINIT -> ERROR_DVR_NOINIT
    int ERROR_DVR_CHANNEL_ERROR -> ERROR_DVR_CHANNEL_ERROR
    int ERROR_DVR_OVER_MAXLINK -> ERROR_DVR_OVER_MAXLINK
    int ERROR_DVR_VERSIONNOMATCH -> ERROR_DVR_VERSIONNOMATCH
    int ERROR_DVR_NETWORK_FAIL_CONNECT -> ERROR_DVR_NETWORK_FAIL_CONNECT
    int ERROR_DVR_NETWORK_SEND_ERROR -> ERROR_DVR_NETWORK_SEND_ERROR
    int ERROR_DVR_NETWORK_RECV_ERROR -> ERROR_DVR_NETWORK_RECV_ERROR
    int ERROR_DVR_NETWORK_RECV_TIMEOUT -> ERROR_DVR_NETWORK_RECV_TIMEOUT
    int ERROR_DVR_NETWORK_ERRORDATA -> ERROR_DVR_NETWORK_ERRORDATA
    int ERROR_DVR_ORDER_ERROR -> ERROR_DVR_ORDER_ERROR
    int ERROR_DVR_OPERNOPERMIT -> ERROR_DVR_OPERNOPERMIT
    int ERROR_DVR_COMMANDTIMEOUT -> ERROR_DVR_COMMANDTIMEOUT
    int ERROR_DVR_ERRORSERIALPORT -> ERROR_DVR_ERRORSERIALPORT
    int ERROR_DVR_ERRORALARMPORT -> ERROR_DVR_ERRORALARMPORT
    int ERROR_DVR_PARAMETER_ERROR -> ERROR_DVR_PARAMETER_ERROR
    int ERROR_DVR_CHAN_EXCEPTION -> ERROR_DVR_CHAN_EXCEPTION
    int ERROR_DVR_NODISK -> ERROR_DVR_NODISK
    int ERROR_DVR_ERRORDISKNUM -> ERROR_DVR_ERRORDISKNUM
    int ERROR_DVR_DISK_FULL -> ERROR_DVR_DISK_FULL
    int ERROR_DVR_DISK_ERROR -> ERROR_DVR_DISK_ERROR
    int ERROR_DVR_NOSUPPORT -> ERROR_DVR_NOSUPPORT
    int ERROR_DVR_BUSY -> ERROR_DVR_BUSY
    int ERROR_DVR_MODIFY_FAIL -> ERROR_DVR_MODIFY_FAIL
    int ERROR_DVR_PASSWORD_FORMAT_ERROR -> ERROR_DVR_PASSWORD_FORMAT_ERROR
    int ERROR_DVR_DISK_FORMATING -> ERROR_DVR_DISK_FORMATING
    int ERROR_DVR_DVRNORESOURCE -> ERROR_DVR_DVRNORESOURCE
    int ERROR_DVR_DVROPRATEFAILED -> ERROR_DVR_DVROPRATEFAILED
    int ERROR_DVR_OPENHOSTSOUND_FAIL -> ERROR_DVR_OPENHOSTSOUND_FAIL
    int ERROR_DVR_DVRVOICEOPENED -> ERROR_DVR_DVRVOICEOPENED
    int ERROR_DVR_TIMEINPUTERROR -> ERROR_DVR_TIMEINPUTERROR
    int ERROR_DVR_NOSPECFILE -> ERROR_DVR_NOSPECFILE
    int ERROR_DVR_CREATEFILE_ERROR -> ERROR_DVR_CREATEFILE_ERROR
    int ERROR_DVR_FILEOPENFAIL -> ERROR_DVR_FILEOPENFAIL
    int ERROR_DVR_OPERNOTFINISH -> ERROR_DVR_OPERNOTFINISH
    int ERROR_DVR_GETPLAYTIMEFAIL -> ERROR_DVR_GETPLAYTIMEFAIL
    int ERROR_DVR_PLAYFAIL -> ERROR_DVR_PLAYFAIL
    int ERROR_DVR_FILEFORMAT_ERROR -> ERROR_DVR_FILEFORMAT_ERROR
    int ERROR_DVR_DIR_ERROR -> ERROR_DVR_DIR_ERROR
    int ERROR_DVR_ALLOC_RESOURCE_ERROR -> ERROR_DVR_ALLOC_RESOURCE_ERROR
    int ERROR_DVR_AUDIO_MODE_ERROR -> ERROR_DVR_AUDIO_MODE_ERROR
    int ERROR_DVR_NOENOUGH_BUF -> ERROR_DVR_NOENOUGH_BUF
    int ERROR_DVR_CREATESOCKET_ERROR -> ERROR_DVR_CREATESOCKET_ERROR
    int ERROR_DVR_SETSOCKET_ERROR -> ERROR_DVR_SETSOCKET_ERROR
    int ERROR_DVR_MAX_NUM -> ERROR_DVR_MAX_NUM
    int ERROR_DVR_USERNOTEXIST -> ERROR_DVR_USERNOTEXIST
    int ERROR_DVR_WRITEFLASHERROR -> ERROR_DVR_WRITEFLASHERROR
    int ERROR_DVR_UPGRADEFAIL -> ERROR_DVR_UPGRADEFAIL
    int ERROR_DVR_CARDHAVEINIT -> ERROR_DVR_CARDHAVEINIT
    int ERROR_DVR_PLAYERFAILED -> ERROR_DVR_PLAYERFAILED
    int ERROR_DVR_MAX_USERNUM -> ERROR_DVR_MAX_USERNUM
    int ERROR_DVR_GETLOCALIPANDMACFAIL -> ERROR_DVR_GETLOCALIPANDMACFAIL
    int ERROR_DVR_NOENCODEING -> ERROR_DVR_NOENCODEING
    int ERROR_DVR_IPMISMATCH -> ERROR_DVR_IPMISMATCH
    int ERROR_DVR_MACMISMATCH -> ERROR_DVR_MACMISMATCH
    int ERROR_DVR_UPGRADELANGMISMATCH -> ERROR_DVR_UPGRADELANGMISMATCH
    int ERROR_DVR_MAX_PLAYERPORT -> ERROR_DVR_MAX_PLAYERPORT
    int ERROR_DVR_NOSPACEBACKUP -> ERROR_DVR_NOSPACEBACKUP
    int ERROR_DVR_NODEVICEBACKUP -> ERROR_DVR_NODEVICEBACKUP
    int ERROR_DVR_PICTURE_BITS_ERROR -> ERROR_DVR_PICTURE_BITS_ERROR
    int ERROR_DVR_PICTURE_DIMENSION_ERROR -> ERROR_DVR_PICTURE_DIMENSION_ERROR
    int ERROR_DVR_PICTURE_SIZ_ERROR -> ERROR_DVR_PICTURE_SIZ_ERROR
    int ERROR_DVR_LOADPLAYERSDKFAILED -> ERROR_DVR_LOADPLAYERSDKFAILED
    int ERROR_DVR_LOADPLAYERSDKPROC_ERROR -> ERROR_DVR_LOADPLAYERSDKPROC_ERROR
    int ERROR_DVR_LOADDSSDKFAILED -> ERROR_DVR_LOADDSSDKFAILED
    int ERROR_DVR_LOADDSSDKPROC_ERROR -> ERROR_DVR_LOADDSSDKPROC_ERROR
    int ERROR_DVR_DSSDK_ERROR -> ERROR_DVR_DSSDK_ERROR
    int ERROR_DVR_VOICEMONOPOLIZE -> ERROR_DVR_VOICEMONOPOLIZE
    int ERROR_DVR_JOINMULTICASTFAILED -> ERROR_DVR_JOINMULTICASTFAILED
    int ERROR_DVR_CREATEDIR_ERROR -> ERROR_DVR_CREATEDIR_ERROR
    int ERROR_DVR_BINDSOCKET_ERROR -> ERROR_DVR_BINDSOCKET_ERROR
    int ERROR_DVR_SOCKETCLOSE_ERROR -> ERROR_DVR_SOCKETCLOSE_ERROR
    int ERROR_DVR_USERID_ISUSING -> ERROR_DVR_USERID_ISUSING
    int ERROR_DVR_SOCKETLISTEN_ERROR -> ERROR_DVR_SOCKETLISTEN_ERROR
    int ERROR_DVR_PROGRAM_EXCEPTION -> ERROR_DVR_PROGRAM_EXCEPTION
    int ERROR_DVR_WRITEFILE_FAILED -> ERROR_DVR_WRITEFILE_FAILED
    int ERROR_DVR_FORMAT_READONLY -> ERROR_DVR_FORMAT_READONLY
    int ERROR_DVR_WITHSAMEUSERNAME -> ERROR_DVR_WITHSAMEUSERNAME
    int ERROR_DVR_DEVICETYPE_ERROR -> ERROR_DVR_DEVICETYPE_ERROR
    int ERROR_DVR_LANGUAGE_ERROR -> ERROR_DVR_LANGUAGE_ERROR
    int ERROR_DVR_PARAVERSION_ERROR -> ERROR_DVR_PARAVERSION_ERROR
    int ERROR_DVR_IPCHAN_NOTALIVE -> ERROR_DVR_IPCHAN_NOTALIVE
    int ERROR_DVR_RTSP_SDK_ERROR -> ERROR_DVR_RTSP_SDK_ERROR
    int ERROR_DVR_CONVERT_SDK_ERROR -> ERROR_DVR_CONVERT_SDK_ERROR
    int ERROR_DVR_IPC_COUNT_OVERFLOW -> ERROR_DVR_IPC_COUNT_OVERFLOW
    int ERROR_DVR_MAX_ADD_NUM -> ERROR_DVR_MAX_ADD_NUM
    int ERROR_DVR_PARAMMODE_ERROR -> ERROR_DVR_PARAMMODE_ERROR
    int ERROR_DVR_CODESPITTER_OFFLINE -> ERROR_DVR_CODESPITTER_OFFLINE
    int ERROR_DVR_BACKUP_COPYING -> ERROR_DVR_BACKUP_COPYING
    int ERROR_DVR_CHAN_NOTSUPPORT -> ERROR_DVR_CHAN_NOTSUPPORT
    int ERROR_DVR_CALLINEINVALID -> ERROR_DVR_CALLINEINVALID
    int ERROR_DVR_CALCANCELCONFLICT -> ERROR_DVR_CALCANCELCONFLICT
    int ERROR_DVR_CALPOINTOUTRANGE -> ERROR_DVR_CALPOINTOUTRANGE
    int ERROR_DVR_FILTERRECTINVALID -> ERROR_DVR_FILTERRECTINVALID
    int ERROR_DVR_DDNS_DEVOFFLINE -> ERROR_DVR_DDNS_DEVOFFLINE
    int ERROR_DVR_DDNS_INTER_ERROR -> ERROR_DVR_DDNS_INTER_ERROR
    int ERROR_DVR_FUNCTION_NOT_SUPPORT_OS -> ERROR_DVR_FUNCTION_NOT_SUPPORT_OS
    int ERROR_DVR_DEC_CHAN_REBIND -> ERROR_DVR_DEC_CHAN_REBIND
    int ERROR_DVR_ALIAS_DUPLICATE -> ERROR_DVR_ALIAS_DUPLICATE
    int ERROR_DVR_SEND_ERROR -> ERROR_DVR_SEND_ERROR
    int ERROR_DVR_RTSP_ERROR_NOENOUGHPRI -> ERROR_DVR_RTSP_ERROR_NOENOUGHPRI
    int ERROR_DVR_RTSP_ERROR_ALLOC_RESOURCE -> ERROR_DVR_RTSP_ERROR_ALLOC_RESOURCE
    int ERROR_DVR_RTSP_ERROR_PARAMETER -> ERROR_DVR_RTSP_ERROR_PARAMETER
    int ERROR_DVR_RTSP_ERROR_NO_URL -> ERROR_DVR_RTSP_ERROR_NO_URL
    int ERROR_DVR_RTSP_ERROR_FORCE_STOP -> ERROR_DVR_RTSP_ERROR_FORCE_STOP
    int ERROR_DVR_RTSP_GETPORTFAILED -> ERROR_DVR_RTSP_GETPORTFAILED
    int ERROR_DVR_RTSP_PRIVACY_STATUS -> ERROR_DVR_RTSP_PRIVACY_STATUS
    int ERROR_DVR_RTSP_DESCRIBERROR -> ERROR_DVR_RTSP_DESCRIBERROR
    int ERROR_DVR_RTSP_DESCRIBESENDTIMEOUT -> ERROR_DVR_RTSP_DESCRIBESENDTIMEOUT
    int ERROR_DVR_RTSP_DESCRIBESENDERROR -> ERROR_DVR_RTSP_DESCRIBESENDERROR
    int ERROR_DVR_RTSP_DESCRIBERECVTIMEOUT -> ERROR_DVR_RTSP_DESCRIBERECVTIMEOUT
    int ERROR_DVR_RTSP_DESCRIBERECVDATALOST -> ERROR_DVR_RTSP_DESCRIBERECVDATALOST
    int ERROR_DVR_RTSP_DESCRIBERECVERROR -> ERROR_DVR_RTSP_DESCRIBERECVERROR
    int ERROR_DVR_RTSP_DESCRIBESERVERERR -> ERROR_DVR_RTSP_DESCRIBESERVERERR
    int ERROR_DVR_RTSP_SETUPERROR -> ERROR_DVR_RTSP_SETUPERROR
    int ERROR_DVR_RTSP_SETUPSENDTIMEOUT -> ERROR_DVR_RTSP_SETUPSENDTIMEOUT
    int ERROR_DVR_RTSP_SETUPSENDERROR -> ERROR_DVR_RTSP_SETUPSENDERROR
    int ERROR_DVR_RTSP_SETUPRECVTIMEOUT -> ERROR_DVR_RTSP_SETUPRECVTIMEOUT
    int ERROR_DVR_RTSP_SETUPRECVDATALOST -> ERROR_DVR_RTSP_SETUPRECVDATALOST
    int ERROR_DVR_RTSP_SETUPRECVERROR -> ERROR_DVR_RTSP_SETUPRECVERROR
    int ERROR_DVR_RTSP_OVER_MAX_CHAN -> ERROR_DVR_RTSP_OVER_MAX_CHAN
    int ERROR_DVR_RTSP_PLAYERROR -> ERROR_DVR_RTSP_PLAYERROR
    int ERROR_DVR_RTSP_PLAYSENDTIMEOUT -> ERROR_DVR_RTSP_PLAYSENDTIMEOUT
    int ERROR_DVR_RTSP_PLAYSENDERROR -> ERROR_DVR_RTSP_PLAYSENDERROR
    int ERROR_DVR_RTSP_PLAYRECVTIMEOUT -> ERROR_DVR_RTSP_PLAYRECVTIMEOUT
    int ERROR_DVR_RTSP_PLAYRECVDATALOST -> ERROR_DVR_RTSP_PLAYRECVDATALOST
    int ERROR_DVR_RTSP_PLAYRECVERROR -> ERROR_DVR_RTSP_PLAYRECVERROR
    int ERROR_DVR_RTSP_PLAYSERVERERR -> ERROR_DVR_RTSP_PLAYSERVERERR
    int ERROR_DVR_RTSP_TEARDOWNERROR -> ERROR_DVR_RTSP_TEARDOWNERROR
    int ERROR_DVR_RTSP_TEARDOWNSENDTIMEOUT -> ERROR_DVR_RTSP_TEARDOWNSENDTIMEOUT
    int ERROR_DVR_RTSP_TEARDOWNSENDERROR -> ERROR_DVR_RTSP_TEARDOWNSENDERROR
    int ERROR_DVR_RTSP_TEARDOWNRECVTIMEOUT -> ERROR_DVR_RTSP_TEARDOWNRECVTIMEOUT
    int ERROR_DVR_RTSP_TEARDOWNRECVDATALOST -> ERROR_DVR_RTSP_TEARDOWNRECVDATALOST
    int ERROR_DVR_RTSP_TEARDOWNRECVERROR -> ERROR_DVR_RTSP_TEARDOWNRECVERROR
    int ERROR_DVR_RTSP_TEARDOWNSERVERERR -> ERROR_DVR_RTSP_TEARDOWNSERVERERR
    int ERROR_DVR_PLAYM4_NOERROR -> ERROR_DVR_PLAYM4_NOERROR
    int ERROR_DVR_PLAYM4_PARA_OVER -> ERROR_DVR_PLAYM4_PARA_OVER
    int ERROR_DVR_PLAYM4_ORDER_ERROR -> ERROR_DVR_PLAYM4_ORDER_ERROR
    int ERROR_DVR_PLAYM4_TIMER_ERROR -> ERROR_DVR_PLAYM4_TIMER_ERROR
    int ERROR_DVR_PLAYM4_DEC_VIDEO_ERROR -> ERROR_DVR_PLAYM4_DEC_VIDEO_ERROR
    int ERROR_DVR_PLAYM4_DEC_AUDIO_ERROR -> ERROR_DVR_PLAYM4_DEC_AUDIO_ERROR
    int ERROR_DVR_PLAYM4_ALLOC_MEMORY_ERROR -> ERROR_DVR_PLAYM4_ALLOC_MEMORY_ERROR
    int ERROR_DVR_PLAYM4_OPEN_FILE_ERROR -> ERROR_DVR_PLAYM4_OPEN_FILE_ERROR
    int ERROR_DVR_PLAYM4_CREATE_OBJ_ERROR -> ERROR_DVR_PLAYM4_CREATE_OBJ_ERROR
    int ERROR_DVR_PLAYM4_CREATE_DDRAW_ERROR -> ERROR_DVR_PLAYM4_CREATE_DDRAW_ERROR
    int ERROR_DVR_PLAYM4_CREATE_OFFSCREEN_ERROR -> ERROR_DVR_PLAYM4_CREATE_OFFSCREEN_ERROR
    int ERROR_DVR_PLAYM4_BUF_OVER -> ERROR_DVR_PLAYM4_BUF_OVER
    int ERROR_DVR_PLAYM4_CREATE_SOUND_ERROR -> ERROR_DVR_PLAYM4_CREATE_SOUND_ERROR
    int ERROR_DVR_PLAYM4_SET_VOLUME_ERROR -> ERROR_DVR_PLAYM4_SET_VOLUME_ERROR
    int ERROR_DVR_PLAYM4_SUPPORT_FILE_ONLY -> ERROR_DVR_PLAYM4_SUPPORT_FILE_ONLY
    int ERROR_DVR_PLAYM4_SUPPORT_STREAM_ONLY -> ERROR_DVR_PLAYM4_SUPPORT_STREAM_ONLY
    int ERROR_DVR_PLAYM4_SYS_NOT_SUPPORT -> ERROR_DVR_PLAYM4_SYS_NOT_SUPPORT
    int ERROR_DVR_PLAYM4_FILEHEADER_UNKNOWN -> ERROR_DVR_PLAYM4_FILEHEADER_UNKNOWN
    int ERROR_DVR_PLAYM4_VERSION_INCORRECT -> ERROR_DVR_PLAYM4_VERSION_INCORRECT
    int ERROR_DVR_PLAYM4_INIT_DECODER_ERROR -> ERROR_DVR_PLAYM4_INIT_DECODER_ERROR
    int ERROR_DVR_PLAYM4_CHECK_FILE_ERROR -> ERROR_DVR_PLAYM4_CHECK_FILE_ERROR
    int ERROR_DVR_PLAYM4_INIT_TIMER_ERROR -> ERROR_DVR_PLAYM4_INIT_TIMER_ERROR
    int ERROR_DVR_PLAYM4_BLT_ERROR -> ERROR_DVR_PLAYM4_BLT_ERROR
    int ERROR_DVR_PLAYM4_UPDATE_ERROR -> ERROR_DVR_PLAYM4_UPDATE_ERROR
    int ERROR_DVR_PLAYM4_OPEN_FILE_ERROR_MULTI -> ERROR_DVR_PLAYM4_OPEN_FILE_ERROR_MULTI
    int ERROR_DVR_PLAYM4_OPEN_FILE_ERROR_VIDEO -> ERROR_DVR_PLAYM4_OPEN_FILE_ERROR_VIDEO
    int ERROR_DVR_PLAYM4_JPEG_COMPRESS_ERROR -> ERROR_DVR_PLAYM4_JPEG_COMPRESS_ERROR
    int ERROR_DVR_PLAYM4_EXTRACT_NOT_SUPPORT -> ERROR_DVR_PLAYM4_EXTRACT_NOT_SUPPORT
    int ERROR_DVR_PLAYM4_EXTRACT_DATA_ERROR -> ERROR_DVR_PLAYM4_EXTRACT_DATA_ERROR
    int ERROR_DVR_INPUTPARAM_ERROR -> ERROR_DVR_INPUTPARAM_ERROR
    int ERROR_NET_SDK_CONNECT_STATUS_NO_ERROR -> ERROR_NET_SDK_CONNECT_STATUS_NO_ERROR
    int ERROR_NET_SDK_CONNECT_STATUS_USER_OR_PASSWORD_ERROR -> ERROR_NET_SDK_CONNECT_STATUS_USER_OR_PASSWORD_ERROR
    int ERROR_NET_SDK_CONNECT_STATUS_NO_ROUTER -> ERROR_NET_SDK_CONNECT_STATUS_NO_ROUTER
    int ERROR_NET_SDK_CONNECT_STATUS_UNKNOW_ERROR -> ERROR_NET_SDK_CONNECT_STATUS_UNKNOW_ERROR
    int ERROR_NET_SDK_CONNECT_STATUS_TIME_OUT -> ERROR_NET_SDK_CONNECT_STATUS_TIME_OUT
    int ERROR_RTSP_NO_ERROR -> ERROR_RTSP_NO_ERROR
    int ERROR_RTSP_HPRINIT_FAIL -> ERROR_RTSP_HPRINIT_FAIL
    int ERROR_RTSP_NOINIT -> ERROR_RTSP_NOINIT
    int ERROR_RTSP_MALLOC_FAIL -> ERROR_RTSP_MALLOC_FAIL
    int ERROR_RTSP_OBJECTINVLID_ERROR -> ERROR_RTSP_OBJECTINVLID_ERROR
    int ERROR_RTSP_OVER_MAXLINK -> ERROR_RTSP_OVER_MAXLINK
    int ERROR_RTSP_PARAMETER_ERROR -> ERROR_RTSP_PARAMETER_ERROR
    int ERROR_RTSP_PROTOCOL_NOTSUPPORT -> ERROR_RTSP_PROTOCOL_NOTSUPPORT
    int ERROR_RTSP_ENGINEER_NOINIT -> ERROR_RTSP_ENGINEER_NOINIT
    int ERROR_RTSP_ENGINEER_NOPLAYING -> ERROR_RTSP_ENGINEER_NOPLAYING
    int ERROR_RTSP_RTSPURL_ERROR -> ERROR_RTSP_RTSPURL_ERROR
    int ERROR_RTSP_PARSEURL_FAIL -> ERROR_RTSP_PARSEURL_FAIL
    int ERROR_RTSP_CONNECTSERV_FAIL -> ERROR_RTSP_CONNECTSERV_FAIL
    int ERROR_RTSP_DESCRIBE_FAIL -> ERROR_RTSP_DESCRIBE_FAIL
    int ERROR_RTSP_SETUP_FAIL -> ERROR_RTSP_SETUP_FAIL
    int ERROR_RTSP_PLAY_FAIL -> ERROR_RTSP_PLAY_FAIL
    int ERROR_RTSP_SET_PLAYPARAM_FAIL -> ERROR_RTSP_SET_PLAYPARAM_FAIL
    int ERROR_RTSP_SET_SETUPPARAM_FAIL -> ERROR_RTSP_SET_SETUPPARAM_FAIL
    int ERROR_RTSP_SET_DESCRIBEPARAM_FAIL -> ERROR_RTSP_SET_DESCRIBEPARAM_FAIL
    int ERROR_RTSP_SET_PLAYBACKPARAM_FAIL -> ERROR_RTSP_SET_PLAYBACKPARAM_FAIL
    int ERROR_RTSP_PLAYBACK_FAIL -> ERROR_RTSP_PLAYBACK_FAIL
    int ERROR_RTSP_PLAYING_ERROR -> ERROR_RTSP_PLAYING_ERROR
    int ERROR_RTSP_CALLBACK_PARAM_ERROR -> ERROR_RTSP_CALLBACK_PARAM_ERROR
    int ERROR_RTSP_PARSERTSPURL_ERROR -> ERROR_RTSP_PARSERTSPURL_ERROR
    int ERROR_RTSP_REDIRECT_FAIL -> ERROR_RTSP_REDIRECT_FAIL
    int ERROR_RTSP_STARRTRTPDATATRANS_FAIL -> ERROR_RTSP_STARRTRTPDATATRANS_FAIL
    int ERROR_RTSP_CHANAGERATE_FAIL -> ERROR_RTSP_CHANAGERATE_FAIL
    int ERROR_RTSP_CONNECTION_EXCEPTION -> ERROR_RTSP_CONNECTION_EXCEPTION
    int ERROR_RTSP_SERVER_EXCEPTION -> ERROR_RTSP_SERVER_EXCEPTION
    int ERROR_RTSP_NO_RECORD -> ERROR_RTSP_NO_RECORD
    int ERROR_RTSP_CODE -> ERROR_RTSP_CODE
    int ERROR_RTSP_NOT_FOUND -> ERROR_RTSP_NOT_FOUND
    int ERROR_RTSP_METHOD_NOT_ALLOWED -> ERROR_RTSP_METHOD_NOT_ALLOWED
    int ERROR_RTSP_TOKEN_INVALIDATION -> ERROR_RTSP_TOKEN_INVALIDATION
    int ERROR_RTSP_PROXY_AUTHENTICATION_REQUIRED -> ERROR_RTSP_PROXY_AUTHENTICATION_REQUIRED
    int ERROR_RTSP_REQUEST_TIMEOUT -> ERROR_RTSP_REQUEST_TIMEOUT
    int ERROR_RTSP_PRIVACY_STATUS -> ERROR_RTSP_PRIVACY_STATUS
    int ERROR_RTSP_DEVICE_CONNECTION_LIMIT -> ERROR_RTSP_DEVICE_CONNECTION_LIMIT
    int ERROR_RTSP_TOKEN_NO_PERMISSION -> ERROR_RTSP_TOKEN_NO_PERMISSION
    int ERROR_RTSP_SESSION_NOT_EXIST -> ERROR_RTSP_SESSION_NOT_EXIST
    int ERROR_RTSP_TOKEN_VERIFY_ERROR -> ERROR_RTSP_TOKEN_VERIFY_ERROR
    int ERROR_RTSP_REQUEST_URI_TOO_LARGE -> ERROR_RTSP_REQUEST_URI_TOO_LARGE
    int ERROR_RTSP_DEVICE_CHANNAL_ERROR -> ERROR_RTSP_DEVICE_CHANNAL_ERROR
    int ERROR_RTSP_BIT_STREAM_NOT_SUPPORT -> ERROR_RTSP_BIT_STREAM_NOT_SUPPORT
    int ERROR_RTSP_SERVER_CONNECTION_LIMIT -> ERROR_RTSP_SERVER_CONNECTION_LIMIT
    int ERROR_RTSP_DEVICE_CAS_ADDR_ERROR -> ERROR_RTSP_DEVICE_CAS_ADDR_ERROR
    int ERROR_RTSP_SHARE_TIME_OVER -> ERROR_RTSP_SHARE_TIME_OVER
    int ERROR_RTSP_RECEIVE_HEADER_TIME_OVER -> ERROR_RTSP_RECEIVE_HEADER_TIME_OVER
    int ERROR_RTSP_HEADER_FIELD_NOT_VALID_FOR_RESOURCE -> ERROR_RTSP_HEADER_FIELD_NOT_VALID_FOR_RESOURCE
    int ERROR_RTSP_INVALID_RANGE -> ERROR_RTSP_INVALID_RANGE
    int ERROR_RTSP_PARAMETER_IS_READ_ONLY -> ERROR_RTSP_PARAMETER_IS_READ_ONLY
    int ERROR_RTSP_AGGREGATE_OPERATION_NOT_ALLOWED -> ERROR_RTSP_AGGREGATE_OPERATION_NOT_ALLOWED
    int ERROR_RTSP_ONLY_AGGREGATE_OPERATION_ALLOWED -> ERROR_RTSP_ONLY_AGGREGATE_OPERATION_ALLOWED
    int ERROR_RTSP_UNSUPPORTED_TRANSPORT -> ERROR_RTSP_UNSUPPORTED_TRANSPORT
    int ERROR_RTSP_DESTINATION_UNREACHABLE -> ERROR_RTSP_DESTINATION_UNREACHABLE
    int ERROR_RTSP_INTERNAL_SERVER_ERROR -> ERROR_RTSP_INTERNAL_SERVER_ERROR
    int ERROR_RTSP_NOT_IMPLEMENTED -> ERROR_RTSP_NOT_IMPLEMENTED
    int ERROR_RTSP_BAD_GATEWAY -> ERROR_RTSP_BAD_GATEWAY
    int ERROR_RTSP_SERVICE_UNAVAILABLE -> ERROR_RTSP_SERVICE_UNAVAILABLE
    int ERROR_RTSP_GATEWAY_TIMEOUT -> ERROR_RTSP_GATEWAY_TIMEOUT
    int ERROR_RTSP_RTSP_VERSION_NOT_SUPPORTED -> ERROR_RTSP_RTSP_VERSION_NOT_SUPPORTED
    int ERROR_RTSP_OPTION_NOT_SUPPORTED -> ERROR_RTSP_OPTION_NOT_SUPPORTED
    int ERROR_PPV_NO_ERROR -> ERROR_PPV_NO_ERROR
    int ERROR_PPV_INIT_FAIL -> ERROR_PPV_INIT_FAIL
    int ERROR_PPV_NOINIT -> ERROR_PPV_NOINIT
    int ERROR_PPV_CONNECT_DEVICE_BYACS_FAIL -> ERROR_PPV_CONNECT_DEVICE_BYACS_FAIL
    int ERROR_PPV_NO_FILE_ERROR -> ERROR_PPV_NO_FILE_ERROR
    int ERROR_PPV_SEARCH_FILE_FAIL -> ERROR_PPV_SEARCH_FILE_FAIL
    int ERROR_PPV_REALPLAY_START_FAIL -> ERROR_PPV_REALPLAY_START_FAIL
    int ERROR_PPV_GET_DISK_STATUS_FAIL -> ERROR_PPV_GET_DISK_STATUS_FAIL
    int ERROR_PPV_VALIDATE_PWD -> ERROR_PPV_VALIDATE_PWD
    int ERROR_TTS_MSG_NO_ERROR -> ERROR_TTS_MSG_NO_ERROR
    int ERROR_TTS_MSG_REQ_TIMEOUT -> ERROR_TTS_MSG_REQ_TIMEOUT
    int ERROR_TTS_MSG_SVR_HANDLE_TIMEOUT -> ERROR_TTS_MSG_SVR_HANDLE_TIMEOUT
    int ERROR_TTS_MSG_DEV_CONN_ERROR -> ERROR_TTS_MSG_DEV_CONN_ERROR
    int ERROR_TTS_MSG_SVR_INTER_ERROR -> ERROR_TTS_MSG_SVR_INTER_ERROR
    int ERROR_TTS_MSG_CLN_MSG_ERROR -> ERROR_TTS_MSG_CLN_MSG_ERROR
    int ERROR_TTS_MSG_CLN_RECV_ERROR -> ERROR_TTS_MSG_CLN_RECV_ERROR
    int ERROR_TTS_MSG_SVR_CLOSE_CONN -> ERROR_TTS_MSG_SVR_CLOSE_CONN
    int ERROR_TTS_MSG_DEV_PRIVACY_ON -> ERROR_TTS_MSG_DEV_PRIVACY_ON
    int ERROR_TTS_CREATE_ERROR -> ERROR_TTS_CREATE_ERROR
    int ERROR_TTS_WAIT_TIMEOUT -> ERROR_TTS_WAIT_TIMEOUT
    int ERROR_TTS_HNADLE_TIMEOUT -> ERROR_TTS_HNADLE_TIMEOUT
    int ERROR_TTS_DEV_CONN_ERR -> ERROR_TTS_DEV_CONN_ERR
    int ERROR_TTS_TTS_INTERNAL_ERR -> ERROR_TTS_TTS_INTERNAL_ERR
    int ERROR_TTS_MSG_TYPE_ERR -> ERROR_TTS_MSG_TYPE_ERR
    int ERROR_TTS_NEED_REDIRECT -> ERROR_TTS_NEED_REDIRECT
    int ERROR_TTS_REQ_URL_WRONG -> ERROR_TTS_REQ_URL_WRONG
    int ERROR_TTS_CHAECK_TOKEN_FAIL -> ERROR_TTS_CHAECK_TOKEN_FAIL
    int ERROR_TTS_OPR_OR_CRT_NO_MATCH -> ERROR_TTS_OPR_OR_CRT_NO_MATCH
    int ERROR_TTS_DEVICE_TAKLING_NOW -> ERROR_TTS_DEVICE_TAKLING_NOW
    int ERROR_TTS_DEV_MSG_TIMEOUT -> ERROR_TTS_DEV_MSG_TIMEOUT
    int ERROR_TTS_DEV_NO_ONLINE -> ERROR_TTS_DEV_NO_ONLINE
    int ERROR_TTS_DEV_PRIVACY_ON -> ERROR_TTS_DEV_PRIVACY_ON
    int ERROR_TTS_CLN_CREATE_THD_FAIL -> ERROR_TTS_CLN_CREATE_THD_FAIL
    int ERROR_TTS_CLN_URL_WRONG -> ERROR_TTS_CLN_URL_WRONG
    int ERROR_TTS_REDIRECT_URL_WRONG -> ERROR_TTS_REDIRECT_URL_WRONG
    int ERROR_ANALYZE_DATA_NO_ERROR -> ERROR_ANALYZE_DATA_NO_ERROR
    int ERROR_ANALYZE_DATA_NOOBJECT -> ERROR_ANALYZE_DATA_NOOBJECT
    int ERROR_ANALYZE_DATA_OVERBUF -> ERROR_ANALYZE_DATA_OVERBUF
    int ERROR_ANALYZE_DATA_PARAMETER -> ERROR_ANALYZE_DATA_PARAMETER
    int ERROR_ANALYZE_DATA_CALL_ORDER -> ERROR_ANALYZE_DATA_CALL_ORDER
    int ERROR_ANALYZE_DATA_ALLOC_MEMORY -> ERROR_ANALYZE_DATA_ALLOC_MEMORY
    int ERROR_ANALYZE_DATA_OPEN_FILE -> ERROR_ANALYZE_DATA_OPEN_FILE
    int ERROR_ANALYZE_DATA_MEMORY -> ERROR_ANALYZE_DATA_MEMORY
    int ERROR_ANALYZE_DATA_SUPPORT -> ERROR_ANALYZE_DATA_SUPPORT
    int ERROR_ANALYZE_DATA_UNKNOWN -> ERROR_ANALYZE_DATA_UNKNOWN
    int ERROR_CAS_MSG_NO_ERROR -> ERROR_CAS_MSG_NO_ERROR
    int ERROR_CAS_MSG_UNKNOW_ERROR -> ERROR_CAS_MSG_UNKNOW_ERROR
    int ERROR_CAS_MSG_PARAMS_ERROR -> ERROR_CAS_MSG_PARAMS_ERROR
    int ERROR_CAS_MSG_PARSE_FAILED -> ERROR_CAS_MSG_PARSE_FAILED
    int ERROR_CAS_MSG_COMMAND_UNKNOW -> ERROR_CAS_MSG_COMMAND_UNKNOW
    int ERROR_CAS_MSG_COMMAND_NO_LONGER_SUPPORTED -> ERROR_CAS_MSG_COMMAND_NO_LONGER_SUPPORTED
    int ERROR_CAS_MSG_COMMAND_NOT_SUITABLE -> ERROR_CAS_MSG_COMMAND_NOT_SUITABLE
    int ERROR_CAS_MSG_CHECKSUM_ERROR -> ERROR_CAS_MSG_CHECKSUM_ERROR
    int ERROR_CAS_MSG_VERSION_UNKNOW -> ERROR_CAS_MSG_VERSION_UNKNOW
    int ERROR_CAS_MSG_VERSION_NO_LONGER_SUPPORTED -> ERROR_CAS_MSG_VERSION_NO_LONGER_SUPPORTED
    int ERROR_CAS_MSG_VERSION_FORBIDDEN -> ERROR_CAS_MSG_VERSION_FORBIDDEN
    int ERROR_CAS_MSG_SERIAL_NOT_FOR_CIVIL -> ERROR_CAS_MSG_SERIAL_NOT_FOR_CIVIL
    int ERROR_CAS_MSG_SERIAL_FORBIDDEN -> ERROR_CAS_MSG_SERIAL_FORBIDDEN
    int ERROR_CAS_MSG_SERIAL_DUPLICATE -> ERROR_CAS_MSG_SERIAL_DUPLICATE
    int ERROR_CAS_MSG_SERIAL_FLUSHED_IN_A_SECOND -> ERROR_CAS_MSG_SERIAL_FLUSHED_IN_A_SECOND
    int ERROR_CAS_MSG_SERIAL_NO_LONGER_SUPPORTED -> ERROR_CAS_MSG_SERIAL_NO_LONGER_SUPPORTED
    int ERROR_CAS_MSG_LOCAL_SERVER_BUSY -> ERROR_CAS_MSG_LOCAL_SERVER_BUSY
    int ERROR_CAS_MSG_LOCAL_SERVER_REFUSED -> ERROR_CAS_MSG_LOCAL_SERVER_REFUSED
    int ERROR_CAS_REG_CANNOT_AFFORD_PU -> ERROR_CAS_REG_CANNOT_AFFORD_PU
    int ERROR_CAS_REG_CRYPTO_UNMATCHED -> ERROR_CAS_REG_CRYPTO_UNMATCHED
    int ERROR_CAS_MSG_DEV_TYPE_INVAILED -> ERROR_CAS_MSG_DEV_TYPE_INVAILED
    int ERROR_CAS_MSG_DEV_TYPE_NO_LONGGER_SUPPORTED -> ERROR_CAS_MSG_DEV_TYPE_NO_LONGGER_SUPPORTED
    int ERROR_CAS_MSG_PU_BUSY -> ERROR_CAS_MSG_PU_BUSY
    int ERROR_CAS_MSG_OPERATION_FAILED -> ERROR_CAS_MSG_OPERATION_FAILED
    int ERROR_CAS_PU_NO_CRYPTO_FOUND -> ERROR_CAS_PU_NO_CRYPTO_FOUND
    int ERROR_CAS_MSG_PU_REFUSED -> ERROR_CAS_MSG_PU_REFUSED
    int ERROR_CAS_MSG_PU_NO_RESOURCE -> ERROR_CAS_MSG_PU_NO_RESOURCE
    int ERROR_CAS_MSG_PU_CHANNEL_ERROR -> ERROR_CAS_MSG_PU_CHANNEL_ERROR
    int ERROR_CAS_SYSTEM_COMMAND_PU_COMMAND_UNSUPPORTED -> ERROR_CAS_SYSTEM_COMMAND_PU_COMMAND_UNSUPPORTED
    int ERROR_CAS_SYSTEM_COMMAND_PU_NO_RIGHTS_TO_DO_COMMAND -> ERROR_CAS_SYSTEM_COMMAND_PU_NO_RIGHTS_TO_DO_COMMAND
    int ERROR_CAS_MSG_NO_SESSION_FOUND -> ERROR_CAS_MSG_NO_SESSION_FOUND
    int ERROR_CAS_PREVIEW_CHANNEL_BUSY -> ERROR_CAS_PREVIEW_CHANNEL_BUSY
    int ERROR_CAS_PREVIEW_CLIENT_BUSY -> ERROR_CAS_PREVIEW_CLIENT_BUSY
    int ERROR_CAS_PREVIEW_STREAM_UNSUPPORTED -> ERROR_CAS_PREVIEW_STREAM_UNSUPPORTED
    int ERROR_CAS_PREVIEW_TRANSPORT_UNSUPPORTED -> ERROR_CAS_PREVIEW_TRANSPORT_UNSUPPORTED
    int ERROR_CAS_PREVIEW_CONNECT_SERVER_FAIL -> ERROR_CAS_PREVIEW_CONNECT_SERVER_FAIL
    int ERROR_CAS_PREVIEW_QUERY_WLAN_INFO_FAIL -> ERROR_CAS_PREVIEW_QUERY_WLAN_INFO_FAIL
    int ERROR_CAS_RECORD_SEARCH_START_TIME_ERROR -> ERROR_CAS_RECORD_SEARCH_START_TIME_ERROR
    int ERROR_CAS_RECORD_SEARCH_STOP_TIME_ERROR -> ERROR_CAS_RECORD_SEARCH_STOP_TIME_ERROR
    int ERROR_CAS_RECORD_SEARCH_FAIL -> ERROR_CAS_RECORD_SEARCH_FAIL
    int ERROR_CAS_PLAYBACK_TYPE_UNSUPPORTED -> ERROR_CAS_PLAYBACK_TYPE_UNSUPPORTED
    int ERROR_CAS_PLAYBACK_NO_FILE_MATCHED -> ERROR_CAS_PLAYBACK_NO_FILE_MATCHED
    int ERROR_CAS_PLAYBACK_START_TIME_ERROR -> ERROR_CAS_PLAYBACK_START_TIME_ERROR
    int ERROR_CAS_PLAYBACK_STOP_TIME_ERROR -> ERROR_CAS_PLAYBACK_STOP_TIME_ERROR
    int ERROR_CAS_PLAYBACK_NO_FILE_FOUND -> ERROR_CAS_PLAYBACK_NO_FILE_FOUND
    int ERROR_CAS_PLAYBACK_CONNECT_SERVER_FAIL -> ERROR_CAS_PLAYBACK_CONNECT_SERVER_FAIL
    int ERROR_CAS_TALK_ENCODE_TYPE_UNSUPPORTED -> ERROR_CAS_TALK_ENCODE_TYPE_UNSUPPORTED
    int ERROR_CAS_TALK_CHANNEL_BUSY -> ERROR_CAS_TALK_CHANNEL_BUSY
    int ERROR_CAS_TALK_CLIENT_BUSY -> ERROR_CAS_TALK_CLIENT_BUSY
    int ERROR_CAS_TALK_UNSUPPORTED -> ERROR_CAS_TALK_UNSUPPORTED
    int ERROR_CAS_TALK_CHANNO_ERROR -> ERROR_CAS_TALK_CHANNO_ERROR
    int ERROR_CAS_TALK_CONNECT_SERVER_FAILED -> ERROR_CAS_TALK_CONNECT_SERVER_FAILED
    int ERROR_CAS_TALK_CONNECT_REFUSED -> ERROR_CAS_TALK_CONNECT_REFUSED
    int ERROR_CAS_TALK_CONNECT_CAPACITY_LIMITED -> ERROR_CAS_TALK_CONNECT_CAPACITY_LIMITED
    int ERROR_CAS_FORMAT_NO_LOCAL_STORAGE -> ERROR_CAS_FORMAT_NO_LOCAL_STORAGE
    int ERROR_CAS_FORMAT_FORMATING -> ERROR_CAS_FORMAT_FORMATING
    int ERROR_CAS_FORMAT_FAILED -> ERROR_CAS_FORMAT_FAILED
    int ERROR_CAS_UPGRADE_PU_REQUEST_REFUSED -> ERROR_CAS_UPGRADE_PU_REQUEST_REFUSED
    int ERROR_CAS_UPGRADE_PU_REQUEST_VERSION_NOT_FOUND -> ERROR_CAS_UPGRADE_PU_REQUEST_VERSION_NOT_FOUND
    int ERROR_CAS_UPGRADE_PU_REQUEST_UNNEEDED -> ERROR_CAS_UPGRADE_PU_REQUEST_UNNEEDED
    int ERROR_CAS_UPGRADE_PU_REQUEST_NO_SERVER_ONLINE -> ERROR_CAS_UPGRADE_PU_REQUEST_NO_SERVER_ONLINE
    int ERROR_CAS_UPGRADE_PU_REQUEST_ALL_SERVER_BUSY -> ERROR_CAS_UPGRADE_PU_REQUEST_ALL_SERVER_BUSY
    int ERROR_CAS_UPGRADE_PU_UPGRADING -> ERROR_CAS_UPGRADE_PU_UPGRADING
    int ERROR_CAS_UPGRADE_PU_UPGRAD_FAILED -> ERROR_CAS_UPGRADE_PU_UPGRAD_FAILED
    int ERROR_CAS_UPGRADE_PU_UPGRAD_WRITE_FLASH_FAILED -> ERROR_CAS_UPGRADE_PU_UPGRAD_WRITE_FLASH_FAILED
    int ERROR_CAS_UPGRADE_PU_UPGRAD_LANGUAGE_DISMATCH -> ERROR_CAS_UPGRADE_PU_UPGRAD_LANGUAGE_DISMATCH
    int ERROR_CAS_PU_PASSWORD_UPDATE_NO_USER_MATHCED -> ERROR_CAS_PU_PASSWORD_UPDATE_NO_USER_MATHCED
    int ERROR_CAS_PU_PASSWORD_UPDATE_ORIGINAL_PASSWORD_ERROR -> ERROR_CAS_PU_PASSWORD_UPDATE_ORIGINAL_PASSWORD_ERROR
    int ERROR_CAS_PU_PASSWORD_UPDATE_NEW_PASSWORD_DECRYPTE_FAILED -> ERROR_CAS_PU_PASSWORD_UPDATE_NEW_PASSWORD_DECRYPTE_FAILED
    int ERROR_CAS_PU_PASSWORD_UPDATE_NEW_PASSWORD_CHECK_FAILED -> ERROR_CAS_PU_PASSWORD_UPDATE_NEW_PASSWORD_CHECK_FAILED
    int ERROR_CAS_PU_PASSWORD_UPDATE_WRITE_FLASH_FAILED -> ERROR_CAS_PU_PASSWORD_UPDATE_WRITE_FLASH_FAILED
    int ERROR_CAS_PU_PASSWORD_UPDATE_OTHER_FALIURE -> ERROR_CAS_PU_PASSWORD_UPDATE_OTHER_FALIURE
    int ERROR_CAS_PU_PASSWORD_VERIFY_PASSWORD_FAILED -> ERROR_CAS_PU_PASSWORD_VERIFY_PASSWORD_FAILED
    int ERROR_CAS_PLATFORM_CLIENT_REQUEST_NO_PU_FOUNDED -> ERROR_CAS_PLATFORM_CLIENT_REQUEST_NO_PU_FOUNDED
    int ERROR_CAS_PLATFORM_CLIENT_REQUEST_REFUSED_TO_PROTECT_PU -> ERROR_CAS_PLATFORM_CLIENT_REQUEST_REFUSED_TO_PROTECT_PU
    int ERROR_CAS_PLATFORM_CLIENT_REQUEST_PU_LIMIT_REACHED -> ERROR_CAS_PLATFORM_CLIENT_REQUEST_PU_LIMIT_REACHED
    int ERROR_CAS_PLATFORM_CLIENT_TEARDOWN_PU_CONNECTION -> ERROR_CAS_PLATFORM_CLIENT_TEARDOWN_PU_CONNECTION
    int ERROR_CAS_PU_REFUSE_CLIENT_CONNECTION -> ERROR_CAS_PU_REFUSE_CLIENT_CONNECTION
    int ERROR_CAS_PLATFORM_CLIENT_VERIFY_AUTH_ERROR -> ERROR_CAS_PLATFORM_CLIENT_VERIFY_AUTH_ERROR
    int ERROR_CAS_PLATFORM_CLIENT_REQUEST_PU_OPEN_PRIVACY -> ERROR_CAS_PLATFORM_CLIENT_REQUEST_PU_OPEN_PRIVACY
    int ERROR_CAS_PLATFORM_CLIENT_NO_SIGN_RELEATED -> ERROR_CAS_PLATFORM_CLIENT_NO_SIGN_RELEATED
    int ERROR_CAS_DEFENCE_TYPE_UNSUPPORTED -> ERROR_CAS_DEFENCE_TYPE_UNSUPPORTED
    int ERROR_CAS_DEFENCE_TYPE_FAILED -> ERROR_CAS_DEFENCE_TYPE_FAILED
    int ERROR_CAS_DEFENCE_TYPE_FORCE_FAILED -> ERROR_CAS_DEFENCE_TYPE_FORCE_FAILED
    int ERROR_CAS_DEFENCE_TYPE_NEED_FORCE -> ERROR_CAS_DEFENCE_TYPE_NEED_FORCE
    int ERROR_CAS_CLOUD_NOT_FOUND -> ERROR_CAS_CLOUD_NOT_FOUND
    int ERROR_CAS_CLOUD_NO_USER -> ERROR_CAS_CLOUD_NO_USER
    int ERROR_CAS_CLOUD_FILE_TAIL_REACHED -> ERROR_CAS_CLOUD_FILE_TAIL_REACHED
    int ERROR_CAS_CLOUD_INVALID_SESSION -> ERROR_CAS_CLOUD_INVALID_SESSION
    int ERROR_CAS_CLOUD_INVALID_HANDLE -> ERROR_CAS_CLOUD_INVALID_HANDLE
    int ERROR_CAS_CLOUD_UNKNOWN_CLOUD -> ERROR_CAS_CLOUD_UNKNOWN_CLOUD
    int ERROR_CAS_CLOUD_UNSUPPORT_FILETYPE -> ERROR_CAS_CLOUD_UNSUPPORT_FILETYPE
    int ERROR_CAS_CLOUD_INVALID_FILE -> ERROR_CAS_CLOUD_INVALID_FILE
    int ERROR_CAS_CLOUD_QUOTA_IS_FULL -> ERROR_CAS_CLOUD_QUOTA_IS_FULL
    int ERROR_CAS_CLOUD_FILE_IS_FULL -> ERROR_CAS_CLOUD_FILE_IS_FULL
    int ERROR_CAS_UPGRADE_PU_UPGRAD_PLATFORM_DISMATCH -> ERROR_CAS_UPGRADE_PU_UPGRAD_PLATFORM_DISMATCH
    int ERROR_CAS_UPGRADE_PU_UPGRAD_SPACE_DISMATCH -> ERROR_CAS_UPGRADE_PU_UPGRAD_SPACE_DISMATCH
    int ERROR_CAS_UPGRADE_PU_UPGRAD_MEM_DISMATCH -> ERROR_CAS_UPGRADE_PU_UPGRAD_MEM_DISMATCH
    int ERROR_CAS_UPGRADE_PU_UPGRAD_MAJORTYPE_DISMATCH -> ERROR_CAS_UPGRADE_PU_UPGRAD_MAJORTYPE_DISMATCH
    int ERROR_CAS_UPGRADE_PU_UPGRAD_MINORTYPE_DISMATCH -> ERROR_CAS_UPGRADE_PU_UPGRAD_MINORTYPE_DISMATCH
    int ERROR_CAS_UPGRADE_PU_UPGRAD_FILE_NUMS_INVALID -> ERROR_CAS_UPGRADE_PU_UPGRAD_FILE_NUMS_INVALID
    int ERROR_CAS_UPGRADE_PU_UPGRAD_PACK_LEN_INVALID -> ERROR_CAS_UPGRADE_PU_UPGRAD_PACK_LEN_INVALID
    int ERROR_CAS_UPGRADE_PU_UPGRAD_CHECKSUM_ERR -> ERROR_CAS_UPGRADE_PU_UPGRAD_CHECKSUM_ERR
    int ERROR_CAS_UPGRADE_PU_UPGRADE_FRONT_FAIL -> ERROR_CAS_UPGRADE_PU_UPGRADE_FRONT_FAIL
    int ERROR_CAS_UPGRADE_PU_NO_RESOURCE -> ERROR_CAS_UPGRADE_PU_NO_RESOURCE
    int ERROR_CAS_UPGRADE_PU_OPER_NOPERMIT -> ERROR_CAS_UPGRADE_PU_OPER_NOPERMIT
    int ERROR_CAS_UPGRADE_PU_REBOOTING -> ERROR_CAS_UPGRADE_PU_REBOOTING
    int ERROR_CAS_UPGRADE_PU_NO_MEMORY -> ERROR_CAS_UPGRADE_PU_NO_MEMORY
    int ERROR_CAS_UPGRADE_PU_PARAM_ERR -> ERROR_CAS_UPGRADE_PU_PARAM_ERR
    int ERROR_CAS_UPGRADE_PU_HEAD_DATA_ERR -> ERROR_CAS_UPGRADE_PU_HEAD_DATA_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FAILED -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FAILED
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_PATH_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_PATH_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_PARAM_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_PARAM_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_ESTCMD_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_ESTCMD_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_CMD_FAILED -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_CMD_FAILED
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_CONNINIT_FAILED -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_CONNINIT_FAILED
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_TRANS_ABORT -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_TRANS_ABORT
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_SELECT_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_SELECT_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_GET_DATA_SOCK_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_GET_DATA_SOCK_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_RECV_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_RECV_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_BUFF_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_BUFF_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FILE_CHECK_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FILE_CHECK_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_CONN_ERR -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_CONN_ERR
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_LOGIN_FAILED -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_LOGIN_FAILED
    int ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_GET_FILEINFO_FAILED -> ERROR_CAS_UPGRADE_PU_DOWNLOAD_FTP_GET_FILEINFO_FAILED
    int ERROR_CAS_CAPTURE_PIC_LOCAL_FAILED -> ERROR_CAS_CAPTURE_PIC_LOCAL_FAILED
    int ERROR_CAS_CAPTURE_PIC_APPLY_CACHE_FAILED -> ERROR_CAS_CAPTURE_PIC_APPLY_CACHE_FAILED
    int ERROR_CAS_CAPTURE_PIC_PARSE_PMS_DOMAIN_FAILED -> ERROR_CAS_CAPTURE_PIC_PARSE_PMS_DOMAIN_FAILED
    int ERROR_CAS_CAPTURE_PIC_CONNECT_PMS_FAILED -> ERROR_CAS_CAPTURE_PIC_CONNECT_PMS_FAILED
    int ERROR_CAS_CAPTURE_PIC_CREATE_PMS_PACKET_FAILED -> ERROR_CAS_CAPTURE_PIC_CREATE_PMS_PACKET_FAILED
    int ERROR_CAS_CAPTURE_PIC_SEND_PMS_FAILED -> ERROR_CAS_CAPTURE_PIC_SEND_PMS_FAILED
    int ERROR_CAS_CAPTURE_PIC_RECV_PMS_FAILED -> ERROR_CAS_CAPTURE_PIC_RECV_PMS_FAILED
    int ERROR_CAS_CAPTURE_PIC_PARSE_PMS_RESPONSE_FAILED -> ERROR_CAS_CAPTURE_PIC_PARSE_PMS_RESPONSE_FAILED
    int ERROR_CAS_CAPTURE_PIC_GET_URL_FAILED -> ERROR_CAS_CAPTURE_PIC_GET_URL_FAILED
    int ERROR_CAS_BASE -> ERROR_CAS_BASE
    int ERROR_CAS_PARAMETER -> ERROR_CAS_PARAMETER
    int ERROR_CAS_ALLOC_RESOURCE -> ERROR_CAS_ALLOC_RESOURCE
    int ERROR_CAS_SEND_FAILED -> ERROR_CAS_SEND_FAILED
    int ERROR_CAS_RECV_FAILED -> ERROR_CAS_RECV_FAILED
    int ERROR_CAS_PARSE_XML -> ERROR_CAS_PARSE_XML
    int ERROR_CAS_CREATE_XML -> ERROR_CAS_CREATE_XML
    int ERROR_CAS_INIT_SOCKET -> ERROR_CAS_INIT_SOCKET
    int ERROR_CAS_CREATE_SOCKET -> ERROR_CAS_CREATE_SOCKET
    int ERROR_CAS_CONNECT_FAILED -> ERROR_CAS_CONNECT_FAILED
    int ERROR_CAS_NO_INIT -> ERROR_CAS_NO_INIT
    int ERROR_CAS_OVER_MAX_SESSION -> ERROR_CAS_OVER_MAX_SESSION
    int ERROR_CAS_SENDTIMEOUT -> ERROR_CAS_SENDTIMEOUT
    int ERROR_CAS_RECV_TIMEOUT -> ERROR_CAS_RECV_TIMEOUT
    int ERROR_CAS_CREATE_PACKET -> ERROR_CAS_CREATE_PACKET
    int ERROR_CAS_PARSE_PACKET -> ERROR_CAS_PARSE_PACKET
    int ERROR_CAS_FORCE_STOP -> ERROR_CAS_FORCE_STOP
    int ERROR_CAS_GETPORT_FAILED -> ERROR_CAS_GETPORT_FAILED
    int ERROR_CAS_BASE64_ENCODE -> ERROR_CAS_BASE64_ENCODE
    int ERROR_CAS_BASE64_DECODE -> ERROR_CAS_BASE64_DECODE
    int ERROR_CAS_RECV_DATAERROR -> ERROR_CAS_RECV_DATAERROR
    int ERROR_CAS_AES_ENCRYPT_FAILED -> ERROR_CAS_AES_ENCRYPT_FAILED
    int ERROR_CAS_AES_DECRYPT_FAILED -> ERROR_CAS_AES_DECRYPT_FAILED
    int ERROR_CAS_OPERATION_UNSUPPORTED -> ERROR_CAS_OPERATION_UNSUPPORTED
    int ERROR_CAS_P2P_FAILED -> ERROR_CAS_P2P_FAILED
    int ERROR_CAS_SEND_KEEPLIVE_FAILED -> ERROR_CAS_SEND_KEEPLIVE_FAILED
    int ERROR_CAS_USER_FORCED_ABORT -> ERROR_CAS_USER_FORCED_ABORT
    int ERROR_CAS_BUF_OVER -> ERROR_CAS_BUF_OVER
    int ERROR_CAS_INIT_SSL -> ERROR_CAS_INIT_SSL
    int ERROR_CAS_CONNECT_SSL -> ERROR_CAS_CONNECT_SSL
    int ERROR_CAS_VERIFY_OTHER_ERROR -> ERROR_CAS_VERIFY_OTHER_ERROR
    int ERROR_CAS_VERIFY_DB_ERROR -> ERROR_CAS_VERIFY_DB_ERROR
    int ERROR_CAS_VERIFY_PARAMS_ERROR -> ERROR_CAS_VERIFY_PARAMS_ERROR
    int ERROR_CAS_VERIFY_EXEC_ERROR -> ERROR_CAS_VERIFY_EXEC_ERROR
    int ERROR_CAS_VERIFY_SESSION_ERROR -> ERROR_CAS_VERIFY_SESSION_ERROR
    int ERROR_CAS_VERIFY_CACHE_ERROR -> ERROR_CAS_VERIFY_CACHE_ERROR
    int ERROR_CAS_VERIFY_AUTH_NONE -> ERROR_CAS_VERIFY_AUTH_NONE
    int ERROR_CAS_UNKNOW -> ERROR_CAS_UNKNOW
    int ERROR_CAS_CLIENT_NOINT -> ERROR_CAS_CLIENT_NOINT
    int ERROR_CAS_NO_DATA -> ERROR_CAS_NO_DATA
    int ERROR_CAS_CLOUD_SERVER_IS_NULL -> ERROR_CAS_CLOUD_SERVER_IS_NULL
    int ERROR_CAS_STREAM_SOCKET_ERROR -> ERROR_CAS_STREAM_SOCKET_ERROR
    int ERROR_CAS_STREAM_RECV_ERROR -> ERROR_CAS_STREAM_RECV_ERROR
    int ERROR_CAS_STREAM_SEND_ERROR -> ERROR_CAS_STREAM_SEND_ERROR
    int ERROR_CAS_AUDIO_SOCKET_ERROR -> ERROR_CAS_AUDIO_SOCKET_ERROR
    int ERROR_CAS_AUDIO_RECV_ERROR -> ERROR_CAS_AUDIO_RECV_ERROR
    int ERROR_CAS_AUDIO_SEND_ERROR -> ERROR_CAS_AUDIO_SEND_ERROR
    int ERROR_CAS_PLAYBACK_OVER -> ERROR_CAS_PLAYBACK_OVER
    int ERROR_CAS_PLAYBACK_REALOVER -> ERROR_CAS_PLAYBACK_REALOVER
    int ERROR_INNER_NO_ERROR -> ERROR_INNER_NO_ERROR
    int ERROR_INNER_PARAM_NULL -> ERROR_INNER_PARAM_NULL
    int ERROR_INNER_PARAM_ERROR -> ERROR_INNER_PARAM_ERROR
    int ERROR_INNER_DEVICE_NOT_EXIST -> ERROR_INNER_DEVICE_NOT_EXIST
    int ERROR_INNER_UPGRADE_FIIE_CHECK_FAIL -> ERROR_INNER_UPGRADE_FIIE_CHECK_FAIL
    int ERROR_INNER_FTP_IO_ERROR -> ERROR_INNER_FTP_IO_ERROR
    int ERROR_INNER_FTP_SERVER_ERROR -> ERROR_INNER_FTP_SERVER_ERROR
    int ERROR_INNER_CREATE_FILE_ERROR -> ERROR_INNER_CREATE_FILE_ERROR
    int ERROR_INNER_FTP_TIMEOUT_ERROR -> ERROR_INNER_FTP_TIMEOUT_ERROR
    int ERROR_INNER_FTP_BREAK_ERROR -> ERROR_INNER_FTP_BREAK_ERROR
    int ERROR_INNER_DEVICE_NOT_IN_SUBNET -> ERROR_INNER_DEVICE_NOT_IN_SUBNET
    int ERROR_INNER_DEVICE_ENCRYPT_PASSWORD_IS_NULL -> ERROR_INNER_DEVICE_ENCRYPT_PASSWORD_IS_NULL
    int ERROR_INNER_NO_NETWORK -> ERROR_INNER_NO_NETWORK
    int ERROR_INNER_FTP_CONNECT_FAIL -> ERROR_INNER_FTP_CONNECT_FAIL
    int ERROR_INNER_NOT_WIFI_NETWORK -> ERROR_INNER_NOT_WIFI_NETWORK
    int ERROR_INNER_TALK_PLAY_ERROR -> ERROR_INNER_TALK_PLAY_ERROR
    int ERROR_INNER_OPEN_FILE_ERROR -> ERROR_INNER_OPEN_FILE_ERROR
    int ERROR_INNER_FILE_READ_ERROR -> ERROR_INNER_FILE_READ_ERROR
    int ERROR_INNER_CAMERA_IS_NULL -> ERROR_INNER_CAMERA_IS_NULL
    int ERROR_INNER_DEVICE_NOT_ONLINE -> ERROR_INNER_DEVICE_NOT_ONLINE
    int ERROR_INNER_DEVICE_LOGIN_PWD_ERROR -> ERROR_INNER_DEVICE_LOGIN_PWD_ERROR
    int ERROR_INNER_NETWORK_CONNECT_FAIL -> ERROR_INNER_NETWORK_CONNECT_FAIL
    int ERROR_INNER_GET_UPGRADE_INFO_FAIL -> ERROR_INNER_GET_UPGRADE_INFO_FAIL
    int ERROR_INNER_SDCARD_UNMOUNTED -> ERROR_INNER_SDCARD_UNMOUNTED
    int ERROR_INNER_TALK_STATUS_ERROR -> ERROR_INNER_TALK_STATUS_ERROR
    int ERROR_INNER_TALK_RECORD_ERROR -> ERROR_INNER_TALK_RECORD_ERROR
    int ERROR_INNER_TALK_OPEN_ERROR -> ERROR_INNER_TALK_OPEN_ERROR
    int ERROR_EXTRA_NO_ERROR -> ERROR_EXTRA_NO_ERROR
    int ERROR_EXTRA_USER_NAME_IS_NULL -> ERROR_EXTRA_USER_NAME_IS_NULL
    int ERROR_EXTRA_USER_NAME_TOO_SHORT -> ERROR_EXTRA_USER_NAME_TOO_SHORT
    int ERROR_EXTRA_USER_NAME_ALL_UNDER_LINE -> ERROR_EXTRA_USER_NAME_ALL_UNDER_LINE
    int ERROR_EXTRA_USER_NAME_TOO_LOOG -> ERROR_EXTRA_USER_NAME_TOO_LOOG
    int ERROR_EXTRA_USER_NAME_IS_ILLEGAL -> ERROR_EXTRA_USER_NAME_IS_ILLEGAL
    int ERROR_EXTRA_USER_NAME_ALL_DIGIT -> ERROR_EXTRA_USER_NAME_ALL_DIGIT
    int ERROR_EXTRA_PASSWORD_IS_NULL -> ERROR_EXTRA_PASSWORD_IS_NULL
    int ERROR_EXTRA_PASSWORD_TOO_SHORT -> ERROR_EXTRA_PASSWORD_TOO_SHORT
    int ERROR_EXTRA_PASSWORD_TOO_LONG -> ERROR_EXTRA_PASSWORD_TOO_LONG
    int ERROR_EXTRA_PASSWORD_SAME_CHARACTER -> ERROR_EXTRA_PASSWORD_SAME_CHARACTER
    int ERROR_EXTRA_PASSWORD_IS_ILLEGAL -> ERROR_EXTRA_PASSWORD_IS_ILLEGAL
    int ERROR_EXTRA_NEW_PASSWORD_IS_NULL -> ERROR_EXTRA_NEW_PASSWORD_IS_NULL
    int ERROR_EXTRA_NEW_PASSWORD_TOO_SHORT -> ERROR_EXTRA_NEW_PASSWORD_TOO_SHORT
    int ERROR_EXTRA_NEW_PASSWORD_TOO_LONG -> ERROR_EXTRA_NEW_PASSWORD_TOO_LONG
    int ERROR_EXTRA_NEW_PASSWORD_SAME_CHARACTER -> ERROR_EXTRA_NEW_PASSWORD_SAME_CHARACTER
    int ERROR_EXTRA_NEW_PASSWORD_IS_ILLEGAL -> ERROR_EXTRA_NEW_PASSWORD_IS_ILLEGAL
    int ERROR_EXTRA_COMFIRM_PASSWORD_IS_NULL -> ERROR_EXTRA_COMFIRM_PASSWORD_IS_NULL
    int ERROR_EXTRA_PASSWORDS_NOT_EQUALS -> ERROR_EXTRA_PASSWORDS_NOT_EQUALS
    int ERROR_EXTRA_PHONE_NUMBER_IS_NULL -> ERROR_EXTRA_PHONE_NUMBER_IS_NULL
    int ERROR_EXTRA_PHONE_NUMBER_IS_ILLEGAL -> ERROR_EXTRA_PHONE_NUMBER_IS_ILLEGAL
    int ERROR_EXTRA_MOBILE_PHONE_NUMBER_IS_NULL -> ERROR_EXTRA_MOBILE_PHONE_NUMBER_IS_NULL
    int ERROR_EXTRA_MOBILE_PHONE_NUMBER_IS_ILLEGAL -> ERROR_EXTRA_MOBILE_PHONE_NUMBER_IS_ILLEGAL
    int ERROR_EXTRA_VERIFY_CODE_IS_NULL -> ERROR_EXTRA_VERIFY_CODE_IS_NULL
    int ERROR_EXTRA_CAMERA_NAME_IS_NULL -> ERROR_EXTRA_CAMERA_NAME_IS_NULL
    int ERROR_EXTRA_CAMERA_NAME_IS_ILLEGAL -> ERROR_EXTRA_CAMERA_NAME_IS_ILLEGAL
    int ERROR_EXTRA_SERIALNO_IS_NULL -> ERROR_EXTRA_SERIALNO_IS_NULL
    int ERROR_EXTRA_CAMERA_IS_NULL -> ERROR_EXTRA_CAMERA_IS_NULL
    int ERROR_EXTRA_DEVICE_SN_IS_NULL -> ERROR_EXTRA_DEVICE_SN_IS_NULL
    int ERROR_EXTRA_CAMERA_PASSWORD_IS_NULL -> ERROR_EXTRA_CAMERA_PASSWORD_IS_NULL
    int ERROR_EXTRA_SERIALNO_IS_ILLEGAL -> ERROR_EXTRA_SERIALNO_IS_ILLEGAL
    int ERROR_EXTRA_COMPANY_ADDR_IS_NULL -> ERROR_EXTRA_COMPANY_ADDR_IS_NULL
    int ERROR_EXTRA_COMPANY_CONTACT_IS_NULL -> ERROR_EXTRA_COMPANY_CONTACT_IS_NULL
    int ERROR_EXTRA_COMPANY_CONTACT_IS_VALIDATE -> ERROR_EXTRA_COMPANY_CONTACT_IS_VALIDATE
    int ERROR_EXTRA_COMPANY_CONTACT_TOO_SHORT -> ERROR_EXTRA_COMPANY_CONTACT_TOO_SHORT
    int ERROR_EXTRA_MOBILE_EMAIL_IS_ILLEGAL -> ERROR_EXTRA_MOBILE_EMAIL_IS_ILLEGAL
    int ERROR_EXTRA_MOBILE_EMAIL_IS_NULL -> ERROR_EXTRA_MOBILE_EMAIL_IS_NULL
    int ERROR_EXTRA_DEVICE_IS_NULL -> ERROR_EXTRA_DEVICE_IS_NULL
com.videogo.exception.HCNetSDKException -> com.videogo.exception.HCNetSDKException:
    long serialVersionUID -> serialVersionUID
    int NET_DVR_NO_ERROR -> NET_DVR_NO_ERROR
    int NET_DVR_PASSWORD_ERROR -> NET_DVR_PASSWORD_ERROR
    int NET_DVR_NOENOUGHPRI -> NET_DVR_NOENOUGHPRI
    int NET_DVR_NOINIT -> NET_DVR_NOINIT
    int NET_DVR_CHANNEL_ERROR -> NET_DVR_CHANNEL_ERROR
    int NET_DVR_OVER_MAXLINK -> NET_DVR_OVER_MAXLINK
    int NET_DVR_VERSIONNOMATCH -> NET_DVR_VERSIONNOMATCH
    int NET_DVR_NETWORK_FAIL_CONNECT -> NET_DVR_NETWORK_FAIL_CONNECT
    int NET_DVR_NETWORK_SEND_ERROR -> NET_DVR_NETWORK_SEND_ERROR
    int NET_DVR_NETWORK_RECV_ERROR -> NET_DVR_NETWORK_RECV_ERROR
    int NET_DVR_NETWORK_RECV_TIMEOUT -> NET_DVR_NETWORK_RECV_TIMEOUT
    int NET_DVR_NETWORK_ERRORDATA -> NET_DVR_NETWORK_ERRORDATA
    int NET_DVR_ORDER_ERROR -> NET_DVR_ORDER_ERROR
    int NET_DVR_OPERNOPERMIT -> NET_DVR_OPERNOPERMIT
    int NET_DVR_COMMANDTIMEOUT -> NET_DVR_COMMANDTIMEOUT
    int NET_DVR_ERRORSERIALPORT -> NET_DVR_ERRORSERIALPORT
    int NET_DVR_ERRORALARMPORT -> NET_DVR_ERRORALARMPORT
    int NET_DVR_PARAMETER_ERROR -> NET_DVR_PARAMETER_ERROR
    int NET_DVR_CHAN_EXCEPTION -> NET_DVR_CHAN_EXCEPTION
    int NET_DVR_NODISK -> NET_DVR_NODISK
    int NET_DVR_ERRORDISKNUM -> NET_DVR_ERRORDISKNUM
    int NET_DVR_DISK_FULL -> NET_DVR_DISK_FULL
    int NET_DVR_DISK_ERROR -> NET_DVR_DISK_ERROR
    int NET_DVR_NOSUPPORT -> NET_DVR_NOSUPPORT
    int NET_DVR_BUSY -> NET_DVR_BUSY
    int NET_DVR_MODIFY_FAIL -> NET_DVR_MODIFY_FAIL
    int NET_DVR_PASSWORD_FORMAT_ERROR -> NET_DVR_PASSWORD_FORMAT_ERROR
    int NET_DVR_DISK_FORMATING -> NET_DVR_DISK_FORMATING
    int NET_DVR_DVRNORESOURCE -> NET_DVR_DVRNORESOURCE
    int NET_DVR_DVROPRATEFAILED -> NET_DVR_DVROPRATEFAILED
    int NET_DVR_OPENHOSTSOUND_FAIL -> NET_DVR_OPENHOSTSOUND_FAIL
    int NET_DVR_DVRVOICEOPENED -> NET_DVR_DVRVOICEOPENED
    int NET_DVR_TIMEINPUTERROR -> NET_DVR_TIMEINPUTERROR
    int NET_DVR_NOSPECFILE -> NET_DVR_NOSPECFILE
    int NET_DVR_CREATEFILE_ERROR -> NET_DVR_CREATEFILE_ERROR
    int NET_DVR_FILEOPENFAIL -> NET_DVR_FILEOPENFAIL
    int NET_DVR_OPERNOTFINISH -> NET_DVR_OPERNOTFINISH
    int NET_DVR_GETPLAYTIMEFAIL -> NET_DVR_GETPLAYTIMEFAIL
    int NET_DVR_PLAYFAIL -> NET_DVR_PLAYFAIL
    int NET_DVR_FILEFORMAT_ERROR -> NET_DVR_FILEFORMAT_ERROR
    int NET_DVR_DIR_ERROR -> NET_DVR_DIR_ERROR
    int NET_DVR_ALLOC_RESOURCE_ERROR -> NET_DVR_ALLOC_RESOURCE_ERROR
    int NET_DVR_AUDIO_MODE_ERROR -> NET_DVR_AUDIO_MODE_ERROR
    int NET_DVR_NOENOUGH_BUF -> NET_DVR_NOENOUGH_BUF
    int NET_DVR_CREATESOCKET_ERROR -> NET_DVR_CREATESOCKET_ERROR
    int NET_DVR_SETSOCKET_ERROR -> NET_DVR_SETSOCKET_ERROR
    int NET_DVR_MAX_NUM -> NET_DVR_MAX_NUM
    int NET_DVR_USERNOTEXIST -> NET_DVR_USERNOTEXIST
    int NET_DVR_WRITEFLASHERROR -> NET_DVR_WRITEFLASHERROR
    int NET_DVR_UPGRADEFAIL -> NET_DVR_UPGRADEFAIL
    int NET_DVR_CARDHAVEINIT -> NET_DVR_CARDHAVEINIT
    int NET_DVR_PLAYERFAILED -> NET_DVR_PLAYERFAILED
    int NET_DVR_MAX_USERNUM -> NET_DVR_MAX_USERNUM
    int NET_DVR_GETLOCALIPANDMACFAIL -> NET_DVR_GETLOCALIPANDMACFAIL
    int NET_DVR_NOENCODEING -> NET_DVR_NOENCODEING
    int NET_DVR_IPMISMATCH -> NET_DVR_IPMISMATCH
    int NET_DVR_MACMISMATCH -> NET_DVR_MACMISMATCH
    int NET_DVR_UPGRADELANGMISMATCH -> NET_DVR_UPGRADELANGMISMATCH
    int NET_DVR_MAX_PLAYERPORT -> NET_DVR_MAX_PLAYERPORT
    int NET_DVR_NOSPACEBACKUP -> NET_DVR_NOSPACEBACKUP
    int NET_DVR_NODEVICEBACKUP -> NET_DVR_NODEVICEBACKUP
    int NET_DVR_PICTURE_BITS_ERROR -> NET_DVR_PICTURE_BITS_ERROR
    int NET_DVR_PICTURE_DIMENSION_ERROR -> NET_DVR_PICTURE_DIMENSION_ERROR
    int NET_DVR_PICTURE_SIZ_ERROR -> NET_DVR_PICTURE_SIZ_ERROR
    int NET_DVR_LOADPLAYERSDKFAILED -> NET_DVR_LOADPLAYERSDKFAILED
    int NET_DVR_LOADPLAYERSDKPROC_ERROR -> NET_DVR_LOADPLAYERSDKPROC_ERROR
    int NET_DVR_LOADDSSDKFAILED -> NET_DVR_LOADDSSDKFAILED
    int NET_DVR_LOADDSSDKPROC_ERROR -> NET_DVR_LOADDSSDKPROC_ERROR
    int NET_DVR_DSSDK_ERROR -> NET_DVR_DSSDK_ERROR
    int NET_DVR_VOICEMONOPOLIZE -> NET_DVR_VOICEMONOPOLIZE
    int NET_DVR_JOINMULTICASTFAILED -> NET_DVR_JOINMULTICASTFAILED
    int NET_DVR_CREATEDIR_ERROR -> NET_DVR_CREATEDIR_ERROR
    int NET_DVR_BINDSOCKET_ERROR -> NET_DVR_BINDSOCKET_ERROR
    int NET_DVR_SOCKETCLOSE_ERROR -> NET_DVR_SOCKETCLOSE_ERROR
    int NET_DVR_USERID_ISUSING -> NET_DVR_USERID_ISUSING
    int NET_DVR_SOCKETLISTEN_ERROR -> NET_DVR_SOCKETLISTEN_ERROR
    int NET_DVR_PROGRAM_EXCEPTION -> NET_DVR_PROGRAM_EXCEPTION
    int NET_DVR_WRITEFILE_FAILED -> NET_DVR_WRITEFILE_FAILED
    int NET_DVR_FORMAT_READONLY -> NET_DVR_FORMAT_READONLY
    int NET_DVR_WITHSAMEUSERNAME -> NET_DVR_WITHSAMEUSERNAME
    int NET_DVR_DEVICETYPE_ERROR -> NET_DVR_DEVICETYPE_ERROR
    int NET_DVR_LANGUAGE_ERROR -> NET_DVR_LANGUAGE_ERROR
    int NET_DVR_PARAVERSION_ERROR -> NET_DVR_PARAVERSION_ERROR
    int NET_DVR_IPCHAN_NOTALIVE -> NET_DVR_IPCHAN_NOTALIVE
    int NET_DVR_RTSP_SDK_ERROR -> NET_DVR_RTSP_SDK_ERROR
    int NET_DVR_CONVERT_SDK_ERROR -> NET_DVR_CONVERT_SDK_ERROR
    int NET_DVR_IPC_COUNT_OVERFLOW -> NET_DVR_IPC_COUNT_OVERFLOW
    int NET_DVR_RTSP_DESCRIBESERVERERR -> NET_DVR_RTSP_DESCRIBESERVERERR
    int NET_DVR_RTSP_OVER_MAX_CHAN -> NET_DVR_RTSP_OVER_MAX_CHAN
    int NET_DVR_RTSP_PRIVACY_STATUS -> NET_DVR_RTSP_PRIVACY_STATUS
    int NET_SDK_INPUTPARAM_ERROR -> NET_SDK_INPUTPARAM_ERROR
    int NET_SDK_CONNECT_STATUS_NO_ERROR -> NET_SDK_CONNECT_STATUS_NO_ERROR
    int NET_SDK_CONNECT_STATUS_USER_OR_PASSWORD_ERROR -> NET_SDK_CONNECT_STATUS_USER_OR_PASSWORD_ERROR
    int NET_SDK_CONNECT_STATUS_NO_ROUTER -> NET_SDK_CONNECT_STATUS_NO_ROUTER
    int NET_SDK_CONNECT_STATUS_UNKNOW_ERROR -> NET_SDK_CONNECT_STATUS_UNKNOW_ERROR
    int NET_SDK_CONNECT_STATUS_TIME_OUT -> NET_SDK_CONNECT_STATUS_TIME_OUT
com.videogo.exception.InnerException -> com.videogo.exception.InnerException:
    long serialVersionUID -> serialVersionUID
    int INNER_NO_ERROR -> INNER_NO_ERROR
    int INNER_PARAM_NULL -> INNER_PARAM_NULL
    int INNER_PARAM_ERROR -> INNER_PARAM_ERROR
    int INNER_DEVICE_NOT_EXIST -> INNER_DEVICE_NOT_EXIST
    int INNER_UPGRADE_FIIE_CHECK_FAIL -> INNER_UPGRADE_FIIE_CHECK_FAIL
    int INNER_FTP_IO_ERROR -> INNER_FTP_IO_ERROR
    int INNER_FTP_SERVER_ERROR -> INNER_FTP_SERVER_ERROR
    int INNER_CREATE_FILE_ERROR -> INNER_CREATE_FILE_ERROR
    int INNER_FTP_TIMEOUT_ERROR -> INNER_FTP_TIMEOUT_ERROR
    int INNER_FTP_BREAK_ERROR -> INNER_FTP_BREAK_ERROR
    int INNER_DEVICE_NOT_IN_SUBNET -> INNER_DEVICE_NOT_IN_SUBNET
    int INNER_DEVICE_ENCRYPT_PASSWORD_IS_NULL -> INNER_DEVICE_ENCRYPT_PASSWORD_IS_NULL
    int INNER_NO_NETWORK -> INNER_NO_NETWORK
    int INNER_NOT_WIFI_NETWORK -> INNER_NOT_WIFI_NETWORK
    int INNER_FTP_CONNECT_FAIL -> INNER_FTP_CONNECT_FAIL
    int INNER_OPEN_FILE_ERROR -> INNER_OPEN_FILE_ERROR
    int INNER_FILE_READ_ERROR -> INNER_FILE_READ_ERROR
    int INNER_CAMERA_IS_NULL -> INNER_CAMERA_IS_NULL
    int INNER_DEVICE_NOT_ONLINE -> INNER_DEVICE_NOT_ONLINE
    int INNER_DEVICE_LOGIN_PWD_ERROR -> INNER_DEVICE_LOGIN_PWD_ERROR
    int INNER_NETWORK_CONNECT_FAIL -> INNER_NETWORK_CONNECT_FAIL
    int INNER_GET_UPGRADE_INFO_FAIL -> INNER_GET_UPGRADE_INFO_FAIL
    int INNER_SDCARD_UNMOUNTED -> INNER_SDCARD_UNMOUNTED
com.videogo.exception.PPVClientException -> com.videogo.exception.PPVClientException:
    long serialVersionUID -> serialVersionUID
    int PPVCLIENT_NO_ERROR -> PPVCLIENT_NO_ERROR
    int PPVCLIENT_INIT_FAIL -> PPVCLIENT_INIT_FAIL
    int PPVCLIENT_NOINIT -> PPVCLIENT_NOINIT
    int PPVCLIENT_CONNECT_DEVICE_BYACS_FAIL -> PPVCLIENT_CONNECT_DEVICE_BYACS_FAIL
    int PPVCLIENT_NO_FILE_ERROR -> PPVCLIENT_NO_FILE_ERROR
    int PPVCLIENT_SEARCH_FILE_FAIL -> PPVCLIENT_SEARCH_FILE_FAIL
    int PPVCLIENT_REALPLAY_START_FAIL -> PPVCLIENT_REALPLAY_START_FAIL
    int PPVCLIENT_GET_DISK_STATUS_FAIL -> PPVCLIENT_GET_DISK_STATUS_FAIL
    int PPVCLIENT_PPV_VALIDATE_PWD -> PPVCLIENT_PPV_VALIDATE_PWD
com.videogo.exception.PlaySDKException -> com.videogo.exception.PlaySDKException:
    long serialVersionUID -> serialVersionUID
    int PLAYSDK_NO_ERROR -> PLAYSDK_NO_ERROR
    int PLAYSDK_NOINIT -> PLAYSDK_NOINIT
    int PLAYSDK_GET_PORT_FAIL -> PLAYSDK_GET_PORT_FAIL
    int PLAYSDK_SET_FILEENDCB_FAIL -> PLAYSDK_SET_FILEENDCB_FAIL
com.videogo.exception.RtspClientException -> com.videogo.exception.RtspClientException:
    long serialVersionUID -> serialVersionUID
    int RTSPCLIENT_NO_ERROR -> RTSPCLIENT_NO_ERROR
    int RTSPCLIENT_INPUTPARAM_ERROR -> RTSPCLIENT_INPUTPARAM_ERROR
    int RTSPCLIENT_NOINIT_ERROR -> RTSPCLIENT_NOINIT_ERROR
    int RTSPCLIENT_SERVER_EXCEPTION -> RTSPCLIENT_SERVER_EXCEPTION
    int RTSPCLIENT_PRIVACY_STATUS -> RTSPCLIENT_PRIVACY_STATUS
    int RTSPCLIENT_NO_RECORD -> RTSPCLIENT_NO_RECORD
    int RTSPCLIENT_CODE -> RTSPCLIENT_CODE
    int RTSPCLIENT_DEVICE_CONNECTION_LIMIT -> RTSPCLIENT_DEVICE_CONNECTION_LIMIT
    int RTSPCLIENT_OVER_MAXLINK -> RTSPCLIENT_OVER_MAXLINK
com.videogo.exception.TTSClientSDKException -> com.videogo.exception.TTSClientSDKException:
    long serialVersionUID -> serialVersionUID
    int TTSCLIENT_NO_ERROR -> TTSCLIENT_NO_ERROR
    int TTSCLIENT_MSG_DEV_PRIVACY_ON -> TTSCLIENT_MSG_DEV_PRIVACY_ON
    int TTSCLIENT_MSG_DEVICE_TAKLING_NOW -> TTSCLIENT_MSG_DEVICE_TAKLING_NOW
com.videogo.main.AppManager -> com.videogo.main.AppManager:
    java.lang.String TAG -> TAG
    int ISP_TYPE_DIANXIN -> ISP_TYPE_DIANXIN
    int ISP_TYPE_LIANTONG -> ISP_TYPE_LIANTONG
    int ISP_TYPE_YIDONG -> ISP_TYPE_YIDONG
    int ISP_TYPE_TIETONG -> ISP_TYPE_TIETONG
    com.videogo.main.AppManager du -> du
    com.hikvision.netsdk.HCNetSDK mNetSDK -> mNetSDK
    org.MediaPlayer.PlayM4.Player mPlaySDK -> mPlaySDK
    com.videogo.main.ServerInfo dv -> dv
    com.videogo.main.StreamServerData dw -> dw
    com.hik.RtspClient.RtspClient mRtspClientSDK -> mRtspClientSDK
    com.hik.ppvclient.PPVClient mPPVClientSDK -> mPPVClientSDK
    com.hik.CASClient.CASClient de -> de
    com.hik.TTSClient.TTSClient dx -> dx
    com.hik.stunclient.StunClient dy -> dy
    int dz -> dz
    java.lang.String dA -> dA
    int dB -> dB
    java.lang.String dC -> dC
    com.videogo.main.AppManager getInstance() -> getInstance
    com.hikvision.netsdk.HCNetSDK getNetSDKInstance() -> getNetSDKInstance
    org.MediaPlayer.PlayM4.Player getPlaySDKInstance() -> getPlaySDKInstance
    com.videogo.main.ServerInfo getServerInfo() -> getServerInfo
    void clearServerInfo() -> clearServerInfo
    com.videogo.main.StreamServerData w() -> w
    void getAllStreamServer() -> getAllStreamServer
    void clearAllStreamServer() -> clearAllStreamServer
    com.hik.CASClient.ST_SERVER_INFO getCloudServer(int) -> getCloudServer
    com.hik.RtspClient.RtspClient getRtspClientSDKInstance() -> getRtspClientSDKInstance
    com.hik.ppvclient.PPVClient getPPVClientSDKInstance() -> getPPVClientSDKInstance
    com.hik.CASClient.CASClient getCASClientSDKInstance() -> getCASClientSDKInstance
    com.hik.TTSClient.TTSClient getTTSClientSDKInstance() -> getTTSClientSDKInstance
    com.hik.stunclient.StunClient getStunClientInstance() -> getStunClientInstance
    int getNetType() -> getNetType
    void setNetType(int) -> setNetType
    java.lang.String getNetIP() -> getNetIP
    void setNetIP(java.lang.String) -> setNetIP
    int getISPType() -> getISPType
    java.lang.String getISPAddress() -> getISPAddress
    int getPlayISPType(int) -> getPlayISPType
    java.lang.String x() -> x
    java.lang.String get3GIpAddress() -> get3GIpAddress
    java.lang.String a(android.content.Context) -> a
    boolean checkNetworkState(android.content.Context) -> checkNetworkState
    java.lang.String getInetAddress(java.lang.String) -> getInetAddress
    void y() -> y
    void initLibs() -> initLibs
    void finiLibs() -> finiLibs
com.videogo.main.EzvizWebViewActivity -> com.videogo.main.EzvizWebViewActivity:
    java.lang.String TAG -> TAG
    int WEBVIEW_ACTION_LOGIN -> WEBVIEW_ACTION_LOGIN
    int WEBVIEW_ACTION_ADD_DEVICE -> WEBVIEW_ACTION_ADD_DEVICE
    int WEBVIEW_ACTION_SET_DEVICE -> WEBVIEW_ACTION_SET_DEVICE
    java.lang.String OAUTH_SUCCESS -> OAUTH_SUCCESS
    java.lang.String AUTHORIZE_SUCCESS -> AUTHORIZE_SUCCESS
    java.lang.String NOTICE -> NOTICE
    java.lang.String DEVICE_UPGRADE -> DEVICE_UPGRADE
    android.widget.RelativeLayout dD -> dD
    com.videogo.widget.TitleBar dE -> dE
    com.videogo.widget.WebViewEx dF -> dF
    android.widget.ImageView dG -> dG
    int dH -> dH
    int dI -> dI
    int dJ -> dJ
    int dK -> dK
    int dL -> dL
    android.view.animation.Animation dM -> dM
    java.lang.String dm -> dm
    com.videogo.openapi.EzvizAPI bZ -> bZ
    void onCreate(android.os.Bundle) -> onCreate
    boolean z() -> z
    void A() -> A
    void B() -> B
    void C() -> C
    void c(boolean) -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.videogo.widget.WebViewEx a(com.videogo.main.EzvizWebViewActivity) -> a
    com.videogo.widget.TitleBar b(com.videogo.main.EzvizWebViewActivity) -> b
    android.widget.ImageView c(com.videogo.main.EzvizWebViewActivity) -> c
    java.lang.String D() -> D
    android.view.animation.Animation d(com.videogo.main.EzvizWebViewActivity) -> d
    com.videogo.openapi.EzvizAPI e(com.videogo.main.EzvizWebViewActivity) -> e
    int f(com.videogo.main.EzvizWebViewActivity) -> f
    void a(com.videogo.main.EzvizWebViewActivity,boolean) -> a
com.videogo.main.EzvizWebViewActivity$1 -> com.videogo.main.EzvizWebViewActivity$1:
    com.videogo.main.EzvizWebViewActivity dN -> dN
    void onClick(android.view.View) -> onClick
com.videogo.main.EzvizWebViewActivity$2 -> com.videogo.main.EzvizWebViewActivity$2:
    com.videogo.main.EzvizWebViewActivity dN -> dN
    void onClick(android.view.View) -> onClick
com.videogo.main.EzvizWebViewActivity$MyDownloadListener -> com.videogo.main.EzvizWebViewActivity$MyDownloadListener:
    com.videogo.main.EzvizWebViewActivity dN -> dN
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.videogo.main.EzvizWebViewActivity$MyWebViewClient -> com.videogo.main.EzvizWebViewActivity$MyWebViewClient:
    com.videogo.main.EzvizWebViewActivity dN -> dN
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean c(java.lang.String) -> c
com.videogo.main.EzvizWebViewActivity$UpgradeDeviceTask -> com.videogo.main.EzvizWebViewActivity$UpgradeDeviceTask:
    java.lang.String dO -> dO
    com.videogo.main.EzvizWebViewActivity dN -> dN
    void onPreExecute() -> onPreExecute
    java.lang.Integer b(java.lang.Void[]) -> b
    void a(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.main.EzvizWebViewActivity$androidJSAdapter -> com.videogo.main.EzvizWebViewActivity$androidJSAdapter:
    com.videogo.main.EzvizWebViewActivity dN -> dN
    void d(java.lang.String) -> d
com.videogo.main.IspInfo -> com.videogo.main.IspInfo:
    java.lang.String dP -> dP
    long dQ -> dQ
    java.lang.String getExternalIp() -> getExternalIp
    void setExternalIp(java.lang.String) -> setExternalIp
    long getIspcode() -> getIspcode
    void setIspcode(long) -> setIspcode
com.videogo.main.ServerInfo -> com.videogo.main.ServerInfo:
    java.lang.String dR -> dR
    int dS -> dS
    java.lang.String dT -> dT
    int dU -> dU
    java.lang.String dV -> dV
    java.lang.String dW -> dW
    int dX -> dX
    int dY -> dY
    java.lang.String getStun1Addr() -> getStun1Addr
    void setStun1Addr(java.lang.String) -> setStun1Addr
    int getStun1Port() -> getStun1Port
    void setStun1Port(int) -> setStun1Port
    java.lang.String getStun2Addr() -> getStun2Addr
    void setStun2Addr(java.lang.String) -> setStun2Addr
    int getStun2Port() -> getStun2Port
    void setStun2Port(int) -> setStun2Port
    java.lang.String getAuthAddr() -> getAuthAddr
    void setAuthAddr(java.lang.String) -> setAuthAddr
    java.lang.String getPushAddr() -> getPushAddr
    void setPushAddr(java.lang.String) -> setPushAddr
    int getPushHttpPort() -> getPushHttpPort
    void setPushHttpPort(int) -> setPushHttpPort
    int getPushHttpsPort() -> getPushHttpsPort
    void setPushHttpsPort(int) -> setPushHttpsPort
com.videogo.main.StreamServer -> com.videogo.main.StreamServer:
    int dZ -> dZ
    int ea -> ea
    java.lang.String eb -> eb
    int ec -> ec
    int ed -> ed
    int ee -> ee
    int type -> type
    java.util.List ef -> ef
    java.lang.String getIndex() -> getIndex
    void setIndex(java.lang.String) -> setIndex
    int getExternalCmdPort() -> getExternalCmdPort
    void setExternalCmdPort(int) -> setExternalCmdPort
    int getExternalDataPort() -> getExternalDataPort
    void setExternalDataPort(int) -> setExternalDataPort
    int getInternalCmdPort() -> getInternalCmdPort
    void setInternalCmdPort(int) -> setInternalCmdPort
    int getInternalDataPort() -> getInternalDataPort
    void setInternalDataPort(int) -> setInternalDataPort
    int getLoading() -> getLoading
    void setLoading(int) -> setLoading
    int getType() -> getType
    void setType(int) -> setType
    java.util.List getIspInfos() -> getIspInfos
    void setIspInfos(java.util.List) -> setIspInfos
com.videogo.main.StreamServerData -> com.videogo.main.StreamServerData:
    com.videogo.main.StreamServer eg -> eg
    com.videogo.main.StreamServer eh -> eh
    com.videogo.main.StreamServer getS1() -> getS1
    void setS1(com.videogo.main.StreamServer) -> setS1
    com.videogo.main.StreamServer getS2() -> getS2
    void setS2(com.videogo.main.StreamServer) -> setS2
    java.lang.String getS2ExternalIp(int) -> getS2ExternalIp
    int getS2ExternalDataPort() -> getS2ExternalDataPort
    java.lang.String getS1ExternalIp(int) -> getS1ExternalIp
    int getS1ExternalDataPort() -> getS1ExternalDataPort
com.videogo.openapi.EzvizAPI -> com.videogo.openapi.EzvizAPI:
    java.lang.String TAG -> TAG
    int USER_TYPE_HOME -> USER_TYPE_HOME
    int USER_TYPE_ENTERPRISE -> USER_TYPE_ENTERPRISE
    int USER_TYPE_SUB -> USER_TYPE_SUB
    int ei -> ei
    int ej -> ej
    com.videogo.openapi.EzvizAPI bZ -> bZ
    android.app.Application ek -> ek
    com.videogo.main.AppManager mAppManager -> mAppManager
    com.videogo.alarm.AlarmLogInfoManager ab -> ab
    com.hik.stunclient.StunClient dy -> dy
    com.videogo.util.LocalInfo ca -> ca
    java.lang.String el -> el
    java.util.List em -> em
    long en -> en
    java.lang.String eo -> eo
    java.lang.String ep -> ep
    java.lang.String eq -> eq
    org.apache.http.conn.ssl.X509HostnameVerifier er -> er
    void initImageLoader(android.content.Context) -> initImageLoader
    void init(android.app.Application,java.lang.String,java.lang.String) -> init
    com.videogo.openapi.EzvizAPI getInstance() -> getInstance
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getSecretKey() -> getSecretKey
    int getUserType() -> getUserType
    java.lang.String getNetType() -> getNetType
    void setNetType(java.lang.String) -> setNetType
    void setAccessToken(java.lang.String) -> setAccessToken
    java.lang.String getAccessToke() -> getAccessToke
    void j() -> j
    void E() -> E
    void setServerUrl(java.lang.String,java.lang.String) -> setServerUrl
    java.lang.String getServerUrl() -> getServerUrl
    java.lang.String getOpenWebUrl() -> getOpenWebUrl
    void gotoAddDevicePage() -> gotoAddDevicePage
    void gotoAddDevicePage(java.lang.String,java.lang.String) -> gotoAddDevicePage
    void gotoSetDevicePage(java.lang.String,java.lang.String) -> gotoSetDevicePage
    void gotoLoginPage() -> gotoLoginPage
    void gotoLoginPage(boolean) -> gotoLoginPage
    void logout() -> logout
    java.util.List getCameraInfoList(com.videogo.openapi.bean.req.GetCameraInfoList) -> getCameraInfoList
    int getCameraStatus(java.lang.String) -> getCameraStatus
    java.util.List getAlarmInfoList(com.videogo.openapi.bean.req.GetAlarmInfoList) -> getAlarmInfoList
    java.util.List getCloudFileList(com.videogo.openapi.bean.req.GetCloudFileList) -> getCloudFileList
    void deleteDevice(java.lang.String) -> deleteDevice
    com.videogo.openapi.bean.resp.CameraInfo getCameraInfo(int,java.lang.String) -> getCameraInfo
    com.videogo.openapi.bean.resp.VideoInfo getDeviceVideoInfo(java.lang.String) -> getDeviceVideoInfo
    java.lang.String getDevicePicture(java.lang.String,int) -> getDevicePicture
    com.videogo.main.ServerInfo getServerInfo() -> getServerInfo
    com.videogo.main.StreamServerData getStreamServer(int) -> getStreamServer
    void getBatchTokens() -> getBatchTokens
    java.lang.String getVtduToken() -> getVtduToken
    void clearVtduTokens() -> clearVtduTokens
    void setDeviceVideoLevel(java.lang.String,java.lang.String,int,int) -> setDeviceVideoLevel
    java.lang.String getUserName() -> getUserName
    java.lang.String getCameraSnapshot(java.lang.String) -> getCameraSnapshot
    java.lang.String getSnapshotPath(java.lang.String) -> getSnapshotPath
    void regist(com.videogo.openapi.bean.req.RegistInfo) -> regist
    void getSmsCode(int,java.lang.String) -> getSmsCode
    void verifySmsCode(int,java.lang.String,java.lang.String,java.lang.String) -> verifySmsCode
    void checkFeatureCode() -> checkFeatureCode
    void login(com.videogo.openapi.bean.req.LoginInfo) -> login
    void refreshNetwork() -> refreshNetwork
    java.lang.Object postData(java.util.List,java.lang.String,com.videogo.openapi.model.BaseResponse) -> postData
    java.lang.Object paser(java.lang.String,com.videogo.openapi.model.BaseResponse) -> paser
    org.apache.http.client.HttpClient getAllowAllHttpClient() -> getAllowAllHttpClient
    org.apache.http.client.HttpClient a(com.videogo.openapi.model.BaseResponse) -> a
    org.apache.http.client.HttpClient e(java.lang.String) -> e
    com.videogo.main.AppManager a(com.videogo.openapi.EzvizAPI) -> a
com.videogo.openapi.EzvizAPI$1 -> com.videogo.openapi.EzvizAPI$1:
    com.videogo.openapi.EzvizAPI es -> es
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
com.videogo.openapi.EzvizAPI$2 -> com.videogo.openapi.EzvizAPI$2:
    com.videogo.openapi.EzvizAPI es -> es
    void run() -> run
com.videogo.openapi.EzvizAPI$3 -> com.videogo.openapi.EzvizAPI$3:
    com.videogo.openapi.EzvizAPI es -> es
    void run() -> run
com.videogo.openapi.EzvizAPI$4 -> com.videogo.openapi.EzvizAPI$4:
    com.videogo.openapi.EzvizAPI es -> es
    void run() -> run
com.videogo.openapi.EzvizAPI$MyImageDownloader -> com.videogo.openapi.EzvizAPI$MyImageDownloader:
    int HTTP_CONNECT_TIMEOUT -> HTTP_CONNECT_TIMEOUT
    int HTTP_READ_TIMEOUT -> HTTP_READ_TIMEOUT
    com.videogo.openapi.EzvizAPI es -> es
    java.lang.String[] f(java.lang.String) -> f
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.net.HttpURLConnection createConnection(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> createConnection
    java.io.InputStream getStreamForDecryptFile(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> getStreamForDecryptFile
com.videogo.openapi.EzvizAPI$MySSLSocketFactory -> com.videogo.openapi.EzvizAPI$MySSLSocketFactory:
    javax.net.ssl.SSLContext et -> et
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.videogo.openapi.EzvizAPI$MySSLSocketFactory$1 -> com.videogo.openapi.EzvizAPI$MySSLSocketFactory$1:
    com.videogo.openapi.EzvizAPI$MySSLSocketFactory eu -> eu
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.videogo.openapi.ReflectionUtils -> com.videogo.openapi.ReflectionUtils:
    java.lang.String TAG -> TAG
    java.util.Map ev -> ev
    com.videogo.openapi.ReflectionUtils$ClassInfo getClassInfo(java.lang.Class) -> getClassInfo
    void convJSONToObject(org.json.JSONObject,java.lang.Object) -> convJSONToObject
    java.util.List convObjectToParams(java.lang.Object) -> convObjectToParams
    java.util.List a(java.lang.Class) -> a
    java.lang.Object fromJsonToJava(org.json.JSONObject,java.lang.Class) -> fromJsonToJava
    org.json.JSONObject fromJavaToJson(java.lang.Object) -> fromJavaToJson
com.videogo.openapi.ReflectionUtils$ClassInfo -> com.videogo.openapi.ReflectionUtils$ClassInfo:
    java.util.List fields -> fields
com.videogo.openapi.ReflectionUtils$NameObjectParam -> com.videogo.openapi.ReflectionUtils$NameObjectParam:
    java.lang.String name -> name
    java.lang.Object ew -> ew
com.videogo.openapi.annotation.HttpParam -> com.videogo.openapi.annotation.HttpParam:
    java.lang.String name() -> name
com.videogo.openapi.annotation.Serializable -> com.videogo.openapi.annotation.Serializable:
    java.lang.String name() -> name
com.videogo.openapi.bean.BaseInfo -> com.videogo.openapi.bean.BaseInfo:
    java.lang.String ex -> ex
    java.lang.String ey -> ey
    java.lang.String ez -> ez
    java.lang.String eA -> eA
    java.lang.String eB -> eB
    java.lang.String eC -> eC
    java.lang.String getSdkVersion() -> getSdkVersion
    void setSdkVersion(java.lang.String) -> setSdkVersion
    void setAccessToken(java.lang.String) -> setAccessToken
    void setClientType(java.lang.String) -> setClientType
    void setFeatureCode(java.lang.String) -> setFeatureCode
    void setOsVersion(java.lang.String) -> setOsVersion
    void setNetType(java.lang.String) -> setNetType
    java.lang.String getAccessToken() -> getAccessToken
    java.lang.String getClientType() -> getClientType
    java.lang.String getFeatureCode() -> getFeatureCode
    java.lang.String getOsVersion() -> getOsVersion
    java.lang.String getNetType() -> getNetType
com.videogo.openapi.bean.req.AddDeviceInfo -> com.videogo.openapi.bean.req.AddDeviceInfo:
    java.lang.String DEVICEID -> DEVICEID
    java.lang.String CODE -> CODE
    java.lang.String eD -> eD
    java.lang.String eE -> eE
    java.lang.String getDeviceId() -> getDeviceId
    void setDeviceId(java.lang.String) -> setDeviceId
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
com.videogo.openapi.bean.req.BaseCameraInfo -> com.videogo.openapi.bean.req.BaseCameraInfo:
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String eF -> eF
    java.lang.String getCameraId() -> getCameraId
    void setCameraId(java.lang.String) -> setCameraId
com.videogo.openapi.bean.req.BaseDeviceInfo -> com.videogo.openapi.bean.req.BaseDeviceInfo:
    java.lang.String DEVICEID -> DEVICEID
    java.lang.String eD -> eD
    java.lang.String getDeviceId() -> getDeviceId
    void setDeviceId(java.lang.String) -> setDeviceId
com.videogo.openapi.bean.req.BatchGetTokens -> com.videogo.openapi.bean.req.BatchGetTokens:
    int count -> count
    int getCount() -> getCount
    void setCount(int) -> setCount
com.videogo.openapi.bean.req.GetAlarmInfoList -> com.videogo.openapi.bean.req.GetAlarmInfoList:
    java.lang.String eF -> eF
    java.lang.String eG -> eG
    java.lang.String bO -> bO
    int O -> O
    int status -> status
    int eH -> eH
    int eI -> eI
    java.lang.String getCameraId() -> getCameraId
    void setCameraId(java.lang.String) -> setCameraId
    int getPageStart() -> getPageStart
    void setPageStart(int) -> setPageStart
    int getPageSize() -> getPageSize
    void setPageSize(int) -> setPageSize
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
    int getAlarmType() -> getAlarmType
    void setAlarmType(int) -> setAlarmType
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
com.videogo.openapi.bean.req.GetCameraInfo -> com.videogo.openapi.bean.req.GetCameraInfo:
    int eJ -> eJ
    java.lang.String K -> K
    int getCameraNo() -> getCameraNo
    void setCameraNo(int) -> setCameraNo
    java.lang.String getDeviceSerial() -> getDeviceSerial
    void setDeviceSerial(java.lang.String) -> setDeviceSerial
com.videogo.openapi.bean.req.GetCameraInfoList -> com.videogo.openapi.bean.req.GetCameraInfoList:
    int eH -> eH
    int eI -> eI
    int getPageStart() -> getPageStart
    void setPageStart(int) -> setPageStart
    int getPageSize() -> getPageSize
    void setPageSize(int) -> setPageSize
com.videogo.openapi.bean.req.GetCloudFileList -> com.videogo.openapi.bean.req.GetCloudFileList:
    java.lang.String eF -> eF
    java.lang.String eG -> eG
    java.lang.String bO -> bO
    int eH -> eH
    int eI -> eI
    int getPageStart() -> getPageStart
    void setPageStart(int) -> setPageStart
    int getPageSize() -> getPageSize
    void setPageSize(int) -> setPageSize
    java.lang.String getCameraId() -> getCameraId
    void setCameraId(java.lang.String) -> setCameraId
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
com.videogo.openapi.bean.req.GetSmsCodeInfo -> com.videogo.openapi.bean.req.GetSmsCodeInfo:
    int type -> type
    java.lang.String eK -> eK
    java.lang.String eL -> eL
    java.lang.String getSign() -> getSign
    void setSign(java.lang.String) -> setSign
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getPhone() -> getPhone
    void setPhone(java.lang.String) -> setPhone
com.videogo.openapi.bean.req.GetStreamServer -> com.videogo.openapi.bean.req.GetStreamServer:
    int eM -> eM
    int getISPType() -> getISPType
    void setISPType(int) -> setISPType
com.videogo.openapi.bean.req.LoginInfo -> com.videogo.openapi.bean.req.LoginInfo:
    java.lang.String eN -> eN
    java.lang.String bQ -> bQ
    java.lang.String eO -> eO
    java.lang.String getAccount() -> getAccount
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getAppKey() -> getAppKey
    void setAppKey(java.lang.String) -> setAppKey
com.videogo.openapi.bean.req.RegistInfo -> com.videogo.openapi.bean.req.RegistInfo:
    java.lang.String eP -> eP
    java.lang.String bQ -> bQ
    java.lang.String eQ -> eQ
    java.lang.String eO -> eO
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPhoneNumber() -> getPhoneNumber
    void setPhoneNumber(java.lang.String) -> setPhoneNumber
    java.lang.String getAppKey() -> getAppKey
    void setAppKey(java.lang.String) -> setAppKey
com.videogo.openapi.bean.req.SetVideoLevel -> com.videogo.openapi.bean.req.SetVideoLevel:
    java.lang.String K -> K
    int M -> M
    int videoLevel -> videoLevel
    java.lang.String getDeviceSerial() -> getDeviceSerial
    void setDeviceSerial(java.lang.String) -> setDeviceSerial
    int getChannelNo() -> getChannelNo
    void setChannelNo(int) -> setChannelNo
    int getVideoLevel() -> getVideoLevel
    void setVideoLevel(int) -> setVideoLevel
com.videogo.openapi.bean.req.UuidInfo -> com.videogo.openapi.bean.req.UuidInfo:
    java.lang.String bM -> bM
    int x -> x
    java.lang.String getUuid() -> getUuid
    void setUuid(java.lang.String) -> setUuid
    int getX() -> getX
    void setX(int) -> setX
com.videogo.openapi.bean.req.VerifySmsCodeInfo -> com.videogo.openapi.bean.req.VerifySmsCodeInfo:
    int type -> type
    java.lang.String eR -> eR
    java.lang.String eK -> eK
    java.lang.String eS -> eS
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getPhone() -> getPhone
    void setPhone(java.lang.String) -> setPhone
    java.lang.String getSmsCode() -> getSmsCode
    void setSmsCode(java.lang.String) -> setSmsCode
com.videogo.openapi.bean.resp.AlarmInfo -> com.videogo.openapi.bean.resp.AlarmInfo:
    java.lang.String eT -> eT
    java.lang.String eU -> eU
    int O -> O
    java.lang.String eV -> eV
    java.lang.String getAlarmId() -> getAlarmId
    void setAlarmId(java.lang.String) -> setAlarmId
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    int getAlarmType() -> getAlarmType
    void setAlarmType(int) -> setAlarmType
    java.lang.String getAlarmStart() -> getAlarmStart
    void setAlarmStart(java.lang.String) -> setAlarmStart
com.videogo.openapi.bean.resp.CameraInfo -> com.videogo.openapi.bean.resp.CameraInfo:
    java.lang.String eD -> eD
    java.lang.String eF -> eF
    int eJ -> eJ
    java.lang.String eW -> eW
    int status -> status
    int bh -> bh
    java.lang.String picUrl -> picUrl
    int isEncrypt -> isEncrypt
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getPicUrl() -> getPicUrl
    void setPicUrl(java.lang.String) -> setPicUrl
    java.lang.String getDeviceId() -> getDeviceId
    void setDeviceId(java.lang.String) -> setDeviceId
    java.lang.String getCameraId() -> getCameraId
    void setCameraId(java.lang.String) -> setCameraId
    int getCameraNo() -> getCameraNo
    void setCameraNo(int) -> setCameraNo
    java.lang.String getCameraName() -> getCameraName
    void setCameraName(java.lang.String) -> setCameraName
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    int getIsShared() -> getIsShared
    void setIsShared(int) -> setIsShared
    int getIsEncrypt() -> getIsEncrypt
    void setIsEncrypt(int) -> setIsEncrypt
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.openapi.bean.resp.CameraInfo$1 -> com.videogo.openapi.bean.resp.CameraInfo$1:
    com.videogo.openapi.bean.resp.CameraInfo i(android.os.Parcel) -> i
    com.videogo.openapi.bean.resp.CameraInfo[] j(int) -> j
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.openapi.bean.resp.CloudFile -> com.videogo.openapi.bean.resp.CloudFile:
    java.lang.String eX -> eX
    java.lang.String eG -> eG
    java.lang.String bO -> bO
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getFileId() -> getFileId
    void setFileId(java.lang.String) -> setFileId
com.videogo.openapi.bean.resp.VideoInfo -> com.videogo.openapi.bean.resp.VideoInfo:
    java.lang.String bM -> bM
    java.lang.String eG -> eG
    java.lang.String bO -> bO
    java.lang.String getUuid() -> getUuid
    void setUuid(java.lang.String) -> setUuid
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
com.videogo.openapi.model.ApiResponse -> com.videogo.openapi.model.ApiResponse:
    java.lang.String RESULT -> RESULT
    int SUSCCEED -> SUSCCEED
    java.lang.String CODE -> CODE
    java.lang.String MSG -> MSG
    java.lang.Object paser(java.lang.String) -> paser
    boolean paserCode(java.lang.String) -> paserCode
com.videogo.openapi.model.BaseRequset -> com.videogo.openapi.model.BaseRequset:
    java.util.List nvps -> nvps
    java.lang.String ACCESSTOKEN -> ACCESSTOKEN
    java.lang.String eY -> eY
    java.lang.String eZ -> eZ
    java.lang.String fa -> fa
    java.lang.String fb -> fb
    java.lang.String NETTYPE -> NETTYPE
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
    void addPublicParams(com.videogo.openapi.bean.BaseInfo) -> addPublicParams
com.videogo.openapi.model.BaseResponse -> com.videogo.openapi.model.BaseResponse:
    java.lang.String NETWORK_EXCEPTION_ERROR_MSG -> NETWORK_EXCEPTION_ERROR_MSG
    int RESULT_SUSCCEED -> RESULT_SUSCCEED
    java.lang.String RESULT_CODE -> RESULT_CODE
    java.lang.String RESULT_DESC -> RESULT_DESC
    java.lang.Object paser(java.lang.String) -> paser
    boolean paserCode(java.lang.String) -> paserCode
com.videogo.openapi.model.req.AddDeviceReq -> com.videogo.openapi.model.req.AddDeviceReq:
    java.lang.String URL -> URL
    java.lang.String DEVICEID -> DEVICEID
    java.lang.String CODE -> CODE
    com.videogo.openapi.bean.req.AddDeviceInfo fc -> fc
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.BatchGetTokensReq -> com.videogo.openapi.model.req.BatchGetTokensReq:
    java.lang.String URL -> URL
    java.lang.String COUNT -> COUNT
    java.lang.String APPKEY -> APPKEY
    com.videogo.openapi.bean.req.BatchGetTokens fd -> fd
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.CheckFeatureCodeReq -> com.videogo.openapi.model.req.CheckFeatureCodeReq:
    java.lang.String URL -> URL
    java.lang.String APPKEY -> APPKEY
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.DeleteDeviceReq -> com.videogo.openapi.model.req.DeleteDeviceReq:
    java.lang.String URL -> URL
    com.videogo.openapi.bean.req.BaseDeviceInfo fe -> fe
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetAlarmInfoListReq -> com.videogo.openapi.model.req.GetAlarmInfoListReq:
    java.lang.String URL -> URL
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String ENDTIME -> ENDTIME
    java.lang.String ALARMTYPE -> ALARMTYPE
    java.lang.String STATUS -> STATUS
    java.lang.String PAGESTART -> PAGESTART
    java.lang.String PAGESIZE -> PAGESIZE
    com.videogo.openapi.bean.req.GetAlarmInfoList ff -> ff
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCameraDetailReq -> com.videogo.openapi.model.req.GetCameraDetailReq:
    java.lang.String URL -> URL
    com.videogo.openapi.bean.req.BaseCameraInfo fg -> fg
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCameraInfoListReq -> com.videogo.openapi.model.req.GetCameraInfoListReq:
    java.lang.String URL -> URL
    java.lang.String PAGESTART -> PAGESTART
    java.lang.String PAGESIZE -> PAGESIZE
    com.videogo.openapi.bean.req.GetCameraInfoList fh -> fh
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCameraInfoReq -> com.videogo.openapi.model.req.GetCameraInfoReq:
    java.lang.String URL -> URL
    java.lang.String CAMERANO -> CAMERANO
    java.lang.String DEVICESERIAL -> DEVICESERIAL
    com.videogo.openapi.bean.req.GetCameraInfo fi -> fi
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCameraStatusReq -> com.videogo.openapi.model.req.GetCameraStatusReq:
    java.lang.String URL -> URL
    com.videogo.openapi.bean.req.BaseCameraInfo fg -> fg
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCloudFileExListReq -> com.videogo.openapi.model.req.GetCloudFileExListReq:
    java.lang.String URL -> URL
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String ENDTIME -> ENDTIME
    com.videogo.openapi.bean.req.GetCloudFileList fj -> fj
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCloudFileListReq -> com.videogo.openapi.model.req.GetCloudFileListReq:
    java.lang.String URL -> URL
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String ENDTIME -> ENDTIME
    java.lang.String PAGESTART -> PAGESTART
    java.lang.String PAGESIZE -> PAGESIZE
    com.videogo.openapi.bean.req.GetCloudFileList fj -> fj
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetCloudInfoReq -> com.videogo.openapi.model.req.GetCloudInfoReq:
    java.lang.String URL -> URL
    java.lang.String ISPTYPE -> ISPTYPE
    com.videogo.openapi.bean.req.GetStreamServer fk -> fk
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetDevicePictureReq -> com.videogo.openapi.model.req.GetDevicePictureReq:
    java.lang.String URL -> URL
    java.lang.String UUID -> UUID
    java.lang.String X -> X
    com.videogo.openapi.bean.req.UuidInfo fl -> fl
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetDeviceVideoInfoReq -> com.videogo.openapi.model.req.GetDeviceVideoInfoReq:
    java.lang.String URL -> URL
    java.lang.String UUID -> UUID
    com.videogo.openapi.bean.req.UuidInfo fl -> fl
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetServersInfoReq -> com.videogo.openapi.model.req.GetServersInfoReq:
    java.lang.String URL -> URL
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetSmsCodeReq -> com.videogo.openapi.model.req.GetSmsCodeReq:
    java.lang.String URL -> URL
    java.lang.String TYPE -> TYPE
    java.lang.String PHONE -> PHONE
    java.lang.String SIGN -> SIGN
    java.lang.String SECRET -> SECRET
    com.videogo.openapi.bean.req.GetSmsCodeInfo fm -> fm
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.GetUserNameReq -> com.videogo.openapi.model.req.GetUserNameReq:
    java.lang.String URL -> URL
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.LoginReq -> com.videogo.openapi.model.req.LoginReq:
    java.lang.String URL -> URL
    java.lang.String ACCOUNT -> ACCOUNT
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String CUNAME -> CUNAME
    java.lang.String APPKEY -> APPKEY
    com.videogo.openapi.bean.req.LoginInfo fn -> fn
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.RegistReq -> com.videogo.openapi.model.req.RegistReq:
    java.lang.String URL -> URL
    java.lang.String USERNAME -> USERNAME
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String PHONENUMBER -> PHONENUMBER
    java.lang.String APPKEY -> APPKEY
    com.videogo.openapi.bean.req.RegistInfo fo -> fo
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.SetDeviceReq -> com.videogo.openapi.model.req.SetDeviceReq:
    java.lang.String URL -> URL
    java.lang.String DEVICEID -> DEVICEID
    com.videogo.openapi.bean.req.BaseDeviceInfo fe -> fe
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.SetVideoLevelReq -> com.videogo.openapi.model.req.SetVideoLevelReq:
    java.lang.String URL -> URL
    java.lang.String DEVICESERIAL -> DEVICESERIAL
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String CAMERANO -> CAMERANO
    java.lang.String VIDEOLEVEL -> VIDEOLEVEL
    com.videogo.openapi.bean.req.SetVideoLevel fp -> fp
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.VerifySmsCodeReq -> com.videogo.openapi.model.req.VerifySmsCodeReq:
    java.lang.String URL -> URL
    java.lang.String TYPE -> TYPE
    java.lang.String fq -> fq
    java.lang.String PHONE -> PHONE
    java.lang.String SMSCODE -> SMSCODE
    java.lang.String APPKEY -> APPKEY
    com.videogo.openapi.bean.req.VerifySmsCodeInfo fr -> fr
    java.util.List buidParams(com.videogo.openapi.bean.BaseInfo) -> buidParams
com.videogo.openapi.model.req.WebLoginReq -> com.videogo.openapi.model.req.WebLoginReq:
    java.lang.String URL -> URL
    java.lang.String getReqData() -> getReqData
com.videogo.openapi.model.resp.BatchGetTokensResp -> com.videogo.openapi.model.resp.BatchGetTokensResp:
    java.lang.String fs -> fs
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.CheckFeatureCodeResp -> com.videogo.openapi.model.resp.CheckFeatureCodeResp:
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.DeleteDeviceResp -> com.videogo.openapi.model.resp.DeleteDeviceResp:
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetAlarmInfoListResp -> com.videogo.openapi.model.resp.GetAlarmInfoListResp:
    java.lang.String COUNT -> COUNT
    java.lang.String ALARMLIST -> ALARMLIST
    java.lang.String ALARMID -> ALARMID
    java.lang.String ALARMNAME -> ALARMNAME
    java.lang.String ALARMTYPE -> ALARMTYPE
    java.lang.String ALARMSTART -> ALARMSTART
    java.lang.Object paser(java.lang.String) -> paser
    java.util.List optAlarmInfoList(org.json.JSONArray) -> optAlarmInfoList
com.videogo.openapi.model.resp.GetCameraDetailResp -> com.videogo.openapi.model.resp.GetCameraDetailResp:
    java.lang.String ADURL -> ADURL
    java.lang.String DEVICE -> DEVICE
    java.lang.String BELONGDEVICE -> BELONGDEVICE
    java.lang.String DEVICESERIAL -> DEVICESERIAL
    java.lang.String DEVICEIP -> DEVICEIP
    java.lang.String DEVICEPORT -> DEVICEPORT
    java.lang.String CMDPORT -> CMDPORT
    java.lang.String HTTPPORT -> HTTPPORT
    java.lang.String STREAMPORT -> STREAMPORT
    java.lang.String LOCALIP -> LOCALIP
    java.lang.String LOCALDEVICEPORT -> LOCALDEVICEPORT
    java.lang.String LOCALCMDPORT -> LOCALCMDPORT
    java.lang.String LOCALHTTPPORT -> LOCALHTTPPORT
    java.lang.String LOCALSTREAMPORT -> LOCALSTREAMPORT
    java.lang.String NETTYPE -> NETTYPE
    java.lang.String PPVSADDR -> PPVSADDR
    java.lang.String PPVSPORT -> PPVSPORT
    java.lang.String CASIP -> CASIP
    java.lang.String CASPORT -> CASPORT
    java.lang.String MASKIP -> MASKIP
    java.lang.String UPNP -> UPNP
    java.lang.String CLOUDSERVICESTATUS -> CLOUDSERVICESTATUS
    java.lang.String RELEASEVERSION -> RELEASEVERSION
    java.lang.String BELONGNO -> BELONGNO
    java.lang.String BELONGADDED -> BELONGADDED
    java.lang.String ISENCRYPT -> ISENCRYPT
    java.lang.String ENCRYPTPWD -> ENCRYPTPWD
    java.lang.String BELONGSTATE -> BELONGSTATE
    java.lang.String VTMIP -> VTMIP
    java.lang.String VTMPORT -> VTMPORT
    java.lang.String TTSIP -> TTSIP
    java.lang.String TTSPORT -> TTSPORT
    java.lang.String DEVICESTATUS -> DEVICESTATUS
    java.lang.String SUPPORTEXT -> SUPPORTEXT
    java.lang.String CAMERA -> CAMERA
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String CAMERANO -> CAMERANO
    java.lang.String TYPE -> TYPE
    java.lang.String VIDEOLEVEL -> VIDEOLEVEL
    java.lang.String CAPABILITY -> CAPABILITY
    java.lang.String PERMISSION -> PERMISSION
    java.lang.String STATUS -> STATUS
    java.lang.String ISSHARED -> ISSHARED
    com.videogo.device.DeviceInfoEx ft -> ft
    com.videogo.camera.CameraInfoEx fu -> fu
    com.videogo.device.DeviceInfoEx fv -> fv
    java.lang.Object paser(java.lang.String) -> paser
    void optDeviceInfoEx(com.videogo.device.DeviceInfoEx,org.json.JSONObject) -> optDeviceInfoEx
    void optCameraInfoEx(com.videogo.camera.CameraInfoEx,org.json.JSONObject) -> optCameraInfoEx
    java.lang.String a(java.lang.String,org.json.JSONObject) -> a
com.videogo.openapi.model.resp.GetCameraInfoListResp -> com.videogo.openapi.model.resp.GetCameraInfoListResp:
    java.lang.String COUNT -> COUNT
    java.lang.String CAMERALIST -> CAMERALIST
    java.lang.String DEVICEID -> DEVICEID
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String CAMERANO -> CAMERANO
    java.lang.String CAMERANAME -> CAMERANAME
    java.lang.String STATUS -> STATUS
    java.lang.String ISSHARED -> ISSHARED
    java.lang.String PICURL -> PICURL
    java.lang.String ISENCRYPT -> ISENCRYPT
    java.lang.Object paser(java.lang.String) -> paser
    java.util.List optCameraInfoList(org.json.JSONArray) -> optCameraInfoList
com.videogo.openapi.model.resp.GetCameraInfoResp -> com.videogo.openapi.model.resp.GetCameraInfoResp:
    java.lang.String CAMERAINFO -> CAMERAINFO
    java.lang.String DEVICEID -> DEVICEID
    java.lang.String CAMERAID -> CAMERAID
    java.lang.String CAMERANO -> CAMERANO
    java.lang.String CAMERANAME -> CAMERANAME
    java.lang.String STATUS -> STATUS
    java.lang.String ISSHARED -> ISSHARED
    java.lang.String PICURL -> PICURL
    java.lang.String ISENCRYPT -> ISENCRYPT
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetCameraStatusResp -> com.videogo.openapi.model.resp.GetCameraStatusResp:
    java.lang.String STATUS -> STATUS
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetCloudFileExListResp -> com.videogo.openapi.model.resp.GetCloudFileExListResp:
    java.lang.String FILECOUNT -> FILECOUNT
    java.lang.String RESULTS -> RESULTS
    java.lang.String FILEID -> FILEID
    java.lang.String DEVICESERIAL -> DEVICESERIAL
    java.lang.String CAMERANO -> CAMERANO
    java.lang.String FILETYPE -> FILETYPE
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String STOPTIME -> STOPTIME
    java.lang.String CLOUDTYPE -> CLOUDTYPE
    java.lang.String FILEINDEX -> FILEINDEX
    java.lang.String OWNERID -> OWNERID
    java.lang.String CRYPT -> CRYPT
    java.lang.String KEYCHECKSUM -> KEYCHECKSUM
    java.lang.Object paser(java.lang.String) -> paser
    java.util.List optCloudFileExList(org.json.JSONArray) -> optCloudFileExList
com.videogo.openapi.model.resp.GetCloudFileListResp -> com.videogo.openapi.model.resp.GetCloudFileListResp:
    java.lang.String FILECOUNT -> FILECOUNT
    java.lang.String RESULTS -> RESULTS
    java.lang.String FILEID -> FILEID
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String ENDTIME -> ENDTIME
    java.lang.Object paser(java.lang.String) -> paser
    java.util.List optCloudFileList(org.json.JSONArray) -> optCloudFileList
com.videogo.openapi.model.resp.GetCloudInfoResp -> com.videogo.openapi.model.resp.GetCloudInfoResp:
    java.lang.String STREAMSERVER -> STREAMSERVER
    java.lang.String S1 -> S1
    java.lang.String S2 -> S2
    java.lang.String EXTERNAL_CMD_PORT -> EXTERNAL_CMD_PORT
    java.lang.String EXTERNAL_DATA_PORT -> EXTERNAL_DATA_PORT
    java.lang.String INDEX -> INDEX
    java.lang.String INTERNAL_CMD_PORT -> INTERNAL_CMD_PORT
    java.lang.String INTERNAL_DATA_PORT -> INTERNAL_DATA_PORT
    java.lang.String ISPINFO -> ISPINFO
    java.lang.String EXTERNALIP -> EXTERNALIP
    java.lang.String ISPCODE -> ISPCODE
    java.lang.String LOADING -> LOADING
    java.lang.String TYPE -> TYPE
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetDevicePictureResp -> com.videogo.openapi.model.resp.GetDevicePictureResp:
    java.lang.String PICURL -> PICURL
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetDeviceVideoInfoResp -> com.videogo.openapi.model.resp.GetDeviceVideoInfoResp:
    java.lang.String VIDEOINFO -> VIDEOINFO
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetServersInfoResp -> com.videogo.openapi.model.resp.GetServersInfoResp:
    java.lang.String SERVERRESP -> SERVERRESP
    java.lang.String STUN1ADDR -> STUN1ADDR
    java.lang.String STUN1PORT -> STUN1PORT
    java.lang.String STUN2ADDR -> STUN2ADDR
    java.lang.String STUN2PORT -> STUN2PORT
    java.lang.String TTSADDR -> TTSADDR
    java.lang.String TTSPORT -> TTSPORT
    java.lang.String VTMADDR -> VTMADDR
    java.lang.String VTMPORT -> VTMPORT
    java.lang.String AUTHADDR -> AUTHADDR
    java.lang.String PUSHADDR -> PUSHADDR
    java.lang.String PUSHHTTPPORT -> PUSHHTTPPORT
    java.lang.String PUSHHTTPSPORT -> PUSHHTTPSPORT
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetSmsCodeResp -> com.videogo.openapi.model.resp.GetSmsCodeResp:
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.GetUserNameResp -> com.videogo.openapi.model.resp.GetUserNameResp:
    java.lang.String USERNAME -> USERNAME
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.LoginResp -> com.videogo.openapi.model.resp.LoginResp:
    java.lang.String ACCESSTOKEN -> ACCESSTOKEN
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.RegistResp -> com.videogo.openapi.model.resp.RegistResp:
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.SetVideoLevelResp -> com.videogo.openapi.model.resp.SetVideoLevelResp:
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.openapi.model.resp.VerifySmsCodeResp -> com.videogo.openapi.model.resp.VerifySmsCodeResp:
    java.lang.Object paser(java.lang.String) -> paser
com.videogo.realplay.RealPlayMsg -> com.videogo.realplay.RealPlayMsg:
    int MSG_GET_CAMERA_INFO_SUCCESS -> MSG_GET_CAMERA_INFO_SUCCESS
    int MSG_REALPLAY_PLAY_SUCCESS -> MSG_REALPLAY_PLAY_SUCCESS
    int MSG_REALPLAY_PLAY_FAIL -> MSG_REALPLAY_PLAY_FAIL
    int MSG_SET_VEDIOMODE_SUCCESS -> MSG_SET_VEDIOMODE_SUCCESS
    int MSG_SET_VEDIOMODE_FAIL -> MSG_SET_VEDIOMODE_FAIL
    int MSG_START_RECORD_SUCCESS -> MSG_START_RECORD_SUCCESS
    int MSG_START_RECORD_FAIL -> MSG_START_RECORD_FAIL
    int MSG_CAPTURE_PICTURE_SUCCESS -> MSG_CAPTURE_PICTURE_SUCCESS
    int MSG_CAPTURE_PICTURE_FAIL -> MSG_CAPTURE_PICTURE_FAIL
    int MSG_REALPLAY_PASSWORD_ERROR -> MSG_REALPLAY_PASSWORD_ERROR
    int MSG_REALPLAY_ENCRYPT_PASSWORD_ERROR -> MSG_REALPLAY_ENCRYPT_PASSWORD_ERROR
    int MSG_REALPLAY_VOICETALK_SUCCESS -> MSG_REALPLAY_VOICETALK_SUCCESS
    int MSG_REALPLAY_VOICETALK_FAIL -> MSG_REALPLAY_VOICETALK_FAIL
    int MSG_REALPLAY_VOICETALK_STOP -> MSG_REALPLAY_VOICETALK_STOP
    int MSG_REALPLAY_UPDATE_TALK_VOLUME -> MSG_REALPLAY_UPDATE_TALK_VOLUME
    int MSG_SET_COVER_SUCCESS -> MSG_SET_COVER_SUCCESS
    int MSG_SET_COVER_FAIL -> MSG_SET_COVER_FAIL
    int MSG_F1_GET_LIGHT_SUCCUSS -> MSG_F1_GET_LIGHT_SUCCUSS
    int MSG_F1_GET_LIGHT_FAIL -> MSG_F1_GET_LIGHT_FAIL
    int MSG_F1_SET_LIGHT_SUCCESS -> MSG_F1_SET_LIGHT_SUCCESS
    int MSG_F1_SET_LIGHT_FAIL -> MSG_F1_SET_LIGHT_FAIL
    int MSG_PTZ_SET_FAIL -> MSG_PTZ_SET_FAIL
    int MSG_REALPLAY_PLAY_START -> MSG_REALPLAY_PLAY_START
    int MSG_REALPLAY_CONNECTION_START -> MSG_REALPLAY_CONNECTION_START
    int MSG_REALPLAY_CONNECTION_SUCCESS -> MSG_REALPLAY_CONNECTION_SUCCESS
com.videogo.realplay.RealPlayStatus -> com.videogo.realplay.RealPlayStatus:
    int STATUS_INIT -> STATUS_INIT
    int STATUS_START -> STATUS_START
    int STATUS_STOP -> STATUS_STOP
    int STATUS_PLAY -> STATUS_PLAY
    int STATUS_PAUSE -> STATUS_PAUSE
    int PTZ_UP -> PTZ_UP
    int PTZ_DOWN -> PTZ_DOWN
    int PTZ_LEFT -> PTZ_LEFT
    int PTZ_RIGHT -> PTZ_RIGHT
    int PTZ_FLIP -> PTZ_FLIP
com.videogo.realplay.RealPlayer -> com.videogo.realplay.RealPlayer:
    java.lang.String TAG -> TAG
    int PLAYBUF_SIZE -> PLAYBUF_SIZE
    android.content.Context mContext -> mContext
    com.hikvision.netsdk.HCNetSDK mNetSDK -> mNetSDK
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    int mNetSDKHandle -> mNetSDKHandle
    int mSessionHandle -> mSessionHandle
    org.MediaPlayer.PlayM4.Player mPlaySDK -> mPlaySDK
    int mPlayPort -> mPlayPort
    android.view.SurfaceHolder mPlaySurface -> mPlaySurface
    com.videogo.ad.AdThread mAdThread -> mAdThread
    boolean mIsSoundOpen -> mIsSoundOpen
    java.util.Calendar mOSDTime -> mOSDTime
    long mStreamFlow -> mStreamFlow
    int mStatus -> mStatus
    com.hik.RtspClient.RtspClient mRtspClientSDK -> mRtspClientSDK
    com.hik.ppvclient.PPVClient mPPVClientSDK -> mPPVClientSDK
    int mRtspEngineIndex -> mRtspEngineIndex
    int mDeviceID -> mDeviceID
    int mStreamId -> mStreamId
    com.videogo.device.DeviceInfoEx mDeviceInfoEx -> mDeviceInfoEx
    int mChannelNo -> mChannelNo
    int mStreamType -> mStreamType
    int mIsRecord -> mIsRecord
    com.hik.streamconvert.StreamConvert mStreamConvert -> mStreamConvert
    int mTransHandle -> mTransHandle
    java.lang.String mRecordFilePath -> mRecordFilePath
    byte[] mHikHeader -> mHikHeader
    int mHeaderLen -> mHeaderLen
    boolean mDisplay -> mDisplay
    long mP2pStreamLen -> mP2pStreamLen
    java.util.Timer mP2PDisplayTimer -> mP2PDisplayTimer
    java.util.TimerTask mP2PDisplayTimerTask -> mP2PDisplayTimerTask
    boolean mIsP2PDisplay -> mIsP2PDisplay
    java.lang.String mSessionID -> mSessionID
    com.hik.CASClient.ST_STREAM_INFO mStreamInfo -> mStreamInfo
    long mStartPlayTime -> mStartPlayTime
    int mCASReconn -> mCASReconn
    java.util.Timer mCASReconnTimer -> mCASReconnTimer
    java.util.TimerTask mCASReconnTimerTask -> mCASReconnTimerTask
    int mRtspReconn -> mRtspReconn
    java.util.Timer mRtspReconnTimer -> mRtspReconnTimer
    java.util.TimerTask mRtspReconnTimerTask -> mRtspReconnTimerTask
    java.lang.String mHardwareCode -> mHardwareCode
    android.os.Handler mHandler -> mHandler
    boolean mStopStatus -> mStopStatus
    long mSpendTime -> mSpendTime
    java.util.List mStepInfoList -> mStepInfoList
    int mRealPlayType -> mRealPlayType
    java.lang.String mRtspRedirectUrl -> mRtspRedirectUrl
    com.videogo.camera.CameraInfoEx mCameraInfoEx -> mCameraInfoEx
    android.graphics.Bitmap mAdImage -> mAdImage
    com.videogo.main.AppManager mAppManager -> mAppManager
    int getRealPlayType() -> getRealPlayType
    void setRealPlayType(int) -> setRealPlayType
    void setStopStatus(boolean) -> setStopStatus
    boolean getStopStatus() -> getStopStatus
    void fRealDataCallBack(int,int,byte[],int) -> fRealDataCallBack
    void onDataCallBack(int,int,int,byte[],int) -> onDataCallBack
    void onMessageCallBack(int,int,int,int,int,int) -> onMessageCallBack
    void startCASReconnTimer() -> startCASReconnTimer
    void stopCASReconnTimer() -> stopCASReconnTimer
    void startRtspReconnTimer() -> startRtspReconnTimer
    void stopRtspReconnTimer() -> stopRtspReconnTimer
    boolean processStreamHeader(byte[],int) -> processStreamHeader
    void processStreamData(int,byte[],int) -> processStreamData
    void startPlay(int,int,int,com.videogo.device.DeviceInfoEx) -> startPlay
    void getDevOperationCode() -> getDevOperationCode
    void newDeviceStartPlay(int,int,com.videogo.device.DeviceInfoEx) -> newDeviceStartPlay
    void startPlayByRtspClient(com.videogo.device.DeviceInfoEx,int,int) -> startPlayByRtspClient
    java.lang.String getRtspRedirectUrl() -> getRtspRedirectUrl
    void startPlayByPPVClient(int,int,com.videogo.device.DeviceInfoEx) -> startPlayByPPVClient
    java.util.List getStepInfoList() -> getStepInfoList
    void stopPlayByRtspClient() -> stopPlayByRtspClient
    void closeRtspConn() -> closeRtspConn
    void stopPlayByPPVClient() -> stopPlayByPPVClient
    void closePpvConn() -> closePpvConn
    void stopPlay() -> stopPlay
    void newDeviceStopPlay() -> newDeviceStopPlay
    void closeCasConn() -> closeCasConn
    boolean openSound() -> openSound
    void stopSound() -> stopSound
    void capturePictrue(java.lang.String,java.lang.String,android.content.res.Resources,int) -> capturePictrue
    void startRecord(java.lang.String,java.lang.String,android.content.res.Resources,int) -> startRecord
    void stopRecord() -> stopRecord
    java.util.Calendar getOSDTime() -> getOSDTime
    boolean openPlayer(byte[],int) -> openPlayer
    int f1GetLight() -> f1GetLight
    void f1SetLight(int,int) -> f1SetLight
    void closePlayer() -> closePlayer
    boolean isSoundOpen() -> isSoundOpen
    void setPlaySurface(android.view.SurfaceHolder) -> setPlaySurface
    void startAdPlay() -> startAdPlay
    void stopAdPlay() -> stopAdPlay
    android.view.SurfaceHolder getPlaySurface() -> getPlaySurface
    long getStreamFlow() -> getStreamFlow
    void resetStreamFlow() -> resetStreamFlow
    void setStatus(int) -> setStatus
    int getStatus() -> getStatus
    void onDisplay(int,byte[],int,int,int,int,int,int) -> onDisplay
    void onProgressNotifyCallBack(int,int,byte[]) -> onProgressNotifyCallBack
    void onAVDataCallBack(int,int,byte[],long,int,byte[],long,byte[],long) -> onAVDataCallBack
    void startP2PDisplayTimer() -> startP2PDisplayTimer
    void stopP2PDisplayTimer() -> stopP2PDisplayTimer
    void onDataCallBack(int,int,byte[],int,int,int,int) -> onDataCallBack
    boolean startSave(byte[],int) -> startSave
    boolean inputData(byte[],int) -> inputData
    boolean stopSave() -> stopSave
    void onMessageCallBack(int,int,int,int,int) -> onMessageCallBack
    void setHandler(android.os.Handler) -> setHandler
    void setCameraInfo(com.videogo.camera.CameraInfoEx) -> setCameraInfo
    void sendMessage(int,int,int) -> sendMessage
    int access$0(com.videogo.realplay.RealPlayer) -> access$0
    boolean access$1(com.videogo.realplay.RealPlayer) -> access$1
    void access$2(com.videogo.realplay.RealPlayer) -> access$2
    void access$3(com.videogo.realplay.RealPlayer,int) -> access$3
    void access$4(com.videogo.realplay.RealPlayer) -> access$4
    void access$5(com.videogo.realplay.RealPlayer) -> access$5
    int access$6(com.videogo.realplay.RealPlayer) -> access$6
    int access$7(com.videogo.realplay.RealPlayer) -> access$7
    com.videogo.device.DeviceInfoEx access$8(com.videogo.realplay.RealPlayer) -> access$8
    void access$9(com.videogo.realplay.RealPlayer,int,int,int) -> access$9
    int access$10(com.videogo.realplay.RealPlayer) -> access$10
    void access$11(com.videogo.realplay.RealPlayer) -> access$11
    void access$12(com.videogo.realplay.RealPlayer,int) -> access$12
    void access$13(com.videogo.realplay.RealPlayer) -> access$13
    boolean access$14(com.videogo.realplay.RealPlayer) -> access$14
    void access$15(com.videogo.realplay.RealPlayer) -> access$15
com.videogo.realplay.RealPlayer$1 -> com.videogo.realplay.RealPlayer$1:
    com.videogo.realplay.RealPlayer fw -> fw
    void run() -> run
com.videogo.realplay.RealPlayer$2 -> com.videogo.realplay.RealPlayer$2:
    com.videogo.realplay.RealPlayer fw -> fw
    void run() -> run
com.videogo.realplay.RealPlayer$3 -> com.videogo.realplay.RealPlayer$3:
    com.videogo.realplay.RealPlayer fw -> fw
    void run() -> run
com.videogo.realplay.RealPlayerHelper -> com.videogo.realplay.RealPlayerHelper:
    java.lang.String TAG -> TAG
    boolean[] fx -> fx
    java.util.concurrent.ExecutorService fy -> fy
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    java.lang.String mHardwareCode -> mHardwareCode
    android.app.Application ek -> ek
    com.videogo.realplay.RealPlayerHelper fz -> fz
    java.util.concurrent.ExecutorService fA -> fA
    com.videogo.util.LocalInfo ca -> ca
    java.lang.String fB -> fB
    android.app.AlertDialog fC -> fC
    com.videogo.camera.CameraInfoEx mCameraInfoEx -> mCameraInfoEx
    com.videogo.realplay.RealPlayerHelper getInstance(android.app.Application) -> getInstance
    void clearCacheData() -> clearCacheData
    void a(com.videogo.realplay.RealPlayerManager,java.lang.String) -> a
    void startEncryptRealPlayTask(android.content.Context,int,com.videogo.realplay.RealPlayerManager,java.lang.String,int,int,int) -> startEncryptRealPlayTask
    void startEncryptRealPlayTask(android.content.Context,com.videogo.realplay.RealPlayerManager,java.lang.String,int,int,int) -> startEncryptRealPlayTask
    void startEncryptRealPlayTask(android.app.Activity,com.videogo.realplay.RealPlayerManager,java.lang.String,int,int,int) -> startEncryptRealPlayTask
    void startRealPlayTask(com.videogo.realplay.RealPlayerManager,java.lang.String) -> startRealPlayTask
    void a(com.videogo.realplay.RealPlayerManager,java.lang.String,java.lang.String) -> a
    void stopRealPlayTask(com.videogo.realplay.RealPlayerManager) -> stopRealPlayTask
    void capturePictureTask(com.videogo.realplay.RealPlayerManager) -> capturePictureTask
    void startRecordTask(com.videogo.realplay.RealPlayerManager,android.content.res.Resources,int) -> startRecordTask
    void stopRecordTask(com.videogo.realplay.RealPlayerManager) -> stopRecordTask
    void setVedioModeTask(com.videogo.realplay.RealPlayerManager,android.os.Handler,int) -> setVedioModeTask
    void sendRequestInfoTask(com.videogo.realplay.RealPlayerManager,int,int,int) -> sendRequestInfoTask
    void f1SetLight(com.videogo.realplay.RealPlayerManager,int,android.os.Handler) -> f1SetLight
    void f1GetLight(com.videogo.realplay.RealPlayerManager,android.os.Handler) -> f1GetLight
    void startVoiceTalkTask(com.videogo.voicetalk.VoiceTalkManager,java.lang.String,int) -> startVoiceTalkTask
    void stopVoiceTalkTask(com.videogo.voicetalk.VoiceTalkManager) -> stopVoiceTalkTask
    void startDemoRealPlayTask(com.videogo.demo.DemoRealPlayer,java.lang.String) -> startDemoRealPlayTask
    void stopDemoRealPlayTask(com.videogo.demo.DemoRealPlayer) -> stopDemoRealPlayTask
    void setPtzCommand(com.videogo.realplay.RealPlayerManager,android.os.Handler,int,boolean) -> setPtzCommand
    void setPtzFlip(com.videogo.realplay.RealPlayerManager,android.os.Handler) -> setPtzFlip
    java.lang.String k(int) -> k
    void a(com.videogo.realplay.RealPlayerManager,android.os.Handler,int,java.lang.String) -> a
    void shutDownExecutorService() -> shutDownExecutorService
    void sendMessage(android.os.Handler,int,int) -> sendMessage
    void sendMessage(android.os.Handler,int,int,java.lang.Object) -> sendMessage
    void sendMessage(android.os.Handler,int,int,int) -> sendMessage
    void a(android.app.AlertDialog) -> a
    void a(com.videogo.realplay.RealPlayerHelper,com.videogo.realplay.RealPlayerManager,java.lang.String) -> a
    android.app.AlertDialog a(com.videogo.realplay.RealPlayerHelper) -> a
    void a(com.videogo.realplay.RealPlayerHelper,android.app.AlertDialog) -> a
    void b(com.videogo.realplay.RealPlayerHelper,android.app.AlertDialog) -> b
    void a(com.videogo.realplay.RealPlayerHelper,com.videogo.realplay.RealPlayerManager,java.lang.String,java.lang.String) -> a
    java.lang.String b(com.videogo.realplay.RealPlayerHelper) -> b
    com.videogo.camera.CameraInfoEx c(com.videogo.realplay.RealPlayerHelper) -> c
    void a(com.videogo.realplay.RealPlayerHelper,com.videogo.camera.CameraInfoEx) -> a
    boolean[] d(com.videogo.realplay.RealPlayerHelper) -> d
    void a(com.videogo.realplay.RealPlayerHelper,com.videogo.realplay.RealPlayerManager,android.os.Handler,int,java.lang.String) -> a
com.videogo.realplay.RealPlayerHelper$1 -> com.videogo.realplay.RealPlayerHelper$1:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    java.lang.String fF -> fF
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.realplay.RealPlayerHelper$10 -> com.videogo.realplay.RealPlayerHelper$10:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    int fG -> fG
    android.os.Handler fH -> fH
    void run() -> run
com.videogo.realplay.RealPlayerHelper$11 -> com.videogo.realplay.RealPlayerHelper$11:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    android.os.Handler fH -> fH
    void run() -> run
com.videogo.realplay.RealPlayerHelper$12 -> com.videogo.realplay.RealPlayerHelper$12:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.voicetalk.VoiceTalkManager fI -> fI
    java.lang.String fF -> fF
    int fJ -> fJ
    void run() -> run
com.videogo.realplay.RealPlayerHelper$13 -> com.videogo.realplay.RealPlayerHelper$13:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.voicetalk.VoiceTalkManager fI -> fI
    void run() -> run
com.videogo.realplay.RealPlayerHelper$14 -> com.videogo.realplay.RealPlayerHelper$14:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.demo.DemoRealPlayer fK -> fK
    java.lang.String fL -> fL
    void run() -> run
com.videogo.realplay.RealPlayerHelper$15 -> com.videogo.realplay.RealPlayerHelper$15:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.demo.DemoRealPlayer fK -> fK
    void run() -> run
com.videogo.realplay.RealPlayerHelper$16 -> com.videogo.realplay.RealPlayerHelper$16:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    int fM -> fM
    com.videogo.realplay.RealPlayerManager fE -> fE
    android.os.Handler fN -> fN
    void run() -> run
com.videogo.realplay.RealPlayerHelper$17 -> com.videogo.realplay.RealPlayerHelper$17:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    android.os.Handler fN -> fN
    void run() -> run
com.videogo.realplay.RealPlayerHelper$2 -> com.videogo.realplay.RealPlayerHelper$2:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    java.lang.String fF -> fF
    void onCancel(android.content.DialogInterface) -> onCancel
com.videogo.realplay.RealPlayerHelper$3 -> com.videogo.realplay.RealPlayerHelper$3:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    android.widget.EditText fO -> fO
    com.videogo.realplay.RealPlayerManager fE -> fE
    java.lang.String fF -> fF
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.realplay.RealPlayerHelper$4 -> com.videogo.realplay.RealPlayerHelper$4:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    java.lang.String fF -> fF
    java.lang.String fP -> fP
    void run() -> run
com.videogo.realplay.RealPlayerHelper$5 -> com.videogo.realplay.RealPlayerHelper$5:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    void run() -> run
com.videogo.realplay.RealPlayerHelper$6 -> com.videogo.realplay.RealPlayerHelper$6:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    void run() -> run
com.videogo.realplay.RealPlayerHelper$7 -> com.videogo.realplay.RealPlayerHelper$7:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    android.content.res.Resources fQ -> fQ
    int fR -> fR
    void run() -> run
com.videogo.realplay.RealPlayerHelper$8 -> com.videogo.realplay.RealPlayerHelper$8:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    int fS -> fS
    android.os.Handler fN -> fN
    void run() -> run
com.videogo.realplay.RealPlayerHelper$9 -> com.videogo.realplay.RealPlayerHelper$9:
    com.videogo.realplay.RealPlayerHelper fD -> fD
    com.videogo.realplay.RealPlayerManager fE -> fE
    int fT -> fT
    int fU -> fU
    int fV -> fV
    void run() -> run
com.videogo.realplay.RealPlayerHelper$PlayStage -> com.videogo.realplay.RealPlayerHelper$PlayStage:
    com.videogo.realplay.RealPlayerHelper$PlayStage PLAY_STAGE -> PLAY_STAGE
    com.videogo.realplay.RealPlayerHelper$PlayStage PLAYING_STAGE -> PLAYING_STAGE
    com.videogo.realplay.RealPlayerHelper$PlayStage STOP_STAGE -> STOP_STAGE
    com.videogo.realplay.RealPlayerHelper$PlayStage EXIT_STAGE -> EXIT_STAGE
    com.videogo.realplay.RealPlayerHelper$PlayStage[] fW -> fW
    com.videogo.realplay.RealPlayerHelper$PlayStage[] values() -> values
    com.videogo.realplay.RealPlayerHelper$PlayStage valueOf(java.lang.String) -> valueOf
com.videogo.realplay.RealPlayerManager -> com.videogo.realplay.RealPlayerManager:
    int VIDEO_LEVEL_FLUNET -> VIDEO_LEVEL_FLUNET
    int VIDEO_LEVEL_BALANCED -> VIDEO_LEVEL_BALANCED
    int VIDEO_LEVEL_HD -> VIDEO_LEVEL_HD
    java.lang.String TAG -> TAG
    com.videogo.camera.CameraInfoEx mCameraInfoEx -> mCameraInfoEx
    com.videogo.realplay.RealPlayer fX -> fX
    com.videogo.main.AppManager mAppManager -> mAppManager
    com.videogo.device.DeviceInfoEx mDeviceInfoEx -> mDeviceInfoEx
    android.content.Context mContext -> mContext
    int fY -> fY
    boolean mStopStatus -> mStopStatus
    android.os.Handler mHandler -> mHandler
    com.videogo.realplay.RealPlayerHelper$PlayStage cc -> cc
    int fZ -> fZ
    com.hik.stunclient.StunClient dy -> dy
    int VIDEO_PLAY_TYPE_PISA_INSIDE -> VIDEO_PLAY_TYPE_PISA_INSIDE
    int VIDEO_PLAY_TYPE_P2P -> VIDEO_PLAY_TYPE_P2P
    int VIDEO_PLAY_TYPE_RTSP -> VIDEO_PLAY_TYPE_RTSP
    int VIDEO_PLAY_TYPE_PISA_OUTSIDE -> VIDEO_PLAY_TYPE_PISA_OUTSIDE
    void setHandler(android.os.Handler) -> setHandler
    android.os.Handler getHandler() -> getHandler
    void setCameraInfo(com.videogo.camera.CameraInfoEx) -> setCameraInfo
    com.videogo.device.DeviceInfoEx getDeviceInfoEx() -> getDeviceInfoEx
    com.videogo.camera.CameraInfoEx getCameraInfoEx() -> getCameraInfoEx
    int getRealPlayType() -> getRealPlayType
    int getSupportTalk() -> getSupportTalk
    int getSupportPtz() -> getSupportPtz
    int getVideoLevel() -> getVideoLevel
    java.lang.String getCapability() -> getCapability
    void setStopStatus(boolean) -> setStopStatus
    boolean getStopStatus() -> getStopStatus
    com.videogo.realplay.RealPlayerHelper$PlayStage getRealPlayStage() -> getRealPlayStage
    void setRealPlayStage(com.videogo.realplay.RealPlayerHelper$PlayStage) -> setRealPlayStage
    void setGsmSignalStrength(int) -> setGsmSignalStrength
    void F() -> F
    boolean startPlay() -> startPlay
    boolean newDeviceStartPlay() -> newDeviceStartPlay
    void stopPlay(com.videogo.camera.CameraInfo) -> stopPlay
    void newDeviceStopPlay(com.videogo.camera.CameraInfo) -> newDeviceStopPlay
    java.lang.String startRecord(java.lang.String,android.content.res.Resources,int) -> startRecord
    void stopRecord() -> stopRecord
    boolean isSoundOpen() -> isSoundOpen
    boolean openSound() -> openSound
    void closeSound() -> closeSound
    void stopAllRealPlay() -> stopAllRealPlay
    boolean addVideoRequestInfo(int,int,int,int) -> addVideoRequestInfo
    java.lang.String getType() -> getType
    void f1SetLight(int) -> f1SetLight
    int f1GetLight() -> f1GetLight
    java.lang.String capturePicture(java.lang.String,android.content.res.Resources,int) -> capturePicture
    java.util.Calendar getOSDTime() -> getOSDTime
    void setVedioMode(com.videogo.camera.CameraInfoEx,int) -> setVedioMode
    int getStatus() -> getStatus
    void setPlaySurface(android.view.SurfaceHolder) -> setPlaySurface
    android.view.SurfaceHolder getPlaySurface() -> getPlaySurface
    void startAdPlay() -> startAdPlay
    void stopAdPlay() -> stopAdPlay
    long getStreamFlow() -> getStreamFlow
    void setStreamFlow() -> setStreamFlow
    void resetStreamFlow() -> resetStreamFlow
com.videogo.remoteplayback.CloudFileEx -> com.videogo.remoteplayback.CloudFileEx:
    java.lang.String eX -> eX
    java.lang.String ga -> ga
    int M -> M
    int gb -> gb
    java.lang.String eG -> eG
    java.lang.String gc -> gc
    java.lang.String gd -> gd
    int ge -> ge
    java.lang.String gf -> gf
    int gg -> gg
    java.lang.String gh -> gh
    java.lang.String getFileId() -> getFileId
    void setFileId(java.lang.String) -> setFileId
    java.lang.String getSerial() -> getSerial
    void setSerial(java.lang.String) -> setSerial
    int getChannelNo() -> getChannelNo
    void setChannelNo(int) -> setChannelNo
    int getFileType() -> getFileType
    void setFileType(int) -> setFileType
    int getCrypt() -> getCrypt
    void setCrypt(int) -> setCrypt
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getStopTime() -> getStopTime
    void setStopTime(java.lang.String) -> setStopTime
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    java.lang.String getFileIndex() -> getFileIndex
    void setFileIndex(java.lang.String) -> setFileIndex
    int getCloudType() -> getCloudType
    void setCloudType(int) -> setCloudType
    java.lang.String getKeyChecksum() -> getKeyChecksum
    void setKeyChecksum(java.lang.String) -> setKeyChecksum
    com.videogo.remoteplayback.CloudFileEx copy() -> copy
com.videogo.remoteplayback.RemoteFileInfo -> com.videogo.remoteplayback.RemoteFileInfo:
    int mType -> mType
    java.util.Calendar gi -> gi
    java.util.Calendar gj -> gj
    java.lang.String gk -> gk
    int gl -> gl
    void setFileType(int) -> setFileType
    int getFileType() -> getFileType
    java.util.Calendar getStartTime() -> getStartTime
    void setStartTime(java.util.Calendar) -> setStartTime
    void setStopTime(java.util.Calendar) -> setStopTime
    java.util.Calendar getStopTime() -> getStopTime
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    int getFileSize() -> getFileSize
    void setFileSize(int) -> setFileSize
    com.videogo.remoteplayback.RemoteFileInfo copy() -> copy
com.videogo.remoteplayback.RemoteFileSearch -> com.videogo.remoteplayback.RemoteFileSearch:
    java.lang.String TAG -> TAG
    java.util.List gm -> gm
    java.util.List gn -> gn
    java.util.Calendar go -> go
    java.util.Calendar gp -> gp
    java.util.Calendar gq -> gq
    java.util.Calendar gr -> gr
    boolean mAbort -> mAbort
    boolean gs -> gs
    java.util.Calendar getStartCalendar() -> getStartCalendar
    java.util.List getCloudFileList() -> getCloudFileList
    void setCloudFiles(java.util.List) -> setCloudFiles
    java.util.Calendar getStopCalendar() -> getStopCalendar
    void setAbort() -> setAbort
    void setSearchDone(boolean) -> setSearchDone
    boolean getSearchDone() -> getSearchDone
    void setCurrentDate(java.util.Calendar) -> setCurrentDate
    void searchFile(int,int,java.util.Calendar,java.util.Calendar) -> searchFile
    void searchFileNew(com.videogo.device.DeviceInfoEx,int,java.util.Calendar,java.util.Calendar,java.lang.String) -> searchFileNew
    void b(java.util.List) -> b
    java.lang.String converTime(java.util.Calendar) -> converTime
    boolean searchFileByPPVClient(int,java.util.Calendar,java.util.Calendar,com.videogo.device.DeviceInfoEx) -> searchFileByPPVClient
    boolean a(com.hik.ppvclient.ABS_TIME,com.hik.ppvclient.ABS_TIME,java.util.Calendar,java.util.Calendar) -> a
    java.util.List getFileList() -> getFileList
    void setFileList(java.util.List) -> setFileList
    java.util.Calendar a(com.hikvision.netsdk.NET_DVR_TIME) -> a
    java.util.Calendar a(com.hik.ppvclient.ABS_TIME) -> a
    void onProgressNotifyCallBack(int,int,byte[]) -> onProgressNotifyCallBack
    void searchCloudFiles(java.util.Calendar,java.util.Calendar,java.lang.String) -> searchCloudFiles
    java.lang.String calendar2String(java.util.Calendar) -> calendar2String
    boolean hasRecordFile() -> hasRecordFile
    boolean hasCloudFile() -> hasCloudFile
    boolean hasRemoteFile() -> hasRemoteFile
    com.videogo.remoteplayback.RemotePlayBackFile getFirstRemotePlaybackFile() -> getFirstRemotePlaybackFile
    void G() -> G
    com.videogo.remoteplayback.RemotePlayBackFile getRemotePlayBackFile(java.util.Calendar) -> getRemotePlayBackFile
    java.util.Calendar getCurrentDayStart() -> getCurrentDayStart
    java.util.Calendar getCurrentDayEnd() -> getCurrentDayEnd
com.videogo.remoteplayback.RemotePlayBack -> com.videogo.remoteplayback.RemotePlayBack:
    java.lang.String TAG -> TAG
    int PLAYBUF_SIZE -> PLAYBUF_SIZE
    int STAT_STOP -> STAT_STOP
    int STAT_PLAY -> STAT_PLAY
    int STAT_PAUSE -> STAT_PAUSE
    int STAT_SLOW -> STAT_SLOW
    int STAT_FAST -> STAT_FAST
    com.hikvision.netsdk.HCNetSDK mNetSDK -> mNetSDK
    int mNetSDKHandle -> mNetSDKHandle
    org.MediaPlayer.PlayM4.Player mPlaySDK -> mPlaySDK
    int mPlayPort -> mPlayPort
    byte[] gt -> gt
    android.view.SurfaceHolder mPlaySurface -> mPlaySurface
    int gu -> gu
    boolean mIsSoundOpen -> mIsSoundOpen
    org.MediaPlayer.PlayM4.Player$MPSystemTime gv -> gv
    java.util.Calendar mOSDTime -> mOSDTime
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    int mCASReconn -> mCASReconn
    java.util.Timer mCASReconnTimer -> mCASReconnTimer
    java.util.TimerTask mCASReconnTimerTask -> mCASReconnTimerTask
    int mRtspReconn -> mRtspReconn
    java.util.Timer mRtspReconnTimer -> mRtspReconnTimer
    java.util.TimerTask mRtspReconnTimerTask -> mRtspReconnTimerTask
    java.lang.String mSessionID -> mSessionID
    com.hik.CASClient.ST_STREAM_INFO mStreamInfo -> mStreamInfo
    int mSessionHandle -> mSessionHandle
    com.hik.RtspClient.RtspClient gw -> gw
    int mRtspEngineIndex -> mRtspEngineIndex
    long mStreamFlow -> mStreamFlow
    java.util.List gm -> gm
    java.util.List gn -> gn
    com.videogo.device.DeviceInfoEx mDeviceInfoEx -> mDeviceInfoEx
    com.videogo.remoteplayback.RemotePlayBackFile gx -> gx
    com.videogo.device.DeviceInfoEx gy -> gy
    int mChannelNo -> mChannelNo
    int mIsRecord -> mIsRecord
    int mTransHandle -> mTransHandle
    com.hik.streamconvert.StreamConvert mStreamConvert -> mStreamConvert
    java.lang.String mRecordFilePath -> mRecordFilePath
    byte[] mHikHeader -> mHikHeader
    int mHeaderLen -> mHeaderLen
    boolean gz -> gz
    java.lang.String mHardwareCode -> mHardwareCode
    float gA -> gA
    boolean mAbort -> mAbort
    int cr -> cr
    android.os.Handler mHandler -> mHandler
    com.videogo.main.AppManager mAppManager -> mAppManager
    int getPlayBackType() -> getPlayBackType
    void setPlayBackType(int) -> setPlayBackType
    void setAbort() -> setAbort
    void fPlayDataCallBack(int,int,byte[],int) -> fPlayDataCallBack
    void onDataCallBack(int,int,int,byte[],int) -> onDataCallBack
    void l(int) -> l
    void startCASReconnTimer() -> startCASReconnTimer
    void stopCASReconnTimer() -> stopCASReconnTimer
    void startRtspReconnTimer() -> startRtspReconnTimer
    void stopRtspReconnTimer() -> stopRtspReconnTimer
    void a(com.videogo.remoteplayback.RemotePlayBackFile) -> a
    com.videogo.remoteplayback.RemotePlayBackFile getNextPlayBackFile(java.util.Calendar,boolean) -> getNextPlayBackFile
    void onMessageCallBack(int,int,int,int,int,int) -> onMessageCallBack
    boolean processStreamHeader(byte[],int) -> processStreamHeader
    void a(byte[],int) -> a
    void startPlay(com.videogo.remoteplayback.RemotePlayBackFile,int,int,com.videogo.device.DeviceInfoEx,com.videogo.device.DeviceInfoEx) -> startPlay
    void newDeviceStartPlay(com.videogo.remoteplayback.RemotePlayBackFile,com.videogo.device.DeviceInfoEx,int,com.videogo.device.DeviceInfoEx) -> newDeviceStartPlay
    void playCloudReplay(com.videogo.remoteplayback.RemotePlayBackFile,com.videogo.device.DeviceInfoEx,int,java.util.List,java.util.List) -> playCloudReplay
    java.lang.String converTime(java.util.Calendar) -> converTime
    void startPlayByRtspClient(com.videogo.remoteplayback.RemotePlayBackFile,com.videogo.device.DeviceInfoEx,int,com.videogo.device.DeviceInfoEx,java.util.List,java.util.List) -> startPlayByRtspClient
    void H() -> H
    com.hik.RtspClient.ABS_TIME a(java.util.Calendar) -> a
    void stopPlay() -> stopPlay
    void newDeviceStopPlay() -> newDeviceStopPlay
    void I() -> I
    void closeCasConn() -> closeCasConn
    void stopPlayByRtspClient() -> stopPlayByRtspClient
    void closeRtspConn() -> closeRtspConn
    void pauseByPisa() -> pauseByPisa
    void pauseByRtspClient() -> pauseByRtspClient
    void resume() -> resume
    void resumeByRtspClient() -> resumeByRtspClient
    void resumeNewDevice() -> resumeNewDevice
    void pauseNewDevice() -> pauseNewDevice
    int getPlayBackStatus() -> getPlayBackStatus
    boolean openSound() -> openSound
    void stopSound() -> stopSound
    boolean isSoundOpen() -> isSoundOpen
    boolean openPlayer(byte[],int) -> openPlayer
    void closePlayer() -> closePlayer
    com.hikvision.netsdk.NET_DVR_TIME b(java.util.Calendar) -> b
    java.util.Calendar getOSDTime() -> getOSDTime
    org.MediaPlayer.PlayM4.Player$MPSystemTime getCurrentPlayTime() -> getCurrentPlayTime
    boolean capturePictrue(java.io.File) -> capturePictrue
    void setPlaySurface(android.view.SurfaceHolder) -> setPlaySurface
    android.view.SurfaceHolder getPlaySurface() -> getPlaySurface
    long getStreamFlow() -> getStreamFlow
    void resetStreamFlow() -> resetStreamFlow
    void startRecord(java.lang.String,java.lang.String,android.content.res.Resources,int) -> startRecord
    void capturePictrue(java.lang.String,java.lang.String,android.content.res.Resources,int) -> capturePictrue
    void stopRecord() -> stopRecord
    void onProgressNotifyCallBack(int,int,byte[]) -> onProgressNotifyCallBack
    void onDataCallBack(int,int,byte[],int,int,int,int) -> onDataCallBack
    boolean startSave(byte[],int) -> startSave
    boolean inputData(byte[],int) -> inputData
    boolean stopSave() -> stopSave
    void onDisplay(int,byte[],int,int,int,int,int,int) -> onDisplay
    void onMessageCallBack(int,int,int,int,int) -> onMessageCallBack
    void setHandler(android.os.Handler) -> setHandler
    void sendMessage(int,int,int) -> sendMessage
    int a(com.videogo.remoteplayback.RemotePlayBack) -> a
    boolean b(com.videogo.remoteplayback.RemotePlayBack) -> b
    void c(com.videogo.remoteplayback.RemotePlayBack) -> c
    void a(com.videogo.remoteplayback.RemotePlayBack,int) -> a
    void d(com.videogo.remoteplayback.RemotePlayBack) -> d
    com.videogo.remoteplayback.RemotePlayBackFile e(com.videogo.remoteplayback.RemotePlayBack) -> e
    com.videogo.device.DeviceInfoEx f(com.videogo.remoteplayback.RemotePlayBack) -> f
    int g(com.videogo.remoteplayback.RemotePlayBack) -> g
    com.videogo.device.DeviceInfoEx h(com.videogo.remoteplayback.RemotePlayBack) -> h
    void a(com.videogo.remoteplayback.RemotePlayBack,int,int,int) -> a
    int i(com.videogo.remoteplayback.RemotePlayBack) -> i
    void j(com.videogo.remoteplayback.RemotePlayBack) -> j
    void b(com.videogo.remoteplayback.RemotePlayBack,int) -> b
    void k(com.videogo.remoteplayback.RemotePlayBack) -> k
    void l(com.videogo.remoteplayback.RemotePlayBack) -> l
com.videogo.remoteplayback.RemotePlayBack$1 -> com.videogo.remoteplayback.RemotePlayBack$1:
    com.videogo.remoteplayback.RemotePlayBack gB -> gB
    void run() -> run
com.videogo.remoteplayback.RemotePlayBack$2 -> com.videogo.remoteplayback.RemotePlayBack$2:
    com.videogo.remoteplayback.RemotePlayBack gB -> gB
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackFile -> com.videogo.remoteplayback.RemotePlayBackFile:
    java.util.Calendar gi -> gi
    java.util.Calendar gj -> gj
    com.videogo.remoteplayback.RemoteFileInfo gC -> gC
    com.videogo.remoteplayback.CloudFileEx gD -> gD
    int gE -> gE
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    java.util.Calendar getStartTime() -> getStartTime
    void setStartTime(java.util.Calendar) -> setStartTime
    java.util.Calendar getStopTime() -> getStopTime
    void setStopTime(java.util.Calendar) -> setStopTime
    com.videogo.remoteplayback.RemoteFileInfo getRemoteFileInfo() -> getRemoteFileInfo
    void setRemoteFileInfo(com.videogo.remoteplayback.RemoteFileInfo) -> setRemoteFileInfo
    com.videogo.remoteplayback.CloudFileEx getCloudFile() -> getCloudFile
    void setCloudFile(com.videogo.remoteplayback.CloudFileEx) -> setCloudFile
com.videogo.remoteplayback.RemotePlayBackHelper -> com.videogo.remoteplayback.RemotePlayBackHelper:
    android.app.Application ek -> ek
    java.lang.String TAG -> TAG
    com.videogo.remoteplayback.RemotePlayBackHelper gF -> gF
    java.util.concurrent.ExecutorService fA -> fA
    com.videogo.util.LocalInfo ca -> ca
    com.videogo.remoteplayback.RemoteFileSearch gG -> gG
    android.app.AlertDialog fC -> fC
    com.videogo.remoteplayback.RemotePlayBackHelper getInstance(android.app.Application) -> getInstance
    void clearCacheData() -> clearCacheData
    void sendRequestInfoTask(com.videogo.remoteplayback.RemotePlayBackManager,int) -> sendRequestInfoTask
    void capturePictureTask(com.videogo.remoteplayback.RemotePlayBackManager) -> capturePictureTask
    void stopRecordTask(com.videogo.remoteplayback.RemotePlayBackManager) -> stopRecordTask
    void startRecordTask(com.videogo.remoteplayback.RemotePlayBackManager,android.content.res.Resources,int) -> startRecordTask
    void resumeRemotePlayBackTask(com.videogo.remoteplayback.RemotePlayBackManager) -> resumeRemotePlayBackTask
    void pauseRemotePlayBackTask(com.videogo.remoteplayback.RemotePlayBackManager) -> pauseRemotePlayBackTask
    void stopRemotePlayBackTask(com.videogo.remoteplayback.RemotePlayBackManager) -> stopRemotePlayBackTask
    void a(com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String) -> a
    void startEncryptRemotePlayBackTask(android.content.Context,int,com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.util.Calendar,java.util.Calendar,int,int,int) -> startEncryptRemotePlayBackTask
    void startEncryptRemotePlayBackTask(android.content.Context,com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.util.Calendar,java.util.Calendar,int,int,int) -> startEncryptRemotePlayBackTask
    void startEncryptRemotePlayBackTask(android.app.Activity,com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.util.Calendar,java.util.Calendar,int,int,int) -> startEncryptRemotePlayBackTask
    void startRemotePlayBackTask(com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.util.Calendar,java.util.Calendar) -> startRemotePlayBackTask
    void searchRemotePlayBackFileTask(com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar) -> searchRemotePlayBackFileTask
    void a(com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar) -> a
    boolean a(com.videogo.remoteplayback.RemotePlayBackManager,com.videogo.device.DeviceInfoEx,com.videogo.camera.CameraInfoEx,java.util.Calendar,java.util.Calendar,java.lang.String) -> a
    boolean a(com.videogo.remoteplayback.RemotePlayBackManager,com.videogo.device.DeviceInfoEx,java.lang.String) -> a
    void sendMessage(android.os.Handler,int,int) -> sendMessage
    void a(android.os.Handler,int,java.lang.Object) -> a
    void a(android.app.AlertDialog) -> a
    com.videogo.util.LocalInfo a(com.videogo.remoteplayback.RemotePlayBackHelper) -> a
    void a(com.videogo.remoteplayback.RemotePlayBackHelper,android.os.Handler,int,java.lang.Object) -> a
    void a(com.videogo.remoteplayback.RemotePlayBackHelper,android.os.Handler,int,int) -> a
    void a(com.videogo.remoteplayback.RemotePlayBackHelper,com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String) -> a
    android.app.AlertDialog b(com.videogo.remoteplayback.RemotePlayBackHelper) -> b
    void a(com.videogo.remoteplayback.RemotePlayBackHelper,android.app.AlertDialog) -> a
    void b(com.videogo.remoteplayback.RemotePlayBackHelper,android.app.AlertDialog) -> b
    void a(com.videogo.remoteplayback.RemotePlayBackHelper,com.videogo.remoteplayback.RemotePlayBackManager,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar) -> a
    com.videogo.remoteplayback.RemoteFileSearch c(com.videogo.remoteplayback.RemotePlayBackHelper) -> c
    void a(com.videogo.remoteplayback.RemotePlayBackHelper,com.videogo.remoteplayback.RemoteFileSearch) -> a
    boolean a(com.videogo.remoteplayback.RemotePlayBackHelper,com.videogo.remoteplayback.RemotePlayBackManager,com.videogo.device.DeviceInfoEx,com.videogo.camera.CameraInfoEx,java.util.Calendar,java.util.Calendar,java.lang.String) -> a
com.videogo.remoteplayback.RemotePlayBackHelper$1 -> com.videogo.remoteplayback.RemotePlayBackHelper$1:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    int gJ -> gJ
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$10 -> com.videogo.remoteplayback.RemotePlayBackHelper$10:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    java.lang.String fF -> fF
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    java.util.Calendar gK -> gK
    java.util.Calendar gL -> gL
    java.lang.String fP -> fP
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$11 -> com.videogo.remoteplayback.RemotePlayBackHelper$11:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    java.lang.String fF -> fF
    java.util.Calendar gK -> gK
    java.util.Calendar gL -> gL
    java.lang.String fP -> fP
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$2 -> com.videogo.remoteplayback.RemotePlayBackHelper$2:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$3 -> com.videogo.remoteplayback.RemotePlayBackHelper$3:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    android.content.res.Resources fQ -> fQ
    int fR -> fR
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$4 -> com.videogo.remoteplayback.RemotePlayBackHelper$4:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$5 -> com.videogo.remoteplayback.RemotePlayBackHelper$5:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$6 -> com.videogo.remoteplayback.RemotePlayBackHelper$6:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    void run() -> run
com.videogo.remoteplayback.RemotePlayBackHelper$7 -> com.videogo.remoteplayback.RemotePlayBackHelper$7:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    java.lang.String fF -> fF
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.remoteplayback.RemotePlayBackHelper$8 -> com.videogo.remoteplayback.RemotePlayBackHelper$8:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    java.lang.String fF -> fF
    void onCancel(android.content.DialogInterface) -> onCancel
com.videogo.remoteplayback.RemotePlayBackHelper$9 -> com.videogo.remoteplayback.RemotePlayBackHelper$9:
    com.videogo.remoteplayback.RemotePlayBackHelper gH -> gH
    android.widget.EditText fO -> fO
    com.videogo.remoteplayback.RemotePlayBackManager gI -> gI
    java.lang.String fF -> fF
    java.util.Calendar gK -> gK
    java.util.Calendar gL -> gL
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.remoteplayback.RemotePlayBackHelper$PlayState -> com.videogo.remoteplayback.RemotePlayBackHelper$PlayState:
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState PLAY_STAGE -> PLAY_STAGE
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState PLAYING_STAGE -> PLAYING_STAGE
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState STOP_STAGE -> STOP_STAGE
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState PAUSED_STAGE -> PAUSED_STAGE
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState EXIT_STAGE -> EXIT_STAGE
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState[] gM -> gM
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState[] values() -> values
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState valueOf(java.lang.String) -> valueOf
com.videogo.remoteplayback.RemotePlayBackManager -> com.videogo.remoteplayback.RemotePlayBackManager:
    int FETCH_TYPE_NETSDK -> FETCH_TYPE_NETSDK
    int FETCH_TYPE_CAS -> FETCH_TYPE_CAS
    int FETCH_TYPE_PISA -> FETCH_TYPE_PISA
    int FETCH_TYPE_RTSP -> FETCH_TYPE_RTSP
    int FETCH_TYPE_UPNP -> FETCH_TYPE_UPNP
    int FETCH_TYPE_CLOUD -> FETCH_TYPE_CLOUD
    java.lang.String TAG -> TAG
    com.videogo.remoteplayback.RemotePlayBack gN -> gN
    com.videogo.remoteplayback.RemoteFileSearch gG -> gG
    com.videogo.camera.CameraInfoEx mCameraInfoEx -> mCameraInfoEx
    com.videogo.device.DeviceInfoEx mDeviceInfoEx -> mDeviceInfoEx
    android.content.Context mContext -> mContext
    boolean mAbort -> mAbort
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState mCurrentState -> mCurrentState
    android.os.Handler mHandler -> mHandler
    com.videogo.remoteplayback.RemotePlayBackFile gx -> gx
    long gO -> gO
    void setCameraInoEx(com.videogo.camera.CameraInfoEx) -> setCameraInoEx
    com.videogo.camera.CameraInfoEx getCameraInfoEx() -> getCameraInfoEx
    void setRemotePlayBackFile(com.videogo.remoteplayback.RemotePlayBackFile) -> setRemotePlayBackFile
    com.videogo.remoteplayback.RemotePlayBackFile getRemotePlayBackFile() -> getRemotePlayBackFile
    void setRemoteFileSearch(com.videogo.remoteplayback.RemoteFileSearch) -> setRemoteFileSearch
    java.util.List getRemoteFileInfoList() -> getRemoteFileInfoList
    com.videogo.remoteplayback.RemotePlayBack getPlayBack() -> getPlayBack
    void setHandler(android.os.Handler) -> setHandler
    android.os.Handler getHandler() -> getHandler
    com.videogo.remoteplayback.RemotePlayBackHelper$PlayState getCurrentState() -> getCurrentState
    void setCurrentState(com.videogo.remoteplayback.RemotePlayBackHelper$PlayState) -> setCurrentState
    boolean isAbort() -> isAbort
    void setAbort() -> setAbort
    void startPlay(java.util.List,java.util.List) -> startPlay
    void newStartPlay(java.util.List,java.util.List) -> newStartPlay
    int d(boolean) -> d
    boolean addVideoRequestInfo(int,com.videogo.device.DeviceInfoEx) -> addVideoRequestInfo
    void stopPlay() -> stopPlay
    void stopAllPlay() -> stopAllPlay
    void pausePlay() -> pausePlay
    void resumePlay() -> resumePlay
    java.lang.String capturePicture(java.lang.String,android.content.res.Resources,int) -> capturePicture
    void a(java.io.File) -> a
    java.util.Calendar getOSDTime() -> getOSDTime
    java.lang.String b(java.lang.String,java.lang.String) -> b
    void setPlaySurface(android.view.SurfaceHolder) -> setPlaySurface
    android.view.SurfaceHolder getPlaySurface() -> getPlaySurface
    void openSound() -> openSound
    void closeSound() -> closeSound
    boolean isSoundOpen() -> isSoundOpen
    long getStreamFlow() -> getStreamFlow
    void resetStreamFlow() -> resetStreamFlow
    void setStreamFlow() -> setStreamFlow
    java.lang.String startRecord(java.lang.String,android.content.res.Resources,int) -> startRecord
    void stopRecord() -> stopRecord
    int getFetchType() -> getFetchType
    java.lang.String getFetchName() -> getFetchName
    long getStartFetchStamp() -> getStartFetchStamp
com.videogo.remoteplayback.RemotePlayBackMsg -> com.videogo.remoteplayback.RemotePlayBackMsg:
    int MSG_REMOTEPLAYBACK_PLAY_FINISH -> MSG_REMOTEPLAYBACK_PLAY_FINISH
    int MSG_CAPTURE_PICTURE_SUCCESS -> MSG_CAPTURE_PICTURE_SUCCESS
    int MSG_CAPTURE_PICTURE_FAIL -> MSG_CAPTURE_PICTURE_FAIL
    int MSG_REMOTEPLAYBACK_PLAY_SUCCUSS -> MSG_REMOTEPLAYBACK_PLAY_SUCCUSS
    int MSG_REMOTEPLAYBACK_PLAY_FAIL -> MSG_REMOTEPLAYBACK_PLAY_FAIL
    int MSG_REMOTEPLAYBACK_RATIO_CHANGED -> MSG_REMOTEPLAYBACK_RATIO_CHANGED
    int MSG_REMOTEPLAYBACK_CONNECTION_EXCEPTION -> MSG_REMOTEPLAYBACK_CONNECTION_EXCEPTION
    int MSG_REMOTEPLAYBACK_ENCRYPT_PASSWORD_ERROR -> MSG_REMOTEPLAYBACK_ENCRYPT_PASSWORD_ERROR
    int MSG_REMOTEPLAYBACK_PASSWORD_ERROR -> MSG_REMOTEPLAYBACK_PASSWORD_ERROR
    int MSG_START_RECORD_SUCCESS -> MSG_START_RECORD_SUCCESS
    int MSG_START_RECORD_FAIL -> MSG_START_RECORD_FAIL
    int MSG_REMOTEPLAYBACK_PLAY_START -> MSG_REMOTEPLAYBACK_PLAY_START
    int MSG_REMOTEPLAYBACK_CONNECTION_START -> MSG_REMOTEPLAYBACK_CONNECTION_START
    int MSG_REMOTEPLAYBACK_CONNECTION_SUCCESS -> MSG_REMOTEPLAYBACK_CONNECTION_SUCCESS
    int MSG_GET_CAMERA_INFO_SUCCESS -> MSG_GET_CAMERA_INFO_SUCCESS
    int MSG_REMOTEPLAYBACK_SEARCH_FILE_SUCCUSS -> MSG_REMOTEPLAYBACK_SEARCH_FILE_SUCCUSS
    int MSG_REMOTEPLAYBACK_SEARCH_FILE_FAIL -> MSG_REMOTEPLAYBACK_SEARCH_FILE_FAIL
    int MSG_REMOTEPLAYBACK_SEARCH_NO_FILE -> MSG_REMOTEPLAYBACK_SEARCH_NO_FILE
com.videogo.scan.camera.AutoFocusCallback -> com.videogo.scan.camera.AutoFocusCallback:
    java.lang.String TAG -> TAG
    long AUTOFOCUS_INTERVAL_MS -> AUTOFOCUS_INTERVAL_MS
    android.os.Handler autoFocusHandler -> autoFocusHandler
    int autoFocusMessage -> autoFocusMessage
    void setHandler(android.os.Handler,int) -> setHandler
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.videogo.scan.camera.CameraConfigurationManager -> com.videogo.scan.camera.CameraConfigurationManager:
    java.lang.String TAG -> TAG
    int MIN_PREVIEW_PIXELS -> MIN_PREVIEW_PIXELS
    int MAX_PREVIEW_PIXELS -> MAX_PREVIEW_PIXELS
    android.content.Context context -> context
    android.graphics.Point screenResolution -> screenResolution
    android.graphics.Point cameraResolution -> cameraResolution
    void initFromCameraParameters(android.hardware.Camera) -> initFromCameraParameters
    void setDesiredCameraParameters(android.hardware.Camera) -> setDesiredCameraParameters
    android.graphics.Point getCameraResolution() -> getCameraResolution
    android.graphics.Point getScreenResolution() -> getScreenResolution
    void setTorch(android.hardware.Camera,boolean) -> setTorch
    void initializeTorch(android.hardware.Camera$Parameters,android.content.SharedPreferences) -> initializeTorch
    void doSetTorch(android.hardware.Camera$Parameters,boolean) -> doSetTorch
    android.graphics.Point findBestPreviewSizeValue(android.hardware.Camera$Parameters,android.graphics.Point,boolean) -> findBestPreviewSizeValue
    java.lang.String findSettableValue(java.util.Collection,java.lang.String[]) -> findSettableValue
com.videogo.scan.camera.CameraManager -> com.videogo.scan.camera.CameraManager:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    com.videogo.scan.camera.CameraConfigurationManager configManager -> configManager
    android.hardware.Camera camera -> camera
    android.graphics.Rect framingRect -> framingRect
    android.graphics.Rect framingRectInPreview -> framingRectInPreview
    boolean initialized -> initialized
    boolean previewing -> previewing
    boolean reverseImage -> reverseImage
    int requestedFramingRectWidth -> requestedFramingRectWidth
    int requestedFramingRectHeight -> requestedFramingRectHeight
    com.videogo.scan.camera.PreviewCallback previewCallback -> previewCallback
    com.videogo.scan.camera.AutoFocusCallback autoFocusCallback -> autoFocusCallback
    void openDriver(android.view.SurfaceHolder) -> openDriver
    void closeDriver() -> closeDriver
    void startPreview() -> startPreview
    void stopPreview() -> stopPreview
    void requestPreviewFrame(android.os.Handler,int) -> requestPreviewFrame
    void requestAutoFocus(android.os.Handler,int) -> requestAutoFocus
    android.graphics.Rect getFramingRect() -> getFramingRect
    android.graphics.Rect getFramingRectInPreview() -> getFramingRectInPreview
    void setManualFramingRect(int,int) -> setManualFramingRect
    com.videogo.scan.main.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> buildLuminanceSource
com.videogo.scan.camera.PreviewCallback -> com.videogo.scan.camera.PreviewCallback:
    java.lang.String TAG -> TAG
    com.videogo.scan.camera.CameraConfigurationManager configManager -> configManager
    android.os.Handler previewHandler -> previewHandler
    int previewMessage -> previewMessage
    void setHandler(android.os.Handler,int) -> setHandler
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.videogo.scan.main.CaptureActivity -> com.videogo.scan.main.CaptureActivity:
    int SERIAL_NO_LENGTH -> SERIAL_NO_LENGTH
    java.lang.String TAG -> TAG
    java.lang.String PRODUCT_SEARCH_URL_PREFIX -> PRODUCT_SEARCH_URL_PREFIX
    java.lang.String PRODUCT_SEARCH_URL_SUFFIX -> PRODUCT_SEARCH_URL_SUFFIX
    java.lang.String[] ZXING_URLS -> ZXING_URLS
    int HISTORY_REQUEST_CODE -> HISTORY_REQUEST_CODE
    float BEEP_VOLUME -> BEEP_VOLUME
    long VIBRATE_DURATION -> VIBRATE_DURATION
    com.videogo.scan.main.CaptureActivityHandler mHandler -> mHandler
    com.videogo.scan.main.ViewfinderView mViewfinderView -> mViewfinderView
    android.widget.TextView mTxtResult -> mTxtResult
    com.videogo.scan.main.InactivityTimer mInactivityTimer -> mInactivityTimer
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.widget.Toast mToast -> mToast
    boolean mPlayBeep -> mPlayBeep
    boolean mVibrate -> mVibrate
    java.lang.String mSerialNo -> mSerialNo
    java.lang.String mSerialVerifyCode -> mSerialVerifyCode
    boolean mHasMeasured -> mHasMeasured
    com.videogo.scan.camera.CameraManager cameraManager -> cameraManager
    com.videogo.scan.main.CaptureActivityHandler handler -> handler
    com.google.zxing.Result savedResultToShow -> savedResultToShow
    com.videogo.scan.main.ViewfinderView viewfinderView -> viewfinderView
    com.google.zxing.Result lastResult -> lastResult
    boolean hasSurface -> hasSurface
    com.videogo.scan.main.IntentSource source -> source
    java.lang.String sourceUrl -> sourceUrl
    java.util.Collection decodeFormats -> decodeFormats
    java.lang.String characterSet -> characterSet
    java.lang.String deviceType -> deviceType
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    android.media.MediaPlayer$OnCompletionListener beepListener -> beepListener
    com.videogo.scan.main.ViewfinderView getViewfinderView() -> getViewfinderView
    android.os.Handler getHandler() -> getHandler
    com.videogo.scan.camera.CameraManager getCameraManager() -> getCameraManager
    void onCreate(android.os.Bundle) -> onCreate
    void initTitleBar() -> initTitleBar
    void init() -> init
    void findViews() -> findViews
    void setListener() -> setListener
    void onResume() -> onResume
    boolean isZXingURL(java.lang.String) -> isZXingURL
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void decodeOrStoreSavedBitmap(android.graphics.Bitmap,com.google.zxing.Result) -> decodeOrStoreSavedBitmap
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> handleDecode
    void isValidate() -> isValidate
    void handleLocalValidateSerialNoFail() -> handleLocalValidateSerialNoFail
    void initCamera() -> initCamera
    void displayFrameworkBugMessageAndExit() -> displayFrameworkBugMessageAndExit
    void restartPreviewAfterDelay(long) -> restartPreviewAfterDelay
    void drawViewfinder() -> drawViewfinder
    void initBeepSound() -> initBeepSound
    void playBeepSoundAndVibrate() -> playBeepSoundAndVibrate
    void finish() -> finish
    boolean access$0(com.videogo.scan.main.CaptureActivity) -> access$0
    android.widget.TextView access$1(com.videogo.scan.main.CaptureActivity) -> access$1
    java.lang.String access$2() -> access$2
    void access$3(com.videogo.scan.main.CaptureActivity,boolean) -> access$3
com.videogo.scan.main.CaptureActivity$1 -> com.videogo.scan.main.CaptureActivity$1:
    com.videogo.scan.main.CaptureActivity this$0 -> this$0
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.videogo.scan.main.CaptureActivity$2 -> com.videogo.scan.main.CaptureActivity$2:
    com.videogo.scan.main.CaptureActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.scan.main.CaptureActivity$3 -> com.videogo.scan.main.CaptureActivity$3:
    com.videogo.scan.main.CaptureActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.scan.main.CaptureActivity$4 -> com.videogo.scan.main.CaptureActivity$4:
    com.videogo.scan.main.CaptureActivity this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
com.videogo.scan.main.CaptureActivityHandler -> com.videogo.scan.main.CaptureActivityHandler:
    java.lang.String TAG -> TAG
    com.videogo.scan.main.CaptureActivity activity -> activity
    com.videogo.scan.main.DecodeThread decodeThread -> decodeThread
    com.videogo.scan.main.CaptureActivityHandler$State state -> state
    com.videogo.scan.camera.CameraManager cameraManager -> cameraManager
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> quitSynchronously
    void restartPreviewAndDecode() -> restartPreviewAndDecode
com.videogo.scan.main.CaptureActivityHandler$State -> com.videogo.scan.main.CaptureActivityHandler$State:
    com.videogo.scan.main.CaptureActivityHandler$State PREVIEW -> PREVIEW
    com.videogo.scan.main.CaptureActivityHandler$State SUCCESS -> SUCCESS
    com.videogo.scan.main.CaptureActivityHandler$State DONE -> DONE
    com.videogo.scan.main.CaptureActivityHandler$State[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.scan.main.CaptureActivityHandler$State[] values() -> values
    com.videogo.scan.main.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
com.videogo.scan.main.Contents -> com.videogo.scan.main.Contents:
    java.lang.String URL_KEY -> URL_KEY
    java.lang.String NOTE_KEY -> NOTE_KEY
    java.lang.String[] PHONE_KEYS -> PHONE_KEYS
    java.lang.String[] PHONE_TYPE_KEYS -> PHONE_TYPE_KEYS
    java.lang.String[] EMAIL_KEYS -> EMAIL_KEYS
    java.lang.String[] EMAIL_TYPE_KEYS -> EMAIL_TYPE_KEYS
com.videogo.scan.main.Contents$Type -> com.videogo.scan.main.Contents$Type:
    java.lang.String TEXT -> TEXT
    java.lang.String EMAIL -> EMAIL
    java.lang.String PHONE -> PHONE
    java.lang.String SMS -> SMS
    java.lang.String CONTACT -> CONTACT
    java.lang.String LOCATION -> LOCATION
com.videogo.scan.main.DecodeFormatManager -> com.videogo.scan.main.DecodeFormatManager:
    java.util.regex.Pattern COMMA_PATTERN -> COMMA_PATTERN
    java.util.Collection PRODUCT_FORMATS -> PRODUCT_FORMATS
    java.util.Collection ONE_D_FORMATS -> ONE_D_FORMATS
    java.util.Collection QR_CODE_FORMATS -> QR_CODE_FORMATS
    java.util.Collection DATA_MATRIX_FORMATS -> DATA_MATRIX_FORMATS
    java.util.Collection parseDecodeFormats(android.content.Intent) -> parseDecodeFormats
    java.util.Collection parseDecodeFormats(android.net.Uri) -> parseDecodeFormats
    java.util.Collection parseDecodeFormats(java.lang.Iterable,java.lang.String) -> parseDecodeFormats
com.videogo.scan.main.DecodeHandler -> com.videogo.scan.main.DecodeHandler:
    java.lang.String TAG -> TAG
    com.videogo.scan.main.CaptureActivity activity -> activity
    com.google.zxing.MultiFormatReader multiFormatReader -> multiFormatReader
    boolean running -> running
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> decode
com.videogo.scan.main.DecodeThread -> com.videogo.scan.main.DecodeThread:
    java.lang.String BARCODE_BITMAP -> BARCODE_BITMAP
    com.videogo.scan.main.CaptureActivity activity -> activity
    java.util.Map hints -> hints
    android.os.Handler handler -> handler
    java.util.concurrent.CountDownLatch handlerInitLatch -> handlerInitLatch
    android.os.Handler getHandler() -> getHandler
    void run() -> run
com.videogo.scan.main.FinishListener -> com.videogo.scan.main.FinishListener:
    android.app.Activity activityToFinish -> activityToFinish
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void run() -> run
com.videogo.scan.main.InactivityTimer -> com.videogo.scan.main.InactivityTimer:
    int INACTIVITY_DELAY_SECONDS -> INACTIVITY_DELAY_SECONDS
    java.util.concurrent.ScheduledExecutorService inactivityTimer -> inactivityTimer
    android.app.Activity activity -> activity
    java.util.concurrent.ScheduledFuture inactivityFuture -> inactivityFuture
    android.content.BroadcastReceiver powerStatusReceiver -> powerStatusReceiver
    void onActivity() -> onActivity
    void onPause() -> onPause
    void onResume() -> onResume
    void cancel() -> cancel
    void shutdown() -> shutdown
    void access$0(com.videogo.scan.main.InactivityTimer) -> access$0
com.videogo.scan.main.InactivityTimer$DaemonThreadFactory -> com.videogo.scan.main.InactivityTimer$DaemonThreadFactory:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.videogo.scan.main.InactivityTimer$PowerStatusReceiver -> com.videogo.scan.main.InactivityTimer$PowerStatusReceiver:
    com.videogo.scan.main.InactivityTimer this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.scan.main.IntentSource -> com.videogo.scan.main.IntentSource:
    com.videogo.scan.main.IntentSource NATIVE_APP_INTENT -> NATIVE_APP_INTENT
    com.videogo.scan.main.IntentSource PRODUCT_SEARCH_LINK -> PRODUCT_SEARCH_LINK
    com.videogo.scan.main.IntentSource ZXING_LINK -> ZXING_LINK
    com.videogo.scan.main.IntentSource NONE -> NONE
    com.videogo.scan.main.IntentSource[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.scan.main.IntentSource[] values() -> values
    com.videogo.scan.main.IntentSource valueOf(java.lang.String) -> valueOf
com.videogo.scan.main.Intents -> com.videogo.scan.main.Intents:
com.videogo.scan.main.Intents$Encode -> com.videogo.scan.main.Intents$Encode:
    java.lang.String ACTION -> ACTION
    java.lang.String DATA -> DATA
    java.lang.String TYPE -> TYPE
    java.lang.String FORMAT -> FORMAT
    java.lang.String SHOW_CONTENTS -> SHOW_CONTENTS
com.videogo.scan.main.Intents$History -> com.videogo.scan.main.Intents$History:
    java.lang.String ITEM_NUMBER -> ITEM_NUMBER
com.videogo.scan.main.Intents$Scan -> com.videogo.scan.main.Intents$Scan:
    java.lang.String ACTION -> ACTION
    java.lang.String MODE -> MODE
    java.lang.String PRODUCT_MODE -> PRODUCT_MODE
    java.lang.String ONE_D_MODE -> ONE_D_MODE
    java.lang.String QR_CODE_MODE -> QR_CODE_MODE
    java.lang.String DATA_MATRIX_MODE -> DATA_MATRIX_MODE
    java.lang.String FORMATS -> FORMATS
    java.lang.String CHARACTER_SET -> CHARACTER_SET
    java.lang.String WIDTH -> WIDTH
    java.lang.String HEIGHT -> HEIGHT
    java.lang.String RESULT_DISPLAY_DURATION_MS -> RESULT_DISPLAY_DURATION_MS
    java.lang.String PROMPT_MESSAGE -> PROMPT_MESSAGE
    java.lang.String RESULT -> RESULT
    java.lang.String RESULT_FORMAT -> RESULT_FORMAT
    java.lang.String RESULT_BYTES -> RESULT_BYTES
    java.lang.String RESULT_ORIENTATION -> RESULT_ORIENTATION
    java.lang.String RESULT_ERROR_CORRECTION_LEVEL -> RESULT_ERROR_CORRECTION_LEVEL
    java.lang.String RESULT_BYTE_SEGMENTS_PREFIX -> RESULT_BYTE_SEGMENTS_PREFIX
    java.lang.String SAVE_HISTORY -> SAVE_HISTORY
com.videogo.scan.main.Intents$SearchBookContents -> com.videogo.scan.main.Intents$SearchBookContents:
    java.lang.String ACTION -> ACTION
    java.lang.String ISBN -> ISBN
    java.lang.String QUERY -> QUERY
com.videogo.scan.main.Intents$Share -> com.videogo.scan.main.Intents$Share:
    java.lang.String ACTION -> ACTION
com.videogo.scan.main.Intents$WifiConnect -> com.videogo.scan.main.Intents$WifiConnect:
    java.lang.String ACTION -> ACTION
    java.lang.String SSID -> SSID
    java.lang.String TYPE -> TYPE
    java.lang.String PASSWORD -> PASSWORD
com.videogo.scan.main.PlanarYUVLuminanceSource -> com.videogo.scan.main.PlanarYUVLuminanceSource:
    byte[] yuvData -> yuvData
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    android.graphics.Bitmap renderCroppedGreyscaleBitmap() -> renderCroppedGreyscaleBitmap
    void reverseHorizontal(int,int) -> reverseHorizontal
com.videogo.scan.main.PreferencesActivity -> com.videogo.scan.main.PreferencesActivity:
    java.lang.String KEY_DECODE_1D -> KEY_DECODE_1D
    java.lang.String KEY_DECODE_QR -> KEY_DECODE_QR
    java.lang.String KEY_DECODE_DATA_MATRIX -> KEY_DECODE_DATA_MATRIX
    java.lang.String KEY_CUSTOM_PRODUCT_SEARCH -> KEY_CUSTOM_PRODUCT_SEARCH
    java.lang.String KEY_REVERSE_IMAGE -> KEY_REVERSE_IMAGE
    java.lang.String KEY_PLAY_BEEP -> KEY_PLAY_BEEP
    java.lang.String KEY_VIBRATE -> KEY_VIBRATE
    java.lang.String KEY_COPY_TO_CLIPBOARD -> KEY_COPY_TO_CLIPBOARD
    java.lang.String KEY_FRONT_LIGHT -> KEY_FRONT_LIGHT
    java.lang.String KEY_BULK_MODE -> KEY_BULK_MODE
    java.lang.String KEY_REMEMBER_DUPLICATES -> KEY_REMEMBER_DUPLICATES
    java.lang.String KEY_SUPPLEMENTAL -> KEY_SUPPLEMENTAL
    java.lang.String KEY_SEARCH_COUNTRY -> KEY_SEARCH_COUNTRY
    java.lang.String KEY_HELP_VERSION_SHOWN -> KEY_HELP_VERSION_SHOWN
    android.preference.CheckBoxPreference decode1D -> decode1D
    android.preference.CheckBoxPreference decodeQR -> decodeQR
    android.preference.CheckBoxPreference decodeDataMatrix -> decodeDataMatrix
    void onCreate(android.os.Bundle) -> onCreate
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void disableLastCheckedPref() -> disableLastCheckedPref
com.videogo.scan.main.ViewfinderResultPointCallback -> com.videogo.scan.main.ViewfinderResultPointCallback:
    com.videogo.scan.main.ViewfinderView viewfinderView -> viewfinderView
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.videogo.scan.main.ViewfinderView -> com.videogo.scan.main.ViewfinderView:
    int[] SCANNER_ALPHA -> SCANNER_ALPHA
    long ANIMATION_DELAY -> ANIMATION_DELAY
    int CURRENT_POINT_OPACITY -> CURRENT_POINT_OPACITY
    int MAX_RESULT_POINTS -> MAX_RESULT_POINTS
    int POINT_SIZE -> POINT_SIZE
    int OPAQUE -> OPAQUE
    boolean isFirst -> isFirst
    int slideTop -> slideTop
    int SPEEN_DISTANCE -> SPEEN_DISTANCE
    int screenRate -> screenRate
    int CORNER_WIDTH -> CORNER_WIDTH
    com.videogo.scan.camera.CameraManager cameraManager -> cameraManager
    android.graphics.Paint paint -> paint
    android.graphics.Bitmap resultBitmap -> resultBitmap
    int maskColor -> maskColor
    int resultColor -> resultColor
    int laserColor -> laserColor
    int resultPointColor -> resultPointColor
    java.util.Collection possibleResultPoints -> possibleResultPoints
    java.util.Collection lastPossibleResultPoints -> lastPossibleResultPoints
    void setCameraManager(com.videogo.scan.camera.CameraManager) -> setCameraManager
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawViewfinder() -> drawViewfinder
    void drawResultBitmap(android.graphics.Bitmap) -> drawResultBitmap
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> addPossibleResultPoint
com.videogo.stat.HikStat -> com.videogo.stat.HikStat:
    int UNABLE_KEY -> UNABLE_KEY
    java.lang.String TAG -> TAG
    java.util.Map gP -> gP
    java.util.Map gQ -> gQ
    java.util.Map gR -> gR
    void onEvent(int) -> onEvent
    void onNetEvent(int,int,long,long,java.lang.Object[]) -> onNetEvent
    void onCoreEvent(int,int,long,int) -> onCoreEvent
    void onCrashEvent(java.lang.String,java.lang.String,java.lang.String) -> onCrashEvent
    void onCreate(int) -> onCreate
    void onResume(android.content.Context) -> onResume
    void onPause(android.content.Context) -> onPause
    void onDestroy(int) -> onDestroy
    java.util.List getActionLog() -> getActionLog
    void setActionLogs(java.util.List) -> setActionLogs
    java.util.List getPageLog() -> getPageLog
    void setPageLogs(java.util.List) -> setPageLogs
    void clear() -> clear
com.videogo.stat.HikStatActionConstant -> com.videogo.stat.HikStatActionConstant:
    int ACTION_MESSAGE_EDIT -> ACTION_MESSAGE_EDIT
    int ACTION_MESSAGE_ALL_SELECT -> ACTION_MESSAGE_ALL_SELECT
    int ACTION_MESSAGE_BATCH_delete -> ACTION_MESSAGE_BATCH_delete
    int ACTION_FUNCTION_SET_NOTIFY_LOUD -> ACTION_FUNCTION_SET_NOTIFY_LOUD
    int ACTION_FUNCTION_SET_NOTIFY_SOFT -> ACTION_FUNCTION_SET_NOTIFY_SOFT
    int ACTION_MORE_QUIT -> ACTION_MORE_QUIT
    int ACTION_MYCAMERALLIST_click -> ACTION_MYCAMERALLIST_click
    int ACTION_PABCK_CLOUD_MORE_LOCAL -> ACTION_PABCK_CLOUD_MORE_LOCAL
    int ACTION_PBACK_CLOUD_DOWNLOAD -> ACTION_PBACK_CLOUD_DOWNLOAD
    int ACTION_PBACK_CLOUD_goPics -> ACTION_PBACK_CLOUD_goPics
    int ACTION_MAINTAB_QUIT -> ACTION_MAINTAB_QUIT
    int ACTION_MAINTAB_QUIT_confirm -> ACTION_MAINTAB_QUIT_confirm
    int ACTION_MAINTAB_QUIT_cancel -> ACTION_MAINTAB_QUIT_cancel
    int ACTION_SQUARE_COMMENT_praise -> ACTION_SQUARE_COMMENT_praise
    int ACTION_SQUARE_COMMENT_say -> ACTION_SQUARE_COMMENT_say
    int ACTION_SQUARE_SHARE_weixin -> ACTION_SQUARE_SHARE_weixin
    int ACTION_SQUARE_SHARE_friend -> ACTION_SQUARE_SHARE_friend
    int ACTION_DOWNLOAD_DEL_task -> ACTION_DOWNLOAD_DEL_task
    int ACTION_DOWNLOAD_DEL_task_confirem -> ACTION_DOWNLOAD_DEL_task_confirem
    int ACTION_DOWNLOAD_DEL_task_cancel -> ACTION_DOWNLOAD_DEL_task_cancel
    int ACTION_DOWNLOAD_retry -> ACTION_DOWNLOAD_retry
    int ACTION_LOGIN_wx -> ACTION_LOGIN_wx
    int ACTION_SETTING_qrcode -> ACTION_SETTING_qrcode
    int ACTION_SETTING_qrcodeShared -> ACTION_SETTING_qrcodeShared
    int ACTION_QRCODE_focus -> ACTION_QRCODE_focus
    int ACTION_MORE_mall -> ACTION_MORE_mall
    int ACTION_REAL_shareSquare -> ACTION_REAL_shareSquare
    int ACTION_REAL_myShare -> ACTION_REAL_myShare
    int ACTION_REAL_quitShare -> ACTION_REAL_quitShare
    int ACTION_DISCOVERY_click -> ACTION_DISCOVERY_click
    int ACTION_SHARE_SQURAE_comment -> ACTION_SHARE_SQURAE_comment
    int ACTION_SHARE_FRIEND_accept -> ACTION_SHARE_FRIEND_accept
    int ACTION_SHARE_FRIEND_reject -> ACTION_SHARE_FRIEND_reject
    int ACTION_VIDEO_soundOpen -> ACTION_VIDEO_soundOpen
    int ACTION_VIDEO_soundClose -> ACTION_VIDEO_soundClose
    int ACTION_SHARE_SQUARE_delete -> ACTION_SHARE_SQUARE_delete
    int ACTION_REAL_setting -> ACTION_REAL_setting
    int ACTION_REAL_playback -> ACTION_REAL_playback
    int ACTION_REAL_changeChannel -> ACTION_REAL_changeChannel
    int ACTION_REAL_mail -> ACTION_REAL_mail
    int ACTION_REAL_ptzCtrl -> ACTION_REAL_ptzCtrl
    int ACTION_REAL_thumbnail -> ACTION_REAL_thumbnail
    int ACTION_PBACK_thumbnail -> ACTION_PBACK_thumbnail
    int ACTION_PBACK_CLOUD_capture -> ACTION_PBACK_CLOUD_capture
    int ACTION_PBACK_CLOUD_record -> ACTION_PBACK_CLOUD_record
    int ACTION_PBACK_CLOUD_thumbnail -> ACTION_PBACK_CLOUD_thumbnail
    int ACTION_PBACK_CLOUD_datselect -> ACTION_PBACK_CLOUD_datselect
    int ACTION_PBACK_CLOUD_replay -> ACTION_PBACK_CLOUD_replay
    int ACTION_PBACK_CLOUD_nextrecord -> ACTION_PBACK_CLOUD_nextrecord
    int ACTION_PBACK_CLOUD_play -> ACTION_PBACK_CLOUD_play
    int ACTION_PBACK_CLOUD_pause -> ACTION_PBACK_CLOUD_pause
    int ACTION_DISCOVERY_SHARE_contact -> ACTION_DISCOVERY_SHARE_contact
    int ACTION_DISCOVERY_SHARE_moment -> ACTION_DISCOVERY_SHARE_moment
    int ACTION_DISCOVERY_SHARE_sina -> ACTION_DISCOVERY_SHARE_sina
    int ACTION_DISCOVERY_SHARE_tencent -> ACTION_DISCOVERY_SHARE_tencent
    int ACTION_MYCAMERALIST_add -> ACTION_MYCAMERALIST_add
    int ACTION_MYCAMERALIST_setting -> ACTION_MYCAMERALIST_setting
    int ACTION_MYCAMERALIST_play -> ACTION_MYCAMERALIST_play
    int ACTION_MYCAMERALIST_moreinfo -> ACTION_MYCAMERALIST_moreinfo
    int ACTION_MOREINFO_defencemode -> ACTION_MOREINFO_defencemode
    int ACTION_MOREINFO_linkclick -> ACTION_MOREINFO_linkclick
    int ACTION_MOREINFO_setting -> ACTION_MOREINFO_setting
    int ACTION_LOGIN_back -> ACTION_LOGIN_back
    int ACTION_LOGIN_jd -> ACTION_LOGIN_jd
    int ACTION_SETTING_webcloud -> ACTION_SETTING_webcloud
    int ACTION_ADDDEVICE_opencloud -> ACTION_ADDDEVICE_opencloud
    int ACTION_ADDDEVICE_closecloud -> ACTION_ADDDEVICE_closecloud
    int ABOUT_checkVersion -> ABOUT_checkVersion
    int ABOUT_gotoshipin7 -> ABOUT_gotoshipin7
    int ABOUT_servIntroduce -> ABOUT_servIntroduce
    int ABOUT_telephone -> ABOUT_telephone
    int ABOUT_termOfService -> ABOUT_termOfService
    int AM_modPsd -> AM_modPsd
    int AM_modPsd_confirm -> AM_modPsd_confirm
    int CL_failRetry -> CL_failRetry
    int CL_refresh -> CL_refresh
    int DD_closeDefence -> DD_closeDefence
    int DD_closeEncode -> DD_closeEncode
    int DD_closeOfflineNotice -> DD_closeOfflineNotice
    int DD_delete -> DD_delete
    int DD_deviceUpdate -> DD_deviceUpdate
    int DD_modifyName -> DD_modifyName
    int DD_muteMode -> DD_muteMode
    int DD_openDefence -> DD_openDefence
    int DD_openEncode -> DD_openEncode
    int DD_openOfflineNotice -> DD_openOfflineNotice
    int DD_remindMode -> DD_remindMode
    int DD_soundMode -> DD_soundMode
    int DD_storageInit -> DD_storageInit
    int DD_wifiConfig -> DD_wifiConfig
    int DM_A1CloseDefence -> DM_A1CloseDefence
    int DM_A1HomeMode -> DM_A1HomeMode
    int DM_A1OutMode -> DM_A1OutMode
    int EM_msgReadAll -> EM_msgReadAll
    int EM_picClick -> EM_picClick
    int EM_pullRefresh -> EM_pullRefresh
    int EM_failRefresh -> EM_failRefresh
    int EM_realPlay -> EM_realPlay
    int EM_remotePlay -> EM_remotePlay
    int EM_delete -> EM_delete
    int FS_close3gRemind -> FS_close3gRemind
    int FS_closeDownload -> FS_closeDownload
    int FS_open3gRemind -> FS_open3gRemind
    int FS_openDownload -> FS_openDownload
    int GD_page5_toDemo -> GD_page5_toDemo
    int GD_page5_toLogin -> GD_page5_toLogin
    int GD_page5_toReg -> GD_page5_toReg
    int IMG_picClick -> IMG_picClick
    int IMG_video_closeAudio -> IMG_video_closeAudio
    int IMG_video_del -> IMG_video_del
    int IMG_video_openAudio -> IMG_video_openAudio
    int IMG_video_pause -> IMG_video_pause
    int IMG_video_play1 -> IMG_video_play1
    int LM_delete -> LM_delete
    int LM_voicemail_play -> LM_voicemail_play
    int LMD_voicemail_delete -> LMD_voicemail_delete
    int LMD_voicemail_reply -> LMD_voicemail_reply
    int LOGIN_forgetPsd -> LOGIN_forgetPsd
    int LOGIN_login -> LOGIN_login
    int LOGIN_reg -> LOGIN_reg
    int MORE_about -> MORE_about
    int MORE_accMgt -> MORE_accMgt
    int MORE_flowMgt -> MORE_flowMgt
    int MORE_funSet -> MORE_funSet
    int MORE_help -> MORE_help
    int MORE_logout -> MORE_logout
    int MORE_logout_cancel -> MORE_logout_cancel
    int MORE_logout_confirm -> MORE_logout_confirm
    int MORE_suggest -> MORE_suggest
    int MORE_suggestCommit -> MORE_suggestCommit
    int MORE_weiboBind -> MORE_weiboBind
    int ACTION_MORE_imageManage -> ACTION_MORE_imageManage
    int MT_message -> MT_message
    int MT_more -> MT_more
    int RP_highQuality -> RP_highQuality
    int RP_lowQuality -> RP_lowQuality
    int RP_midQuality -> RP_midQuality
    int RP_openTalk -> RP_openTalk
    int RP_exceptionTalk -> RP_exceptionTalk
    int RP_play2 -> RP_play2
    int RP_snap -> RP_snap
    int RP_startRec -> RP_startRec
    int RP_stopRec -> RP_stopRec
    int RRP_pause -> RRP_pause
    int RRP_play1 -> RRP_play1
    int RRP_seekPlay -> RRP_seekPlay
    int RRP_screenRotate -> RRP_screenRotate
    int RRP_snap -> RRP_snap
    int RRP_startRec -> RRP_startRec
    int RRP_stopRec -> RRP_stopRec
    int SP7_notice -> SP7_notice
    int WB_tencent -> WB_tencent
    int WB_xinliang -> WB_xinliang
    int WIFI_connect -> WIFI_connect
    int WIFI_refresh -> WIFI_refresh
    int ACTION_Login_password_show -> ACTION_Login_password_show
    int ACTION_Login_verifyCode_get_again -> ACTION_Login_verifyCode_get_again
    int ACTION_Share_weixin -> ACTION_Share_weixin
    int ACTION_Share_weixin_group -> ACTION_Share_weixin_group
    int ACTION_Share_passord_set -> ACTION_Share_passord_set
    int ACTION_Share_create_next -> ACTION_Share_create_next
    int ACTION_Share_modify_next -> ACTION_Share_modify_next
    int ACTION_Share_stop_share -> ACTION_Share_stop_share
    int ACTION_Share_share_back -> ACTION_Share_share_back
    int ACTION_EncryptPassword_inputWrong -> ACTION_EncryptPassword_inputWrong
    int ACTION_EncryptPassword_change -> ACTION_EncryptPassword_change
    int ACTION_Wifi_Retry_none -> ACTION_Wifi_Retry_none
    int ACTION_Wifi_Retry_wifi -> ACTION_Wifi_Retry_wifi
    int ACTION_Wifi_Retry_line -> ACTION_Wifi_Retry_line
    int ACTION_Wifi_Retry_plat -> ACTION_Wifi_Retry_plat
    int ACTION_Wifi_Line_connect -> ACTION_Wifi_Line_connect
com.videogo.stat.HikStatConstant -> com.videogo.stat.HikStatConstant:
    int HIK_STAT_CAS_INITLIB -> HIK_STAT_CAS_INITLIB
    int HIK_STAT_CAS_DEVDEFENCE -> HIK_STAT_CAS_DEVDEFENCE
    int HIK_STAT_CAS_GETLASTERROR -> HIK_STAT_CAS_GETLASTERROR
    int HIK_STAT_CAS_GETLASTDETAILERROR -> HIK_STAT_CAS_GETLASTDETAILERROR
    int HIK_STAT_CAS_DEVUPGRADE -> HIK_STAT_CAS_DEVUPGRADE
    int HIK_STAT_CAS_FORMATDISK -> HIK_STAT_CAS_FORMATDISK
    int HIK_STAT_CAS_GETDEVSTORAGESTATUS -> HIK_STAT_CAS_GETDEVSTORAGESTATUS
    int HIK_STAT_CAS_SETALARMSOUND -> HIK_STAT_CAS_SETALARMSOUND
    int HIK_STAT_CAS_FINILIB -> HIK_STAT_CAS_FINILIB
    int HIK_STAT_CAS_CREATESESSION -> HIK_STAT_CAS_CREATESESSION
    int HIK_STAT_CAS_DESTROYSESSION -> HIK_STAT_CAS_DESTROYSESSION
    int HIK_STAT_CAS_START -> HIK_STAT_CAS_START
    int HIK_STAT_CAS_STOP -> HIK_STAT_CAS_STOP
    int HIK_STAT_CAS_VOICETALKSTART -> HIK_STAT_CAS_VOICETALKSTART
    int HIK_STAT_CAS_VOICETALKSTOP -> HIK_STAT_CAS_VOICETALKSTOP
    int HIK_STAT_CAS_VOICETALKINPUTDATAEX -> HIK_STAT_CAS_VOICETALKINPUTDATAEX
    int HIK_STAT_CAS_QUERYGLINKLIGHT -> HIK_STAT_CAS_QUERYGLINKLIGHT
    int HIK_STAT_CAS_SETGLINKLIGHT -> HIK_STAT_CAS_SETGLINKLIGHT
    int HIK_STAT_CAS_GETDEVOPERATIONCODEEX -> HIK_STAT_CAS_GETDEVOPERATIONCODEEX
    int HIK_STAT_CAS_QUERYBASICINFO -> HIK_STAT_CAS_QUERYBASICINFO
    int HIK_STAT_CAS_PLAYBACKSTART -> HIK_STAT_CAS_PLAYBACKSTART
    int HIK_STAT_CAS_CLOUDREPLAYSTART -> HIK_STAT_CAS_CLOUDREPLAYSTART
    int HIK_STAT_CAS_PLAYBACKSTOP -> HIK_STAT_CAS_PLAYBACKSTOP
    int HIK_STAT_CAS_PLAYBACKPAUSE -> HIK_STAT_CAS_PLAYBACKPAUSE
    int HIK_STAT_CAS_PLAYBACKRESUME -> HIK_STAT_CAS_PLAYBACKRESUME
    int HIK_STAT_CAS_PLAYBACKCHANGERATE -> HIK_STAT_CAS_PLAYBACKCHANGERATE
    int HIK_STAT_CAS_SERCHRECORDFILEEX -> HIK_STAT_CAS_SERCHRECORDFILEEX
    int HIK_STAT_CAS_CLOUDUPLOADSTART -> HIK_STAT_CAS_CLOUDUPLOADSTART
    int HIK_STAT_CAS_VOICETALKINPUTDATA -> HIK_STAT_CAS_VOICETALKINPUTDATA
    int HIK_STAT_CAS_CLOUDUPLOADSTOP -> HIK_STAT_CAS_CLOUDUPLOADSTOP
    int HIK_STAT_CAS_CLOUDDOWNLOADSTART -> HIK_STAT_CAS_CLOUDDOWNLOADSTART
    int HIK_STAT_CAS_CLOUDINPUTDATA -> HIK_STAT_CAS_CLOUDINPUTDATA
    int HIK_STAT_CAS_GETDEVFTPINFO -> HIK_STAT_CAS_GETDEVFTPINFO
    int HIK_STAT_RTSP_INITLIB -> HIK_STAT_RTSP_INITLIB
    int HIK_STAT_RTSP_FINILIB -> HIK_STAT_RTSP_FINILIB
    int HIK_STAT_RTSP_CREATEENGINE -> HIK_STAT_RTSP_CREATEENGINE
    int HIK_STAT_RTSP_RELEASEENGINE -> HIK_STAT_RTSP_RELEASEENGINE
    int HIK_STAT_RTSP_STARTRTSPPROC -> HIK_STAT_RTSP_STARTRTSPPROC
    int HIK_STAT_RTSP_STOPRTSPPROC -> HIK_STAT_RTSP_STOPRTSPPROC
    int HIK_STAT_RTSP_PLAYBACKBYTIME -> HIK_STAT_RTSP_PLAYBACKBYTIME
    int HIK_STAT_RTSP_SETPLAYBACKPOS -> HIK_STAT_RTSP_SETPLAYBACKPOS
    int HIK_STAT_RTSP_PLAYBACKFAST -> HIK_STAT_RTSP_PLAYBACKFAST
    int HIK_STAT_RTSP_PLAYBACKSLOW -> HIK_STAT_RTSP_PLAYBACKSLOW
    int HIK_STAT_RTSP_PLAYBACKNORMAL -> HIK_STAT_RTSP_PLAYBACKNORMAL
    int HIK_STAT_RTSP_PAUSE -> HIK_STAT_RTSP_PAUSE
    int HIK_STAT_RTSP_RESUME -> HIK_STAT_RTSP_RESUME
    int HIK_STAT_RTSP_GETLASTERROR -> HIK_STAT_RTSP_GETLASTERROR
    int HIK_STAT_RTSP_CLIENTVERSION -> HIK_STAT_RTSP_CLIENTVERSION
    int HIK_STAT_TTS_INITLIB -> HIK_STAT_TTS_INITLIB
    int HIK_STAT_TTS_FINILIB -> HIK_STAT_TTS_FINILIB
    int HIK_STAT_TTS_CREATETALK -> HIK_STAT_TTS_CREATETALK
    int HIK_STAT_TTS_DESTROYTALK -> HIK_STAT_TTS_DESTROYTALK
    int HIK_STAT_TTS_STARTTALK -> HIK_STAT_TTS_STARTTALK
    int HIK_STAT_TTS_STOPTALK -> HIK_STAT_TTS_STOPTALK
    int HIK_STAT_TTS_SETMESSAGECALLBACK -> HIK_STAT_TTS_SETMESSAGECALLBACK
    int HIK_STAT_TTS_SETDATACALLBACK -> HIK_STAT_TTS_SETDATACALLBACK
    int HIK_STAT_CORE_LOGIN -> HIK_STAT_CORE_LOGIN
    int HIK_STAT_CORE_REALPLAY -> HIK_STAT_CORE_REALPLAY
    int HIK_STAT_CORE_PLAYBACK -> HIK_STAT_CORE_PLAYBACK
    int HIK_STAT_CORE_ADDDEVICE -> HIK_STAT_CORE_ADDDEVICE
    int HIK_STAT_CORE_GET_SINGLE_DEVICE_PICTURE -> HIK_STAT_CORE_GET_SINGLE_DEVICE_PICTURE
    int HIK_STAT_CORE_VIDEO_REQUEST_INFO_REAL_ERROR_REPORT -> HIK_STAT_CORE_VIDEO_REQUEST_INFO_REAL_ERROR_REPORT
    int HIK_STAT_CORE_VIDEO_REQUEST_INFO_PLAYBACK_ERROR_REPORT -> HIK_STAT_CORE_VIDEO_REQUEST_INFO_PLAYBACK_ERROR_REPORT
    int HIK_STAT_CORE_VIDEO_REQUEST_INFO_TALK_ERROR_REPORT -> HIK_STAT_CORE_VIDEO_REQUEST_INFO_TALK_ERROR_REPORT
    int HIK_STAT_CORE_VIDEO_REQUEST_INFO_DEMO_REAL_ERROR_REPORT -> HIK_STAT_CORE_VIDEO_REQUEST_INFO_DEMO_REAL_ERROR_REPORT
    int HIK_STAT_CORE_BEGIN -> HIK_STAT_CORE_BEGIN
    int HIK_STAT_CORE_END -> HIK_STAT_CORE_END
    int HIK_STAT_XMPP_REGISTER_RESULT -> HIK_STAT_XMPP_REGISTER_RESULT
    int HIK_STAT_XMPP_CONNECT_RESULT -> HIK_STAT_XMPP_CONNECT_RESULT
    int HIK_STAT_XMPP_MSG_RECIEVED -> HIK_STAT_XMPP_MSG_RECIEVED
    int HIK_STAT_XMPP_STATUS_FAILED -> HIK_STAT_XMPP_STATUS_FAILED
    int HIK_STAT_XMPP_STATUS_SUCCESSED -> HIK_STAT_XMPP_STATUS_SUCCESSED
com.videogo.stat.HikStatNetConstant -> com.videogo.stat.HikStatNetConstant:
    int HIK_STAT_NET_USER_VERIFY -> HIK_STAT_NET_USER_VERIFY
    int HIK_STAT_NET_USER_REGIST -> HIK_STAT_NET_USER_REGIST
    int HIK_STAT_NET_USER_SMS_CHECK -> HIK_STAT_NET_USER_SMS_CHECK
    int HIK_STAT_NET_USER_LOGIN -> HIK_STAT_NET_USER_LOGIN
    int HIK_STAT_NET_USER_NOTICES_GET -> HIK_STAT_NET_USER_NOTICES_GET
    int HIK_STAT_NET_USER_PASSWORD_RESET -> HIK_STAT_NET_USER_PASSWORD_RESET
    int HIK_STAT_NET_USER_PASSWORD_MODIFY -> HIK_STAT_NET_USER_PASSWORD_MODIFY
    int HIK_STAT_NET_USER_LOGOUT -> HIK_STAT_NET_USER_LOGOUT
    int HIK_STAT_NET_USER_GET -> HIK_STAT_NET_USER_GET
    int HIK_STAT_NET_USER_UPDATE -> HIK_STAT_NET_USER_UPDATE
    int HIK_STAT_NET_USER_AVATAR_UPLOAD -> HIK_STAT_NET_USER_AVATAR_UPLOAD
    int HIK_STAT_NET_USER_GET_TOKENS -> HIK_STAT_NET_USER_GET_TOKENS
    int HIK_STAT_NET_DEV_SEARCH -> HIK_STAT_NET_DEV_SEARCH
    int HIK_STAT_NET_DEV_GET -> HIK_STAT_NET_DEV_GET
    int HIK_STAT_NET_DEV_LIST -> HIK_STAT_NET_DEV_LIST
    int HIK_STAT_NET_DEV_GET_STATUS -> HIK_STAT_NET_DEV_GET_STATUS
    int HIK_STAT_NET_DEV_DETECTORS -> HIK_STAT_NET_DEV_DETECTORS
    int HIK_STAT_NET_DEV_CAMERAS_ANALOG -> HIK_STAT_NET_DEV_CAMERAS_ANALOG
    int HIK_STAT_NET_DEV_CAMERAS_DIGITAL -> HIK_STAT_NET_DEV_CAMERAS_DIGITAL
    int HIK_STAT_NET_DEV_UPDATE_NAME -> HIK_STAT_NET_DEV_UPDATE_NAME
    int HIK_STAT_NET_DEV_UPDATE_ENCRYPT -> HIK_STAT_NET_DEV_UPDATE_ENCRYPT
    int HIK_STAT_NET_DEV_ADD -> HIK_STAT_NET_DEV_ADD
    int HIK_STAT_NET_DEV_DELETE -> HIK_STAT_NET_DEV_DELETE
    int HIK_STAT_NET_DEV_UPGRADE_INFO_GET -> HIK_STAT_NET_DEV_UPGRADE_INFO_GET
    int HIK_STAT_NET_DEV_NOTIFY_SWITCH -> HIK_STAT_NET_DEV_NOTIFY_SWITCH
    int HIK_STAT_NET_DEV_DEFENCE_PLAN -> HIK_STAT_NET_DEV_DEFENCE_PLAN
    int HIK_STAT_NET_DEV_DETECTOR_UPDATE -> HIK_STAT_NET_DEV_DETECTOR_UPDATE
    int HIK_STAT_NET_CAM_LIST -> HIK_STAT_NET_CAM_LIST
    int HIK_STAT_NET_CAM_SET_VIDEO_LEVEL -> HIK_STAT_NET_CAM_SET_VIDEO_LEVEL
    int HIK_STAT_NET_CAM_UPLOAD_PIC -> HIK_STAT_NET_CAM_UPLOAD_PIC
    int HIK_STAT_NET_CAM_UPDATE_NAME -> HIK_STAT_NET_CAM_UPDATE_NAME
    int HIK_STAT_NET_MSG_UNREAD_COUNT -> HIK_STAT_NET_MSG_UNREAD_COUNT
    int HIK_STAT_NET_MSG_ALARMS_GET -> HIK_STAT_NET_MSG_ALARMS_GET
    int HIK_STAT_NET_MSG_ALARM_READ -> HIK_STAT_NET_MSG_ALARM_READ
    int HIK_STAT_NET_MSG_ALARM_READ_PUSH -> HIK_STAT_NET_MSG_ALARM_READ_PUSH
    int HIK_STAT_NET_MSG_ALARM_READ_ALL -> HIK_STAT_NET_MSG_ALARM_READ_ALL
    int HIK_STAT_NET_MSG_ALARMS_DELETE -> HIK_STAT_NET_MSG_ALARMS_DELETE
    int HIK_STAT_NET_MSG_ALARM_DELETE -> HIK_STAT_NET_MSG_ALARM_DELETE
    int HIK_STAT_NET_MSG_ALARMS_EMPTY -> HIK_STAT_NET_MSG_ALARMS_EMPTY
    int HIK_STAT_NET_MSG_LEAVES_GET -> HIK_STAT_NET_MSG_LEAVES_GET
    int HIK_STAT_NET_MSG_LEAVE_GET -> HIK_STAT_NET_MSG_LEAVE_GET
    int HIK_STAT_NET_MSG_LEAVE_READ -> HIK_STAT_NET_MSG_LEAVE_READ
    int HIK_STAT_NET_MSG -> HIK_STAT_NET_MSG
    int HIK_STAT_NET_MSG_LEAVE_SAVE -> HIK_STAT_NET_MSG_LEAVE_SAVE
    int HIK_STAT_NET_MSG_LEAVE_DELETE -> HIK_STAT_NET_MSG_LEAVE_DELETE
    int HIK_STAT_NET_MSG_BULLENTINS_GET -> HIK_STAT_NET_MSG_BULLENTINS_GET
    int HIK_STAT_NET_MSG_BULLENTIN_READ -> HIK_STAT_NET_MSG_BULLENTIN_READ
    int HIK_STAT_NET_MSG_ALARMS_GETPAGE -> HIK_STAT_NET_MSG_ALARMS_GETPAGE
    int HIK_STAT_NET_MSG_SHAREDFILE_NOTIFY -> HIK_STAT_NET_MSG_SHAREDFILE_NOTIFY
    int HIK_STAT_NET_MSG_LEAVES_GETBYSERIAL -> HIK_STAT_NET_MSG_LEAVES_GETBYSERIAL
    int HIK_STAT_NET_SERVER_INFO_GET -> HIK_STAT_NET_SERVER_INFO_GET
    int HIK_STAT_NET_SERVER_INFO_GETBYTYPE -> HIK_STAT_NET_SERVER_INFO_GETBYTYPE
    int HIK_STAT_NET_SOCIAL_ALLSHARE_GET -> HIK_STAT_NET_SOCIAL_ALLSHARE_GET
    int HIK_STAT_NET_SOCIAL_SHARE_GET -> HIK_STAT_NET_SOCIAL_SHARE_GET
    int HIK_STAT_NET_SOCIAL_HISTORY_GET -> HIK_STAT_NET_SOCIAL_HISTORY_GET
    int HIK_STAT_NET_SOCIAL_SHARE_GREATE -> HIK_STAT_NET_SOCIAL_SHARE_GREATE
    int HIK_STAT_NET_SOCIAL_SHARE_MODIFY -> HIK_STAT_NET_SOCIAL_SHARE_MODIFY
    int HIK_STAT_NET_SOCIAL_SHARE_DELETE -> HIK_STAT_NET_SOCIAL_SHARE_DELETE
    int HIK_STAT_NET_SOCIAL_OAUTH_BIND -> HIK_STAT_NET_SOCIAL_OAUTH_BIND
    int HIK_STAT_NET_SOCIAL_CAMERA_GET_ALL_SHARE -> HIK_STAT_NET_SOCIAL_CAMERA_GET_ALL_SHARE
    int HIK_STAT_NET_SOCIAL_CAMERA_SQUARE_SHARE -> HIK_STAT_NET_SOCIAL_CAMERA_SQUARE_SHARE
    int HIK_STAT_NET_SOCIAL_SQUARE_DELETE -> HIK_STAT_NET_SOCIAL_SQUARE_DELETE
    int HIK_STAT_NET_SOCIAL_ALL_INVITE -> HIK_STAT_NET_SOCIAL_ALL_INVITE
    int HIK_STAT_NET_SOCIAL_REJECT_INVITE -> HIK_STAT_NET_SOCIAL_REJECT_INVITE
    int HIK_STAT_NET_SOCIAL_ACCEPT_INVITE -> HIK_STAT_NET_SOCIAL_ACCEPT_INVITE
    int HIK_STAT_NET_SOCIAL_QUIT_INVITE -> HIK_STAT_NET_SOCIAL_QUIT_INVITE
    int HIK_STAT_NET_SOCIAL_SQUARE_SHARE -> HIK_STAT_NET_SOCIAL_SQUARE_SHARE
    int HIK_STAT_NET_SOCIAL_SQUARE_UPDATE -> HIK_STAT_NET_SOCIAL_SQUARE_UPDATE
    int HIK_STAT_NET_SOCIAL_SQUARE_COMMENT_LIST -> HIK_STAT_NET_SOCIAL_SQUARE_COMMENT_LIST
    int HIK_STAT_NET_SOCIAL_SQUARE_ADDLIKE -> HIK_STAT_NET_SOCIAL_SQUARE_ADDLIKE
    int HIK_STAT_NET_SOCIAL_SQUARE_COMMENT_SAVE -> HIK_STAT_NET_SOCIAL_SQUARE_COMMENT_SAVE
    int HIK_STAT_NET_CLOUD_FILES_GET -> HIK_STAT_NET_CLOUD_FILES_GET
    int HIK_STAT_NET_CLOUD_DEVICE_ENABLE -> HIK_STAT_NET_CLOUD_DEVICE_ENABLE
    int HIK_STAT_NET_CLOUD_STREAM_SERVER_GET -> HIK_STAT_NET_CLOUD_STREAM_SERVER_GET
    int HIK_STAT_NET_CLOUD_CLOUDDEVICE_GET -> HIK_STAT_NET_CLOUD_CLOUDDEVICE_GET
    int HIK_STAT_NET_CLOUD_HASDATETIME_SEARCH -> HIK_STAT_NET_CLOUD_HASDATETIME_SEARCH
    int HIK_STAT_NET_CLOUD_ONEDAY_SEARCH -> HIK_STAT_NET_CLOUD_ONEDAY_SEARCH
    int HIK_STAT_NET_CLOUD_CLOUDFILES_FIND -> HIK_STAT_NET_CLOUD_CLOUDFILES_FIND
    int HIK_STAT_NET_CLOUD_STREAMSERVER_GETALL -> HIK_STAT_NET_CLOUD_STREAMSERVER_GETALL
    int HIK_STAT_NET_OTHER_SMS_CODE_REGIST -> HIK_STAT_NET_OTHER_SMS_CODE_REGIST
    int HIK_STAT_NET_OTHER_SMS_CODE_RESET -> HIK_STAT_NET_OTHER_SMS_CODE_RESET
    int HIK_STAT_NET_OTHER_SMS_CODE_BIND -> HIK_STAT_NET_OTHER_SMS_CODE_BIND
    int HIK_STAT_NET_OTHER_SMS_CODE_DEVICEOP -> HIK_STAT_NET_OTHER_SMS_CODE_DEVICEOP
    int HIK_STAT_NET_OTHER_CHECK_CODE -> HIK_STAT_NET_OTHER_CHECK_CODE
    int HIK_STAT_NET_OTHER_DEMOS_GET -> HIK_STAT_NET_OTHER_DEMOS_GET
    int HIK_STAT_NET_OTHER_VERSION_CHECK -> HIK_STAT_NET_OTHER_VERSION_CHECK
    int HIK_STAT_NET_OTHER_DATA_REPORT -> HIK_STAT_NET_OTHER_DATA_REPORT
    int HIK_STAT_NET_OTHER_DATA_CLIENT_REPORT -> HIK_STAT_NET_OTHER_DATA_CLIENT_REPORT
    int HIK_STAT_NET_OTHER -> HIK_STAT_NET_OTHER
    int HIK_STAT_NET_ANALYZE_IMAGE_LIST -> HIK_STAT_NET_ANALYZE_IMAGE_LIST
    int HIK_STAT_NET_ANALYZE_IMAGE_UPLOAD -> HIK_STAT_NET_ANALYZE_IMAGE_UPLOAD
    int HIK_STAT_NET_ANALYZE_TASK_COMMIT -> HIK_STAT_NET_ANALYZE_TASK_COMMIT
com.videogo.stat.HikStatPageConstant -> com.videogo.stat.HikStatPageConstant:
    int HIK_STAT_PAGE_MORE_ABOUT -> HIK_STAT_PAGE_MORE_ABOUT
    int HIK_STAT_PAGE_MORE_IMG_MGT -> HIK_STAT_PAGE_MORE_IMG_MGT
    int HIK_STAT_PAGE_MORE_DEMO -> HIK_STAT_PAGE_MORE_DEMO
    int HIK_STAT_PAGE_MORE_ACC_MGT -> HIK_STAT_PAGE_MORE_ACC_MGT
    int HIK_STAT_PAGE_MORE_SET -> HIK_STAT_PAGE_MORE_SET
    int HIK_STAT_PAGE_MORE_WIFI_CONFIG -> HIK_STAT_PAGE_MORE_WIFI_CONFIG
    int HIK_STAT_PAGE_MORE_FLOW -> HIK_STAT_PAGE_MORE_FLOW
    int HIK_STAT_PAGE_MORE_HELP -> HIK_STAT_PAGE_MORE_HELP
    int HIK_STAT_PAGE_MORE_SUGG -> HIK_STAT_PAGE_MORE_SUGG
    int HIK_STAT_PAGE_MORE_NET_WARN -> HIK_STAT_PAGE_MORE_NET_WARN
    int HIK_STAT_PAGE_MORE_SERVICE -> HIK_STAT_PAGE_MORE_SERVICE
    int HIK_STAT_PAGE_MORE_PWD_SEC -> HIK_STAT_PAGE_MORE_PWD_SEC
    int HIK_STAT_PAGE_DEV_DETAIL -> HIK_STAT_PAGE_DEV_DETAIL
    int HIK_STAT_PAGE_DEV_DEFENCE_MODE -> HIK_STAT_PAGE_DEV_DEFENCE_MODE
    int HIK_STAT_PAGE_DEV_DEFENCE_WARN_TONE -> HIK_STAT_PAGE_DEV_DEFENCE_WARN_TONE
    int HIK_STAT_PAGE_DEV_UP_ONE -> HIK_STAT_PAGE_DEV_UP_ONE
    int HIK_STAT_PAGE_DEV_SERIES_ADD -> HIK_STAT_PAGE_DEV_SERIES_ADD
    int HIK_STAT_PAGE_DEV_ALARM_TIME_OPEN -> HIK_STAT_PAGE_DEV_ALARM_TIME_OPEN
    int HIK_STAT_PAGE_DEV_ALARM_TIME_SET -> HIK_STAT_PAGE_DEV_ALARM_TIME_SET
    int HIK_STAT_PAGE_DEV_ALARM_DATE_SET -> HIK_STAT_PAGE_DEV_ALARM_DATE_SET
    int HIK_STAT_PAGE_DEV_WIFI_LIST -> HIK_STAT_PAGE_DEV_WIFI_LIST
    int HIK_STAT_PAGE_DEV_OTHER_WIFI -> HIK_STAT_PAGE_DEV_OTHER_WIFI
    int HIK_STAT_PAGE_DEV_ADD_CAMERA_GUIDE -> HIK_STAT_PAGE_DEV_ADD_CAMERA_GUIDE
    int HIK_STAT_PAGE_DEV_MODIFY_NAME -> HIK_STAT_PAGE_DEV_MODIFY_NAME
    int HIK_STAT_PAGE_DEV_INPUT_PWD -> HIK_STAT_PAGE_DEV_INPUT_PWD
    int HIK_STAT_PAGE_DEV_STORAGE -> HIK_STAT_PAGE_DEV_STORAGE
    int HIK_STAT_PAGE_DEV_NETWORK_ERROR -> HIK_STAT_PAGE_DEV_NETWORK_ERROR
    int HIK_STAT_PAGE_DEV_ENCRYPT_PWD -> HIK_STAT_PAGE_DEV_ENCRYPT_PWD
    int HIK_STAT_PAGE_SHIPIN7_LOCAL_RECORD -> HIK_STAT_PAGE_SHIPIN7_LOCAL_RECORD
    int HIK_STAT_PAGE_SHIPIN7_REALPLAYER -> HIK_STAT_PAGE_SHIPIN7_REALPLAYER
    int HIK_STAT_PAGE_SHIPIN7_REMOTE_PLAY -> HIK_STAT_PAGE_SHIPIN7_REMOTE_PLAY
    int HIK_STAT_PAGE_LOGIN -> HIK_STAT_PAGE_LOGIN
    int HIK_STAT_PAGE_LOGIN_AGAIN -> HIK_STAT_PAGE_LOGIN_AGAIN
    int HIK_STAT_PAGE_REG_STEP_ONE -> HIK_STAT_PAGE_REG_STEP_ONE
    int HIK_STAT_PAGE_REG_STEP_TWO -> HIK_STAT_PAGE_REG_STEP_TWO
    int HIK_STAT_PAGE_REG_SETP_THREE -> HIK_STAT_PAGE_REG_SETP_THREE
    int HIK_STAT_PAGE_REG_SELECT_USERTYPE -> HIK_STAT_PAGE_REG_SELECT_USERTYPE
    int HIK_STAT_PAGE_RET_PWD_STEP_ONE -> HIK_STAT_PAGE_RET_PWD_STEP_ONE
    int HIK_STAT_PAGE_RET_PWD_STEP_TWO -> HIK_STAT_PAGE_RET_PWD_STEP_TWO
    int HIK_STAT_PAGE_RET_PWD_STEP_THREE -> HIK_STAT_PAGE_RET_PWD_STEP_THREE
    int HIK_STAT_PAGE_REG_DEAL -> HIK_STAT_PAGE_REG_DEAL
    int HIK_STAT_PAGE_NEWREG_STEP_ONE -> HIK_STAT_PAGE_NEWREG_STEP_ONE
    int HIK_STAT_PAGE_NEWREG_STEP_TWO -> HIK_STAT_PAGE_NEWREG_STEP_TWO
    int HIK_STAT_PAGE_NEWREG_STEP_THREE -> HIK_STAT_PAGE_NEWREG_STEP_THREE
    int HIK_STAT_PAGE_NEWRET_PWD_STEP_ONE -> HIK_STAT_PAGE_NEWRET_PWD_STEP_ONE
    int HIK_STAT_PAGE_NEWRET_PWD_STEP_TWO -> HIK_STAT_PAGE_NEWRET_PWD_STEP_TWO
    int HIK_STAT_PAGE_NEWRET_PWD_STEP_THREE -> HIK_STAT_PAGE_NEWRET_PWD_STEP_THREE
    int HIK_STAT_PAGE_SERVICE_SWITCH -> HIK_STAT_PAGE_SERVICE_SWITCH
    int HIK_STAT_PAGE_SHARE_MY_SHARE_INFO -> HIK_STAT_PAGE_SHARE_MY_SHARE_INFO
    int HIK_STAT_PAGE_SHARE_PASSWORD_SET -> HIK_STAT_PAGE_SHARE_PASSWORD_SET
    int HIK_STAT_PAGE_SHARE_SETTING -> HIK_STAT_PAGE_SHARE_SETTING
    int HIK_STAT_PAGE_SHARE_ACHIEVE -> HIK_STAT_PAGE_SHARE_ACHIEVE
    int HIK_STAT_PAGE_MODIFY_SAFEMODE_OLD -> HIK_STAT_PAGE_MODIFY_SAFEMODE_OLD
    int HIK_STAT_PAGE_MODIFY_SAFEMODE_NEW -> HIK_STAT_PAGE_MODIFY_SAFEMODE_NEW
    int HIK_STAT_PAGE_AUTO_WIFI_NET_CONFIG -> HIK_STAT_PAGE_AUTO_WIFI_NET_CONFIG
    int HIK_STAT_PAGE_AUTO_WIFI_DEVICE_CONNECT -> HIK_STAT_PAGE_AUTO_WIFI_DEVICE_CONNECT
com.videogo.stat.MobileStatInfo -> com.videogo.stat.MobileStatInfo:
    java.lang.String gS -> gS
    java.lang.String bM -> bM
    int gT -> gT
    java.lang.String gU -> gU
    java.lang.String gV -> gV
    java.lang.String gW -> gW
    com.videogo.stat.log.Detail gX -> gX
    java.lang.String getAppid() -> getAppid
    void setAppid(java.lang.String) -> setAppid
    java.lang.String getUuid() -> getUuid
    void setUuid(java.lang.String) -> setUuid
    int getClient() -> getClient
    void setClient(int) -> setClient
    java.lang.String getOs() -> getOs
    void setOs(java.lang.String) -> setOs
    java.lang.String getModel() -> getModel
    void setModel(java.lang.String) -> setModel
    java.lang.String getAppVersion() -> getAppVersion
    void setAppVersion(java.lang.String) -> setAppVersion
    com.videogo.stat.log.Detail getDetail() -> getDetail
    void setDetail(com.videogo.stat.log.Detail) -> setDetail
    void clear() -> clear
    java.lang.String toJsonString() -> toJsonString
com.videogo.stat.log.ActionLog -> com.videogo.stat.log.ActionLog:
    int gY -> gY
    int gZ -> gZ
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getK() -> getK
    void setK(int) -> setK
    int getC() -> getC
    void setC(int) -> setC
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.videogo.stat.log.ActionLog$1 -> com.videogo.stat.log.ActionLog$1:
    com.videogo.stat.log.ActionLog j(android.os.Parcel) -> j
    com.videogo.stat.log.ActionLog[] m(int) -> m
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.stat.log.CoreOptLog -> com.videogo.stat.log.CoreOptLog:
    int gY -> gY
    int ha -> ha
    java.lang.String hb -> hb
    int hc -> hc
    java.lang.String hd -> hd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toJsonString() -> toJsonString
    int getK() -> getK
    void setK(int) -> setK
    int getE() -> getE
    void setE(int) -> setE
    java.lang.String getOt() -> getOt
    void setOt(java.lang.String) -> setOt
    int getCt() -> getCt
    void setCt(int) -> setCt
    java.lang.String getI() -> getI
    void setI(java.lang.String) -> setI
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.videogo.stat.log.CoreOptLog$1 -> com.videogo.stat.log.CoreOptLog$1:
    com.videogo.stat.log.CoreOptLog k(android.os.Parcel) -> k
    com.videogo.stat.log.CoreOptLog[] n(int) -> n
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.stat.log.CrashLog -> com.videogo.stat.log.CrashLog:
    java.lang.String hb -> hb
    java.lang.String hd -> hd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOt() -> getOt
    void setOt(java.lang.String) -> setOt
    java.lang.String getI() -> getI
    void setI(java.lang.String) -> setI
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.videogo.stat.log.CrashLog$1 -> com.videogo.stat.log.CrashLog$1:
    com.videogo.stat.log.CrashLog l(android.os.Parcel) -> l
    com.videogo.stat.log.CrashLog[] o(int) -> o
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.stat.log.Detail -> com.videogo.stat.log.Detail:
    java.util.List he -> he
    java.util.List hf -> hf
    java.util.List hg -> hg
    java.util.List hh -> hh
    java.util.List hi -> hi
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getActionLog() -> getActionLog
    void setActionLogList(java.util.List) -> setActionLogList
    java.util.List getPageLog() -> getPageLog
    void setPageLogList(java.util.List) -> setPageLogList
    void addNetOptLog(com.videogo.stat.log.NetOptLog) -> addNetOptLog
    void addNetOptLogList(java.util.List) -> addNetOptLogList
    void addCoreOptLog(com.videogo.stat.log.CoreOptLog) -> addCoreOptLog
    void addCoreOptLogList(java.util.List) -> addCoreOptLogList
    void addCrashLog(com.videogo.stat.log.CrashLog) -> addCrashLog
    java.util.List getNetOptLog() -> getNetOptLog
    java.util.List getCoreOptLog() -> getCoreOptLog
    java.util.List getCrashLog() -> getCrashLog
    void addCrashLogList(java.util.List) -> addCrashLogList
    void clear() -> clear
    boolean hasData() -> hasData
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.videogo.stat.log.Detail$1 -> com.videogo.stat.log.Detail$1:
    com.videogo.stat.log.Detail m(android.os.Parcel) -> m
    com.videogo.stat.log.Detail[] p(int) -> p
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.stat.log.NetOptLog -> com.videogo.stat.log.NetOptLog:
    int gY -> gY
    int ha -> ha
    java.lang.String hb -> hb
    int hc -> hc
    int hj -> hj
    java.lang.String hd -> hd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toJsonString() -> toJsonString
    int getK() -> getK
    void setK(int) -> setK
    int getE() -> getE
    void setE(int) -> setE
    java.lang.String getOt() -> getOt
    void setOt(java.lang.String) -> setOt
    int getCt() -> getCt
    void setCt(int) -> setCt
    int getNt() -> getNt
    void setNt(int) -> setNt
    java.lang.String getI() -> getI
    void setI(java.lang.String) -> setI
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.videogo.stat.log.NetOptLog$1 -> com.videogo.stat.log.NetOptLog$1:
    com.videogo.stat.log.NetOptLog n(android.os.Parcel) -> n
    com.videogo.stat.log.NetOptLog[] q(int) -> q
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.stat.log.PageLog -> com.videogo.stat.log.PageLog:
    int gY -> gY
    int gZ -> gZ
    int hk -> hk
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getK() -> getK
    void setK(int) -> setK
    int getC() -> getC
    void setC(int) -> setC
    int getMt() -> getMt
    void setMt(int) -> setMt
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.videogo.stat.log.PageLog$1 -> com.videogo.stat.log.PageLog$1:
    com.videogo.stat.log.PageLog o(android.os.Parcel) -> o
    com.videogo.stat.log.PageLog[] r(int) -> r
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.videogo.stat.log.PageStat -> com.videogo.stat.log.PageStat:
    long hl -> hl
    long hm -> hm
    int hn -> hn
    int ho -> ho
    void calculate() -> calculate
    long getBeginTime() -> getBeginTime
    void setBeginTime(long) -> setBeginTime
    long getEndTime() -> getEndTime
    void setEndTime(long) -> setEndTime
    int getTimes() -> getTimes
    int getAvgTime() -> getAvgTime
    void setTimes(int) -> setTimes
    void setAvgTime(int) -> setAvgTime
com.videogo.ui.androidpn.NotifierActivity -> com.videogo.ui.androidpn.NotifierActivity:
    java.lang.String TAG -> TAG
    int displayHeight -> displayHeight
    com.videogo.ui.androidpn.NotifierAdapter mAlarmAdapter -> mAlarmAdapter
    android.widget.ListView mAlarmLv -> mAlarmLv
    android.widget.LinearLayout myRelativeLayout -> myRelativeLayout
    android.widget.LinearLayout mAlarmListLy -> mAlarmListLy
    android.widget.Button mCloseBtn -> mCloseBtn
    com.videogo.alarm.AlarmLogInfoManager mAlarmLogInfoManager -> mAlarmLogInfoManager
    android.content.BroadcastReceiver mReceiver -> mReceiver
    void onCreate(android.os.Bundle) -> onCreate
    void findView() -> findView
    void initData() -> initData
    void onResume() -> onResume
    void updateAlarmLogInfoDisplayList() -> updateAlarmLogInfoDisplayList
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
    void onOrientation(int) -> onOrientation
    void onIconClick(com.videogo.alarm.AlarmLogInfoEx) -> onIconClick
    void onItemLongClick(int) -> onItemLongClick
    void onItemClick(com.videogo.alarm.AlarmLogInfoEx,int) -> onItemClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCheckBtnClick() -> onCheckBtnClick
    void onDelBtnClick(int) -> onDelBtnClick
    void access$0(com.videogo.ui.androidpn.NotifierActivity) -> access$0
    com.videogo.alarm.AlarmLogInfoManager access$1(com.videogo.ui.androidpn.NotifierActivity) -> access$1
com.videogo.ui.androidpn.NotifierActivity$1 -> com.videogo.ui.androidpn.NotifierActivity$1:
    com.videogo.ui.androidpn.NotifierActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.ui.androidpn.NotifierActivity$2 -> com.videogo.ui.androidpn.NotifierActivity$2:
    com.videogo.ui.androidpn.NotifierActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.androidpn.NotifierActivity$3 -> com.videogo.ui.androidpn.NotifierActivity$3:
    com.videogo.ui.androidpn.NotifierActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.androidpn.NotifierAdapter -> com.videogo.ui.androidpn.NotifierAdapter:
    java.lang.String TAG -> TAG
    java.util.List mItemDataList -> mItemDataList
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mListContainer -> mListContainer
    com.videogo.ui.androidpn.NotifierAdapter$OnIconClickListener mListener -> mListener
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> mImageLoader
    android.view.ViewGroup$LayoutParams mLayoutParams -> mLayoutParams
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    void setCameraList(java.util.List) -> setCameraList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setAlarmName(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder,com.videogo.alarm.AlarmLogInfoEx) -> setAlarmName
    java.lang.String getDate() -> getDate
    com.videogo.ui.androidpn.NotifierAdapter$OnIconClickListener access$0(com.videogo.ui.androidpn.NotifierAdapter) -> access$0
    java.util.List access$1(com.videogo.ui.androidpn.NotifierAdapter) -> access$1
com.videogo.ui.androidpn.NotifierAdapter$1 -> com.videogo.ui.androidpn.NotifierAdapter$1:
    com.videogo.ui.androidpn.NotifierAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.androidpn.NotifierAdapter$2 -> com.videogo.ui.androidpn.NotifierAdapter$2:
    com.videogo.ui.androidpn.NotifierAdapter this$0 -> this$0
    com.videogo.ui.androidpn.NotifierAdapter$ViewHolder val$viewHolder -> val$viewHolder
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.videogo.ui.androidpn.NotifierAdapter$3 -> com.videogo.ui.androidpn.NotifierAdapter$3:
    com.videogo.ui.androidpn.NotifierAdapter this$0 -> this$0
    com.videogo.ui.androidpn.NotifierAdapter$ViewHolder val$viewHolder -> val$viewHolder
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.videogo.ui.androidpn.NotifierAdapter$OnIconClickListener -> com.videogo.ui.androidpn.NotifierAdapter$OnIconClickListener:
    void onIconClick(com.videogo.alarm.AlarmLogInfoEx) -> onIconClick
    void onItemLongClick(int) -> onItemLongClick
    void onItemClick(com.videogo.alarm.AlarmLogInfoEx,int) -> onItemClick
    void onCheckBtnClick() -> onCheckBtnClick
    void onDelBtnClick(int) -> onDelBtnClick
com.videogo.ui.androidpn.NotifierAdapter$ViewHolder -> com.videogo.ui.androidpn.NotifierAdapter$ViewHolder:
    android.widget.ImageView iconIv -> iconIv
    android.widget.Button cameraItemBtn -> cameraItemBtn
    android.widget.TextView alarmName -> alarmName
    android.widget.TextView fromTv -> fromTv
    android.widget.TextView alarmTime -> alarmTime
    android.widget.TextView messNumTv -> messNumTv
    android.widget.ImageView offlineIv -> offlineIv
    android.widget.LinearLayout cameraItemRl -> cameraItemRl
    android.widget.RelativeLayout cameraItemRlt -> cameraItemRlt
    android.widget.ProgressBar progressBar -> progressBar
    void access$0(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder,android.widget.ImageView) -> access$0
    void access$1(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder,android.widget.ProgressBar) -> access$1
    void access$2(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder,android.widget.LinearLayout) -> access$2
    void access$3(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder,android.widget.RelativeLayout) -> access$3
    android.widget.RelativeLayout access$4(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder) -> access$4
    android.widget.ImageView access$5(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder) -> access$5
    android.widget.ProgressBar access$6(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder) -> access$6
    android.widget.LinearLayout access$7(com.videogo.ui.androidpn.NotifierAdapter$ViewHolder) -> access$7
com.videogo.ui.androidpn.NotifierUtils -> com.videogo.ui.androidpn.NotifierUtils:
    java.lang.String TAG -> TAG
    void showNotification(android.content.Context,android.content.Intent) -> showNotification
    void notifyNotification(android.content.Context,java.lang.Class,android.content.Intent) -> notifyNotification
    void clearAllNotification(android.content.Context) -> clearAllNotification
com.videogo.ui.androidpn.NotifierUtils$1 -> com.videogo.ui.androidpn.NotifierUtils$1:
    android.content.Intent val$intent -> val$intent
    android.content.Context val$context -> val$context
    void run() -> run
com.videogo.ui.cameralist.CameraListActivity -> com.videogo.ui.cameralist.CameraListActivity:
    java.lang.String TAG -> TAG
    int SHOW_DIALOG_DEL_DEVICE -> SHOW_DIALOG_DEL_DEVICE
    com.videogo.openapi.EzvizAPI mEzvizAPI -> mEzvizAPI
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    com.videogo.widget.pulltorefresh.PullToRefreshListView mListView -> mListView
    com.videogo.ui.cameralist.CameraListAdapter mAdapter -> mAdapter
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    android.widget.LinearLayout mNoCameraTipLy -> mNoCameraTipLy
    android.widget.LinearLayout mGetCameraFailTipLy -> mGetCameraFailTipLy
    boolean mHasShowInputDialog -> mHasShowInputDialog
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void initData() -> initData
    void onResume() -> onResume
    void getCameraInfoList(boolean) -> getCameraInfoList
    void addCameraList(java.util.List) -> addCameraList
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void refreshButtonClicked() -> refreshButtonClicked
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void popLogoutDialog() -> popLogoutDialog
    com.videogo.ui.cameralist.CameraListAdapter access$0(com.videogo.ui.cameralist.CameraListActivity) -> access$0
    com.videogo.openapi.EzvizAPI access$1(com.videogo.ui.cameralist.CameraListActivity) -> access$1
    com.videogo.widget.pulltorefresh.PullToRefreshListView access$2(com.videogo.ui.cameralist.CameraListActivity) -> access$2
    android.widget.LinearLayout access$3(com.videogo.ui.cameralist.CameraListActivity) -> access$3
    android.widget.LinearLayout access$4(com.videogo.ui.cameralist.CameraListActivity) -> access$4
    void access$5(com.videogo.ui.cameralist.CameraListActivity,java.util.List) -> access$5
    boolean access$6(com.videogo.ui.cameralist.CameraListActivity) -> access$6
    void access$7(com.videogo.ui.cameralist.CameraListActivity,boolean) -> access$7
    void access$8(com.videogo.ui.cameralist.CameraListActivity) -> access$8
    void access$9(com.videogo.ui.cameralist.CameraListActivity,com.videogo.openapi.bean.resp.CameraInfo) -> access$9
    void access$10(com.videogo.ui.cameralist.CameraListActivity,boolean) -> access$10
    com.videogo.openapi.bean.resp.CameraInfo access$11(com.videogo.ui.cameralist.CameraListActivity) -> access$11
com.videogo.ui.cameralist.CameraListActivity$1 -> com.videogo.ui.cameralist.CameraListActivity$1:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.cameralist.CameraListActivity$2 -> com.videogo.ui.cameralist.CameraListActivity$2:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.cameralist.CameraListActivity$3 -> com.videogo.ui.cameralist.CameraListActivity$3:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onPlayClick(android.widget.BaseAdapter,android.view.View,int) -> onPlayClick
    void onRemotePlayBackClick(android.widget.BaseAdapter,android.view.View,int) -> onRemotePlayBackClick
    void onSetDeviceClick(android.widget.BaseAdapter,android.view.View,int) -> onSetDeviceClick
    void onDeleteClick(android.widget.BaseAdapter,android.view.View,int) -> onDeleteClick
    void onAlarmListClick(android.widget.BaseAdapter,android.view.View,int) -> onAlarmListClick
    void onDevicePictureClick(android.widget.BaseAdapter,android.view.View,int) -> onDevicePictureClick
    void onDeviceVideoClick(android.widget.BaseAdapter,android.view.View,int) -> onDeviceVideoClick
    com.videogo.ui.cameralist.CameraListActivity access$0(com.videogo.ui.cameralist.CameraListActivity$3) -> access$0
com.videogo.ui.cameralist.CameraListActivity$3$1 -> com.videogo.ui.cameralist.CameraListActivity$3$1:
    com.videogo.ui.cameralist.CameraListActivity$3 this$1 -> this$1
    com.videogo.openapi.bean.resp.CameraInfo val$cameraInfo -> val$cameraInfo
    void onClick(android.content.DialogInterface,int) -> onClick
    com.videogo.ui.cameralist.CameraListActivity$3 access$0(com.videogo.ui.cameralist.CameraListActivity$3$1) -> access$0
com.videogo.ui.cameralist.CameraListActivity$3$1$1 -> com.videogo.ui.cameralist.CameraListActivity$3$1$1:
    com.videogo.ui.cameralist.CameraListActivity$3$1 this$2 -> this$2
    com.videogo.openapi.bean.resp.CameraInfo val$cameraInfo -> val$cameraInfo
    android.widget.EditText val$editText -> val$editText
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$3$2 -> com.videogo.ui.cameralist.CameraListActivity$3$2:
    com.videogo.ui.cameralist.CameraListActivity$3 this$1 -> this$1
    com.videogo.openapi.bean.resp.CameraInfo val$cameraInfo -> val$cameraInfo
    android.widget.EditText val$editText -> val$editText
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$4 -> com.videogo.ui.cameralist.CameraListActivity$4:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    com.videogo.widget.pulltorefresh.LoadingLayout create(android.content.Context,boolean,com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation) -> create
com.videogo.ui.cameralist.CameraListActivity$5 -> com.videogo.ui.cameralist.CameraListActivity$5:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onRefresh(com.videogo.widget.pulltorefresh.PullToRefreshBase,boolean) -> onRefresh
com.videogo.ui.cameralist.CameraListActivity$6 -> com.videogo.ui.cameralist.CameraListActivity$6:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$7 -> com.videogo.ui.cameralist.CameraListActivity$7:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$8 -> com.videogo.ui.cameralist.CameraListActivity$8:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$9 -> com.videogo.ui.cameralist.CameraListActivity$9:
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$DeleteDeviceTask -> com.videogo.ui.cameralist.CameraListActivity$DeleteDeviceTask:
    android.app.Dialog mWaitDialog -> mWaitDialog
    int mErrorCode -> mErrorCode
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    com.videogo.openapi.bean.resp.CameraInfo doInBackground(com.videogo.openapi.bean.resp.CameraInfo[]) -> doInBackground
    void onPostExecute(com.videogo.openapi.bean.resp.CameraInfo) -> onPostExecute
    void onError(int) -> onError
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.ui.cameralist.CameraListActivity$GetCamersInfoListTask -> com.videogo.ui.cameralist.CameraListActivity$GetCamersInfoListTask:
    boolean mHeaderOrFooter -> mHeaderOrFooter
    int mErrorCode -> mErrorCode
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.util.List) -> onPostExecute
    void onError(int) -> onError
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask -> com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask:
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    java.lang.String mUuid -> mUuid
    android.app.Dialog mWaitDialog -> mWaitDialog
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void displayMessageImage(java.lang.String) -> displayMessageImage
    void showInputSafePassword(java.lang.String) -> showInputSafePassword
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    android.app.Dialog access$2(com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask) -> access$2
    void access$3(com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask,java.lang.String) -> access$3
    com.videogo.openapi.bean.resp.CameraInfo access$4(com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask) -> access$4
    void access$5(com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask,java.lang.String) -> access$5
    com.videogo.ui.cameralist.CameraListActivity access$6(com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask) -> access$6
com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$1 -> com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$1:
    com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask this$1 -> this$1
    java.lang.String val$picUrl -> val$picUrl
    android.widget.ImageView val$img -> val$img
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask access$0(com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$1) -> access$0
com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$1$1 -> com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$1$1:
    com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$1 this$2 -> this$2
    java.lang.String val$picUrl -> val$picUrl
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$2 -> com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$2:
    com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask this$1 -> this$1
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$3 -> com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask$3:
    com.videogo.ui.cameralist.CameraListActivity$GetDevicePictureTask this$1 -> this$1
    android.widget.EditText val$passwordInput -> val$passwordInput
    java.lang.String val$picUrl -> val$picUrl
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.cameralist.CameraListActivity$GetDeviceVideoTask -> com.videogo.ui.cameralist.CameraListActivity$GetDeviceVideoTask:
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    java.lang.String mUuid -> mUuid
    android.app.Dialog mWaitDialog -> mWaitDialog
    com.videogo.ui.cameralist.CameraListActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    com.videogo.openapi.bean.resp.VideoInfo doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.videogo.openapi.bean.resp.VideoInfo) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.ui.cameralist.CameraListAdapter -> com.videogo.ui.cameralist.CameraListAdapter:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.util.List mCameraInfoList -> mCameraInfoList
    com.videogo.ui.cameralist.CameraListAdapter$OnClickListener mListener -> mListener
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> mImageLoader
    java.util.concurrent.ExecutorService mExecutorService -> mExecutorService
    java.util.Map mExecuteItemMap -> mExecuteItemMap
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener mImgLoadingListener -> mImgLoadingListener
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    void clearImageCache() -> clearImageCache
    void setOnClickListener(com.videogo.ui.cameralist.CameraListAdapter$OnClickListener) -> setOnClickListener
    void addItem(com.videogo.openapi.bean.resp.CameraInfo) -> addItem
    void removeItem(com.videogo.openapi.bean.resp.CameraInfo) -> removeItem
    void clearItem() -> clearItem
    int getCount() -> getCount
    com.videogo.openapi.bean.resp.CameraInfo getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void getCameraSnapshotTask(com.videogo.openapi.bean.resp.CameraInfo) -> getCameraSnapshotTask
    java.lang.Object getItem(int) -> getItem
    com.videogo.ui.cameralist.CameraListAdapter$OnClickListener access$1(com.videogo.ui.cameralist.CameraListAdapter) -> access$1
    android.os.Handler access$2(com.videogo.ui.cameralist.CameraListAdapter) -> access$2
com.videogo.ui.cameralist.CameraListAdapter$1 -> com.videogo.ui.cameralist.CameraListAdapter$1:
    com.videogo.ui.cameralist.CameraListAdapter this$0 -> this$0
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.videogo.ui.cameralist.CameraListAdapter$2 -> com.videogo.ui.cameralist.CameraListAdapter$2:
    com.videogo.ui.cameralist.CameraListAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.cameralist.CameraListAdapter$3 -> com.videogo.ui.cameralist.CameraListAdapter$3:
    com.videogo.ui.cameralist.CameraListAdapter this$0 -> this$0
    com.videogo.openapi.bean.resp.CameraInfo val$cameraInfo -> val$cameraInfo
    void run() -> run
    com.videogo.ui.cameralist.CameraListAdapter access$0(com.videogo.ui.cameralist.CameraListAdapter$3) -> access$0
com.videogo.ui.cameralist.CameraListAdapter$3$1 -> com.videogo.ui.cameralist.CameraListAdapter$3$1:
    com.videogo.ui.cameralist.CameraListAdapter$3 this$1 -> this$1
    void run() -> run
com.videogo.ui.cameralist.CameraListAdapter$OnClickListener -> com.videogo.ui.cameralist.CameraListAdapter$OnClickListener:
    void onPlayClick(android.widget.BaseAdapter,android.view.View,int) -> onPlayClick
    void onDeleteClick(android.widget.BaseAdapter,android.view.View,int) -> onDeleteClick
    void onAlarmListClick(android.widget.BaseAdapter,android.view.View,int) -> onAlarmListClick
    void onRemotePlayBackClick(android.widget.BaseAdapter,android.view.View,int) -> onRemotePlayBackClick
    void onSetDeviceClick(android.widget.BaseAdapter,android.view.View,int) -> onSetDeviceClick
    void onDevicePictureClick(android.widget.BaseAdapter,android.view.View,int) -> onDevicePictureClick
    void onDeviceVideoClick(android.widget.BaseAdapter,android.view.View,int) -> onDeviceVideoClick
com.videogo.ui.cameralist.CameraListAdapter$ViewHolder -> com.videogo.ui.cameralist.CameraListAdapter$ViewHolder:
    android.widget.ImageView iconIv -> iconIv
    android.widget.ImageView playBtn -> playBtn
    android.widget.ImageView offlineBtn -> offlineBtn
    android.widget.TextView cameraNameTv -> cameraNameTv
    android.widget.ImageButton cameraDelBtn -> cameraDelBtn
    android.widget.ImageButton alarmListBtn -> alarmListBtn
    android.widget.ImageButton remoteplaybackBtn -> remoteplaybackBtn
    android.widget.ImageButton setDeviceBtn -> setDeviceBtn
    android.view.View itemIconArea -> itemIconArea
    android.widget.ImageView offlineBgBtn -> offlineBgBtn
    android.widget.ImageButton deleteBtn -> deleteBtn
    android.widget.ImageButton devicePicBtn -> devicePicBtn
    android.widget.ImageButton deviceVideoBtn -> deviceVideoBtn
com.videogo.ui.devicelist.AutoWifiConnectingActivity -> com.videogo.ui.devicelist.AutoWifiConnectingActivity:
    java.lang.String TAG -> TAG
    int STATUS_WIFI_CONNETCTING -> STATUS_WIFI_CONNETCTING
    int STATUS_REGISTING -> STATUS_REGISTING
    int STATUS_ADDING_CAMERA -> STATUS_ADDING_CAMERA
    int STATUS_ADD_CAMERA_SUCCESS -> STATUS_ADD_CAMERA_SUCCESS
    int ERROR_WIFI_CONNECT -> ERROR_WIFI_CONNECT
    int ERROR_REGIST -> ERROR_REGIST
    int ERROR_ADD_CAMERA -> ERROR_ADD_CAMERA
    long OVERTIME_CONNECT_WIFI_REGIST -> OVERTIME_CONNECT_WIFI_REGIST
    android.view.View btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.view.View addCameraContainer -> addCameraContainer
    android.view.View lineConnectContainer -> lineConnectContainer
    android.widget.ImageView imgStatus -> imgStatus
    android.widget.TextView tvStatus -> tvStatus
    android.view.View btnRetry -> btnRetry
    android.widget.Button btnLineConnect -> btnLineConnect
    android.view.View btnLineConnetOk -> btnLineConnetOk
    android.view.View btnFinish -> btnFinish
    java.lang.String serialNo -> serialNo
    java.lang.String wifiPassword -> wifiPassword
    java.lang.String wifiSSID -> wifiSSID
    java.lang.String deviceType -> deviceType
    int errorStep -> errorStep
    java.lang.String mVerifyCode -> mVerifyCode
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    android.widget.ImageView imgAnimation -> imgAnimation
    android.graphics.drawable.AnimationDrawable animWaiting -> animWaiting
    java.lang.String maskIpAddress -> maskIpAddress
    java.util.Timer overTimeTimer -> overTimeTimer
    com.hikvision.wifi.configuration.OneStepWifiConfigurationManager oneStepWifiConfigurationManager -> oneStepWifiConfigurationManager
    android.net.wifi.WifiManager$MulticastLock lock -> lock
    com.hikvision.wifi.configuration.DeviceDiscoveryListener deviceDiscoveryListener -> deviceDiscoveryListener
    boolean isWifiConnected -> isWifiConnected
    boolean isPlatConnected -> isPlatConnected
    boolean isPlatBonjourget -> isPlatBonjourget
    boolean isWifiOkBonjourget -> isWifiOkBonjourget
    android.os.Handler defiveFindHandler -> defiveFindHandler
    android.view.View btnCancel -> btnCancel
    int searchErrorCode -> searchErrorCode
    com.videogo.widget.WaitDialog mWaitDlg -> mWaitDlg
    boolean isSupportNetWork -> isSupportNetWork
    boolean isSupportWifi -> isSupportWifi
    android.view.View tvDeviceWifiConfigTip -> tvDeviceWifiConfigTip
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> init
    void findViews() -> findViews
    void initUI() -> initUI
    void setListener() -> setListener
    void connectCamera() -> connectCamera
    void start() -> start
    void stopBonjourOnThread() -> stopBonjourOnThread
    void stopConfigOnThread() -> stopConfigOnThread
    void stopConfigAndBonjour(boolean) -> stopConfigAndBonjour
    void stopBonjour() -> stopBonjour
    void onClick(android.view.View) -> onClick
    void cancelOnClick() -> cancelOnClick
    void retryOnclick() -> retryOnclick
    void lineConnectClick() -> lineConnectClick
    void lineConnectOkClick() -> lineConnectOkClick
    void showConfirmDialog() -> showConfirmDialog
    void changeStatuss(int) -> changeStatuss
    void startOvertimeTimer(long,java.lang.Runnable) -> startOvertimeTimer
    void cancelOvertimeTimer() -> cancelOvertimeTimer
    void addCameraFailed(int,int) -> addCameraFailed
    void closeActivity() -> closeActivity
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    android.os.Handler access$0(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$0
    java.lang.String access$1(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$1
    boolean access$2(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$2
    void access$3(com.videogo.ui.devicelist.AutoWifiConnectingActivity,boolean) -> access$3
    void access$4(com.videogo.ui.devicelist.AutoWifiConnectingActivity,boolean) -> access$4
    void access$5(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$5
    void access$6(com.videogo.ui.devicelist.AutoWifiConnectingActivity,int) -> access$6
    boolean access$7(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$7
    void access$8(com.videogo.ui.devicelist.AutoWifiConnectingActivity,boolean) -> access$8
    void access$9(com.videogo.ui.devicelist.AutoWifiConnectingActivity,boolean) -> access$9
    void access$10(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$10
    com.videogo.widget.WaitDialog access$11(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$11
    void access$12(com.videogo.ui.devicelist.AutoWifiConnectingActivity,com.videogo.openapi.bean.resp.CameraInfo) -> access$12
    void access$13(com.videogo.ui.devicelist.AutoWifiConnectingActivity,int,int) -> access$13
    boolean access$14(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$14
    void access$15(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$15
    android.view.View access$16(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$16
    android.view.View access$17(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$17
    void access$18(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$18
    void access$19(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$19
    boolean access$20(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$20
    boolean access$21(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$21
    int access$22(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$22
    void access$23(com.videogo.ui.devicelist.AutoWifiConnectingActivity,boolean) -> access$23
    com.hikvision.wifi.configuration.OneStepWifiConfigurationManager access$24(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$24
    void access$25(com.videogo.ui.devicelist.AutoWifiConnectingActivity,java.lang.String) -> access$25
    java.lang.String access$26(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$26
    void access$27(com.videogo.ui.devicelist.AutoWifiConnectingActivity,com.hikvision.wifi.configuration.OneStepWifiConfigurationManager) -> access$27
    java.lang.String access$28(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$28
    java.lang.String access$29(com.videogo.ui.devicelist.AutoWifiConnectingActivity) -> access$29
com.videogo.ui.devicelist.AutoWifiConnectingActivity$1 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$1:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void onDeviceLost(com.hikvision.wifi.configuration.DeviceInfo) -> onDeviceLost
    void onDeviceFound(com.hikvision.wifi.configuration.DeviceInfo) -> onDeviceFound
com.videogo.ui.devicelist.AutoWifiConnectingActivity$2 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$2:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.videogo.ui.devicelist.AutoWifiConnectingActivity$3 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$3:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void run() -> run
    com.videogo.ui.devicelist.AutoWifiConnectingActivity access$0(com.videogo.ui.devicelist.AutoWifiConnectingActivity$3) -> access$0
com.videogo.ui.devicelist.AutoWifiConnectingActivity$3$1 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$3$1:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity$3 this$1 -> this$1
    void run() -> run
com.videogo.ui.devicelist.AutoWifiConnectingActivity$3$2 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$3$2:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity$3 this$1 -> this$1
    void run() -> run
com.videogo.ui.devicelist.AutoWifiConnectingActivity$4 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$4:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void run() -> run
com.videogo.ui.devicelist.AutoWifiConnectingActivity$5 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$5:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void run() -> run
com.videogo.ui.devicelist.AutoWifiConnectingActivity$6 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$6:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void run() -> run
com.videogo.ui.devicelist.AutoWifiConnectingActivity$7 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$7:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.devicelist.AutoWifiConnectingActivity$8 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$8:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.devicelist.AutoWifiConnectingActivity$9 -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$9:
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    java.lang.Runnable val$run -> val$run
    void run() -> run
com.videogo.ui.devicelist.AutoWifiConnectingActivity$GetCamersInfoTask -> com.videogo.ui.devicelist.AutoWifiConnectingActivity$GetCamersInfoTask:
    int mStatus -> mStatus
    int mErrorCode -> mErrorCode
    com.videogo.ui.devicelist.AutoWifiConnectingActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    com.videogo.openapi.bean.resp.CameraInfo doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.videogo.openapi.bean.resp.CameraInfo) -> onPostExecute
    void onError(int) -> onError
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.ui.devicelist.AutoWifiNetConfigActivity -> com.videogo.ui.devicelist.AutoWifiNetConfigActivity:
    android.widget.Button btnNext -> btnNext
    android.widget.TextView tvSSID -> tvSSID
    android.widget.EditText edtPassword -> edtPassword
    java.lang.String seriaNo -> seriaNo
    java.lang.String deviceType -> deviceType
    android.view.View btnBack -> btnBack
    android.view.View tvReset -> tvReset
    java.lang.String veryCode -> veryCode
    void onCreate(android.os.Bundle) -> onCreate
    void showWifiRequiredDialog() -> showWifiRequiredDialog
    void onResume() -> onResume
    void init() -> init
    void findViews() -> findViews
    void initUI() -> initUI
    void setListener() -> setListener
    void onClick(android.view.View) -> onClick
    android.view.View access$0(com.videogo.ui.devicelist.AutoWifiNetConfigActivity) -> access$0
com.videogo.ui.devicelist.AutoWifiNetConfigActivity$1 -> com.videogo.ui.devicelist.AutoWifiNetConfigActivity$1:
    com.videogo.ui.devicelist.AutoWifiNetConfigActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.devicelist.AutoWifiNetConfigActivity$2 -> com.videogo.ui.devicelist.AutoWifiNetConfigActivity$2:
    com.videogo.ui.devicelist.AutoWifiNetConfigActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.devicelist.DeviceUtil -> com.videogo.ui.devicelist.DeviceUtil:
    boolean isSupportWifi(java.lang.String) -> isSupportWifi
    boolean isSupportNetWork(java.lang.String) -> isSupportNetWork
com.videogo.ui.devicelist.LineConnectgIntroduceActivity -> com.videogo.ui.devicelist.LineConnectgIntroduceActivity:
    java.lang.String FROM_PAGE -> FROM_PAGE
    int FROM_PAGE_DEVICE_DETAIL -> FROM_PAGE_DEVICE_DETAIL
    int FROM_PAGE_WIFI_CONFIG -> FROM_PAGE_WIFI_CONFIG
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    android.widget.TextView tvIntroduce1 -> tvIntroduce1
    android.widget.TextView tvIntroduce2 -> tvIntroduce2
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void initTitleBar() -> initTitleBar
com.videogo.ui.devicelist.LineConnectgIntroduceActivity$1 -> com.videogo.ui.devicelist.LineConnectgIntroduceActivity$1:
    com.videogo.ui.devicelist.LineConnectgIntroduceActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.devicelist.ResetIntroduceActivity -> com.videogo.ui.devicelist.ResetIntroduceActivity:
    java.lang.String TAG -> TAG
    android.view.View btnBack -> btnBack
    android.widget.TextView btnReset -> btnReset
    java.lang.String seriaNo -> seriaNo
    com.videogo.device.DeviceInfoEx device -> device
    android.widget.TextView tvTitle -> tvTitle
    void onCreate(android.os.Bundle) -> onCreate
com.videogo.ui.devicelist.ResetIntroduceActivity$1 -> com.videogo.ui.devicelist.ResetIntroduceActivity$1:
    com.videogo.ui.devicelist.ResetIntroduceActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.devicelist.ResetIntroduceActivity$2 -> com.videogo.ui.devicelist.ResetIntroduceActivity$2:
    com.videogo.ui.devicelist.ResetIntroduceActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.discovery.VideoSquareActivity -> com.videogo.ui.discovery.VideoSquareActivity:
    java.lang.String mUrl -> mUrl
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    void initTitleBar() -> initTitleBar
    void initViews() -> initViews
com.videogo.ui.discovery.WebActivity -> com.videogo.ui.discovery.WebActivity:
    java.lang.String TAG -> TAG
    java.lang.String DEMO_PREFIX -> DEMO_PREFIX
    java.lang.String HLS_SUFFIX -> HLS_SUFFIX
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    com.videogo.widget.pulltorefresh.PullToRefreshWebView mPullToRefreshWebView -> mPullToRefreshWebView
    com.videogo.widget.WebViewEx mWebView -> mWebView
    android.widget.ImageView mProgressView -> mProgressView
    com.videogo.constant.UrlManager mUrlManager -> mUrlManager
    android.view.animation.Animation mRotateAnimation -> mRotateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    void findViews() -> findViews
    void initData() -> initData
    void setTitle(java.lang.CharSequence) -> setTitle
    android.widget.Button addTitleBack() -> addTitleBack
    android.widget.Button addTitleRightButton(int,android.view.View$OnClickListener) -> addTitleRightButton
    void addTitleProgress() -> addTitleProgress
    void initViews() -> initViews
    void setPullToRefresh(boolean) -> setPullToRefresh
    void setWebViewClient(com.videogo.ui.discovery.WebActivity$CustomWebViewClient) -> setWebViewClient
    void setWebChromeClient(com.videogo.ui.discovery.WebActivity$CustomWebChromeClient) -> setWebChromeClient
    android.webkit.WebView getWebView() -> getWebView
    void reload() -> reload
    void onBackPressed() -> onBackPressed
    com.videogo.widget.WebViewEx access$0(com.videogo.ui.discovery.WebActivity) -> access$0
    android.widget.ImageView access$1(com.videogo.ui.discovery.WebActivity) -> access$1
    java.lang.String access$2() -> access$2
    com.videogo.widget.pulltorefresh.PullToRefreshWebView access$3(com.videogo.ui.discovery.WebActivity) -> access$3
    void access$4(com.videogo.ui.discovery.WebActivity) -> access$4
com.videogo.ui.discovery.WebActivity$1 -> com.videogo.ui.discovery.WebActivity$1:
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.discovery.WebActivity$2 -> com.videogo.ui.discovery.WebActivity$2:
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.discovery.WebActivity$3 -> com.videogo.ui.discovery.WebActivity$3:
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    com.videogo.widget.pulltorefresh.LoadingLayout create(android.content.Context,boolean,com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation) -> create
com.videogo.ui.discovery.WebActivity$4 -> com.videogo.ui.discovery.WebActivity$4:
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    void onRefresh(com.videogo.widget.pulltorefresh.PullToRefreshBase,boolean) -> onRefresh
com.videogo.ui.discovery.WebActivity$CustomDownloadListener -> com.videogo.ui.discovery.WebActivity$CustomDownloadListener:
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.videogo.ui.discovery.WebActivity$CustomWebChromeClient -> com.videogo.ui.discovery.WebActivity$CustomWebChromeClient:
    android.view.View mView -> mView
    android.webkit.WebChromeClient$CustomViewCallback mCallback -> mCallback
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
com.videogo.ui.discovery.WebActivity$CustomWebViewClient -> com.videogo.ui.discovery.WebActivity$CustomWebViewClient:
    com.videogo.ui.discovery.WebActivity this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageStartedCompat(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStartedCompat
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.videogo.ui.message.AlarmType -> com.videogo.ui.message.AlarmType:
    com.videogo.ui.message.AlarmType UNKNOWN -> UNKNOWN
    com.videogo.ui.message.AlarmType BODY_FEEL -> BODY_FEEL
    com.videogo.ui.message.AlarmType REMOTE_CONTROL -> REMOTE_CONTROL
    com.videogo.ui.message.AlarmType MOTION_DETECTION_ALARM -> MOTION_DETECTION_ALARM
    com.videogo.ui.message.AlarmType BABY_CRY_ALARM -> BABY_CRY_ALARM
    com.videogo.ui.message.AlarmType DOOR_ALARM -> DOOR_ALARM
    com.videogo.ui.message.AlarmType SMOKE_ALARM -> SMOKE_ALARM
    com.videogo.ui.message.AlarmType GAS_ALARM -> GAS_ALARM
    com.videogo.ui.message.AlarmType WATER_ALARM -> WATER_ALARM
    com.videogo.ui.message.AlarmType URGENT_BUTTON_ALARM -> URGENT_BUTTON_ALARM
    com.videogo.ui.message.AlarmType BODY_ALARM -> BODY_ALARM
    int id -> id
    boolean hasCamera -> hasCamera
    int drawableResId -> drawableResId
    int textResId -> textResId
    com.videogo.ui.message.AlarmType[] ENUM$VALUES -> ENUM$VALUES
    int getId() -> getId
    boolean hasCamera() -> hasCamera
    int getDrawableResId() -> getDrawableResId
    int getTextResId() -> getTextResId
    com.videogo.ui.message.AlarmType getAlarmTypeById(int) -> getAlarmTypeById
    com.videogo.ui.message.AlarmType[] values() -> values
    com.videogo.ui.message.AlarmType valueOf(java.lang.String) -> valueOf
com.videogo.ui.message.MessageActivity -> com.videogo.ui.message.MessageActivity:
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    com.videogo.widget.pulltorefresh.PullToRefreshListView mMessageListView -> mMessageListView
    android.view.ViewGroup mNoMessageLayout -> mNoMessageLayout
    android.view.ViewGroup mRefreshLayout -> mRefreshLayout
    android.view.ViewGroup mRefreshButton -> mRefreshButton
    android.widget.TextView mRefreshTipView -> mRefreshTipView
    android.view.View mNoMoreView -> mNoMoreView
    com.videogo.ui.message.MessageListAdapter mAdapter -> mAdapter
    java.util.List mMessageList -> mMessageList
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    java.util.Calendar mStartTime -> mStartTime
    java.util.Calendar mEndTime -> mEndTime
    com.videogo.openapi.EzvizAPI mEzvizAPI -> mEzvizAPI
    int mPushFlag -> mPushFlag
    void onCreate(android.os.Bundle) -> onCreate
    void findViews() -> findViews
    void initData() -> initData
    void initTitleBar() -> initTitleBar
    void showDatePicker() -> showDatePicker
    void initViews() -> initViews
    void setListner() -> setListner
    void refreshButtonClicked() -> refreshButtonClicked
    void getAlarmMessageList(boolean,boolean) -> getAlarmMessageList
    com.videogo.openapi.bean.resp.CameraInfo access$0(com.videogo.ui.message.MessageActivity) -> access$0
    java.util.Calendar access$1(com.videogo.ui.message.MessageActivity) -> access$1
    java.util.Calendar access$2(com.videogo.ui.message.MessageActivity) -> access$2
    java.util.List access$3(com.videogo.ui.message.MessageActivity) -> access$3
    com.videogo.openapi.EzvizAPI access$4(com.videogo.ui.message.MessageActivity) -> access$4
    com.videogo.widget.pulltorefresh.PullToRefreshListView access$5(com.videogo.ui.message.MessageActivity) -> access$5
    android.view.View access$6(com.videogo.ui.message.MessageActivity) -> access$6
    android.view.ViewGroup access$7(com.videogo.ui.message.MessageActivity) -> access$7
    android.view.ViewGroup access$8(com.videogo.ui.message.MessageActivity) -> access$8
    com.videogo.ui.message.MessageListAdapter access$9(com.videogo.ui.message.MessageActivity) -> access$9
    android.widget.TextView access$10(com.videogo.ui.message.MessageActivity) -> access$10
    void access$11(com.videogo.ui.message.MessageActivity) -> access$11
    void access$12(com.videogo.ui.message.MessageActivity,java.util.Calendar) -> access$12
    void access$13(com.videogo.ui.message.MessageActivity,java.util.Calendar) -> access$13
    com.videogo.widget.TitleBar access$14(com.videogo.ui.message.MessageActivity) -> access$14
    void access$15(com.videogo.ui.message.MessageActivity) -> access$15
    void access$16(com.videogo.ui.message.MessageActivity,boolean,boolean) -> access$16
com.videogo.ui.message.MessageActivity$1 -> com.videogo.ui.message.MessageActivity$1:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.message.MessageActivity$2 -> com.videogo.ui.message.MessageActivity$2:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.message.MessageActivity$3 -> com.videogo.ui.message.MessageActivity$3:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.message.MessageActivity$4 -> com.videogo.ui.message.MessageActivity$4:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.message.MessageActivity$5 -> com.videogo.ui.message.MessageActivity$5:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.message.MessageActivity$6 -> com.videogo.ui.message.MessageActivity$6:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    com.videogo.widget.pulltorefresh.LoadingLayout create(android.content.Context,boolean,com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation) -> create
com.videogo.ui.message.MessageActivity$7 -> com.videogo.ui.message.MessageActivity$7:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onRefresh(com.videogo.widget.pulltorefresh.PullToRefreshBase,boolean) -> onRefresh
com.videogo.ui.message.MessageActivity$8 -> com.videogo.ui.message.MessageActivity$8:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.message.MessageActivity$9 -> com.videogo.ui.message.MessageActivity$9:
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onVideoButtonClick(android.widget.BaseAdapter,android.view.View,int) -> onVideoButtonClick
    void onPlayButtonClick(android.widget.BaseAdapter,android.view.View,int) -> onPlayButtonClick
    void onItemClick(android.widget.BaseAdapter,android.view.View,int) -> onItemClick
    void onImageClick(android.widget.BaseAdapter,android.view.View,int) -> onImageClick
com.videogo.ui.message.MessageActivity$GetAlarmMessageTask -> com.videogo.ui.message.MessageActivity$GetAlarmMessageTask:
    boolean mHeaderOrFooter -> mHeaderOrFooter
    int mErrorCode -> mErrorCode
    com.videogo.ui.message.MessageActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.util.List) -> onPostExecute
    void onError(int) -> onError
    void showError(java.lang.CharSequence) -> showError
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.ui.message.MessageListAdapter -> com.videogo.ui.message.MessageListAdapter:
    com.videogo.ui.message.MessageListAdapter$OnClickListener mListener -> mListener
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    void setOnClickListener(com.videogo.ui.message.MessageListAdapter$OnClickListener) -> setOnClickListener
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.videogo.ui.message.MessageListAdapter$OnClickListener access$0(com.videogo.ui.message.MessageListAdapter) -> access$0
com.videogo.ui.message.MessageListAdapter$1 -> com.videogo.ui.message.MessageListAdapter$1:
    com.videogo.ui.message.MessageListAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.message.MessageListAdapter$OnClickListener -> com.videogo.ui.message.MessageListAdapter$OnClickListener:
    void onItemClick(android.widget.BaseAdapter,android.view.View,int) -> onItemClick
    void onImageClick(android.widget.BaseAdapter,android.view.View,int) -> onImageClick
    void onVideoButtonClick(android.widget.BaseAdapter,android.view.View,int) -> onVideoButtonClick
    void onPlayButtonClick(android.widget.BaseAdapter,android.view.View,int) -> onPlayButtonClick
com.videogo.ui.message.MessageListAdapter$ViewHolder -> com.videogo.ui.message.MessageListAdapter$ViewHolder:
    android.widget.TextView timeText -> timeText
    android.widget.ImageView image -> image
    android.widget.TextView from -> from
    android.widget.TextView type -> type
    android.view.ViewGroup contentLayout -> contentLayout
    android.view.ViewGroup videoLayout -> videoLayout
    android.view.ViewGroup playLayout -> playLayout
    android.view.ViewGroup playVideoLayout -> playVideoLayout
    com.videogo.ui.message.MessageListAdapter this$0 -> this$0
com.videogo.ui.realplay.RealPlayActivity -> com.videogo.ui.realplay.RealPlayActivity:
    java.lang.String TAG -> TAG
    int MSG_PLAY_UI_UPDATE -> MSG_PLAY_UI_UPDATE
    java.lang.String mRtspUrl -> mRtspUrl
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    com.videogo.realplay.RealPlayerManager mRealPlayMgr -> mRealPlayMgr
    com.videogo.demo.DemoRealPlayer mDemoRealPlayer -> mDemoRealPlayer
    com.videogo.realplay.RealPlayerHelper mRealPlayerHelper -> mRealPlayerHelper
    com.videogo.ui.util.AudioPlayUtil mAudioPlayUtil -> mAudioPlayUtil
    com.videogo.util.LocalInfo mLocalInfo -> mLocalInfo
    android.os.Handler mHandler -> mHandler
    com.videogo.voicetalk.VoiceTalkManager mVoiceTalkManager -> mVoiceTalkManager
    float mRealRatio -> mRealRatio
    int mStatus -> mStatus
    boolean mIsOnStop -> mIsOnStop
    int mOrientation -> mOrientation
    long mStreamFlow -> mStreamFlow
    long mTotalStreamFlow -> mTotalStreamFlow
    android.graphics.Rect mRealPlayRect -> mRealPlayRect
    android.widget.LinearLayout mRealPlayPageLy -> mRealPlayPageLy
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    android.widget.Button mTiletRightBtn -> mTiletRightBtn
    android.widget.RelativeLayout mRealPlayPlayRl -> mRealPlayPlayRl
    com.videogo.widget.HVScrollView mHVScrollView -> mHVScrollView
    android.view.SurfaceView mRealPlaySv -> mRealPlaySv
    android.view.SurfaceHolder mRealPlaySh -> mRealPlaySh
    android.view.GestureDetector mPlaySvGestureDetector -> mPlaySvGestureDetector
    android.widget.LinearLayout mRealPlayLoadingLy -> mRealPlayLoadingLy
    android.widget.LinearLayout mRealPlayLoadingPbLy -> mRealPlayLoadingPbLy
    android.widget.TextView mRealPlayLoadingTv -> mRealPlayLoadingTv
    android.widget.TextView mRealPlayTipTv -> mRealPlayTipTv
    android.widget.ImageView mRealPlayIv -> mRealPlayIv
    android.widget.RelativeLayout mRealPlayControlRl -> mRealPlayControlRl
    android.widget.ImageButton mRealPlayBtn -> mRealPlayBtn
    android.widget.ImageButton mRealPlaySoundBtn -> mRealPlaySoundBtn
    android.widget.TextView mRealPlayFlowTv -> mRealPlayFlowTv
    int mControlDisplaySec -> mControlDisplaySec
    android.widget.RelativeLayout mRealPlayCaptureRl -> mRealPlayCaptureRl
    android.widget.RelativeLayout$LayoutParams mRealPlayCaptureRlLp -> mRealPlayCaptureRlLp
    android.widget.ImageView mRealPlayCaptureIv -> mRealPlayCaptureIv
    android.widget.ImageView mRealPlayCaptureWatermarkIv -> mRealPlayCaptureWatermarkIv
    int mCaptureDisplaySec -> mCaptureDisplaySec
    android.widget.LinearLayout mRealPlayRecordLy -> mRealPlayRecordLy
    android.widget.ImageView mRealPlayRecordIv -> mRealPlayRecordIv
    android.widget.TextView mRealPlayRecordTv -> mRealPlayRecordTv
    java.lang.String mRecordFilePath -> mRecordFilePath
    java.lang.String mRecordTime -> mRecordTime
    int mRecordSecond -> mRecordSecond
    android.widget.HorizontalScrollView mRealPlayOperateBar -> mRealPlayOperateBar
    android.widget.ImageButton mRealPlayTalkBtn -> mRealPlayTalkBtn
    android.widget.ImageButton mRealPlayCaptureBtn -> mRealPlayCaptureBtn
    android.widget.ImageButton mRealPlayRecordBtn -> mRealPlayRecordBtn
    android.widget.ImageButton mRealPlayRecordStartBtn -> mRealPlayRecordStartBtn
    android.view.View mRealPlayRecordContainer -> mRealPlayRecordContainer
    com.videogo.util.RotateViewUtil mRecordRotateViewUtil -> mRecordRotateViewUtil
    android.widget.ImageButton mRealPlayQualityBtn -> mRealPlayQualityBtn
    android.widget.ImageButton mRealPlayPtzBtn -> mRealPlayPtzBtn
    android.widget.RelativeLayout mRealPlayFullOperateBar -> mRealPlayFullOperateBar
    android.widget.ImageButton mRealPlayFullPlayBtn -> mRealPlayFullPlayBtn
    android.widget.ImageButton mRealPlayFullSoundBtn -> mRealPlayFullSoundBtn
    android.widget.ImageButton mRealPlayFullCaptureBtn -> mRealPlayFullCaptureBtn
    android.widget.ImageButton mRealPlayFullRecordBtn -> mRealPlayFullRecordBtn
    android.widget.ImageButton mRealPlayFullRecordStartBtn -> mRealPlayFullRecordStartBtn
    android.view.View mRealPlayFullRecordContainer -> mRealPlayFullRecordContainer
    android.widget.LinearLayout mRealPlayFullFlowLy -> mRealPlayFullFlowLy
    android.widget.TextView mRealPlayFullRateTv -> mRealPlayFullRateTv
    android.widget.TextView mRealPlayFullFlowTv -> mRealPlayFullFlowTv
    android.widget.TextView mRealPlayRatioTv -> mRealPlayRatioTv
    android.widget.PopupWindow mQualityPopupWindow -> mQualityPopupWindow
    android.widget.PopupWindow mPtzPopupWindow -> mPtzPopupWindow
    android.widget.LinearLayout mPtzControlLy -> mPtzControlLy
    android.widget.PopupWindow mTalkPopupWindow -> mTalkPopupWindow
    com.videogo.widget.RingView mTalkRingView -> mTalkRingView
    android.widget.Button mTalkBackControlBtn -> mTalkBackControlBtn
    com.videogo.widget.WaitDialog mWaitDialog -> mWaitDialog
    com.videogo.ui.realplay.RealPlayActivity$ScreenBroadcastReceiver mScreenBroadcastReceiver -> mScreenBroadcastReceiver
    java.util.Timer mUpdateTimer -> mUpdateTimer
    java.util.TimerTask mUpdateTimerTask -> mUpdateTimerTask
    android.view.View$OnClickListener mOnPopWndClickListener -> mOnPopWndClickListener
    android.view.View$OnTouchListener mOnTouchListener -> mOnTouchListener
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void initData() -> initData
    void initView() -> initView
    void initUI() -> initUI
    void initOperateBarUI() -> initOperateBarUI
    void setVideoLevel() -> setVideoLevel
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void updateOperatorUI() -> updateOperatorUI
    void onOrientationChanged() -> onOrientationChanged
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onSoundBtnClick() -> onSoundBtnClick
    void setRealPlaySound() -> setRealPlaySound
    void startVoiceTalk() -> startVoiceTalk
    void stopVoiceTalk() -> stopVoiceTalk
    void setPtzFlip() -> setPtzFlip
    void setQualityMode(int) -> setQualityMode
    void openTalkPopupWindow(android.view.View) -> openTalkPopupWindow
    void closeTalkPopupWindow() -> closeTalkPopupWindow
    void openPtzPopupWindow(android.view.View) -> openPtzPopupWindow
    void closePtzPopupWindow() -> closePtzPopupWindow
    void openQualityPopupWindow(android.view.View) -> openQualityPopupWindow
    void closeQualityPopupWindow() -> closeQualityPopupWindow
    void onRecordBtnClick() -> onRecordBtnClick
    void stopRealPlayRecord() -> stopRealPlayRecord
    void onCaptureRlClick() -> onCaptureRlClick
    void onCapturePicBtnClick() -> onCapturePicBtnClick
    void onRealPlaySvClick() -> onRealPlaySvClick
    void onRealPlaySvDoubleClick(android.view.MotionEvent) -> onRealPlaySvDoubleClick
    void startRealPlay() -> startRealPlay
    void stopRealPlay() -> stopRealPlay
    void setRealPlayLoadingUI() -> setRealPlayLoadingUI
    void setRealPlayStopUI() -> setRealPlayStopUI
    void setRealPlayFailUI(java.lang.String) -> setRealPlayFailUI
    void setRealPlaySuccessUI() -> setRealPlaySuccessUI
    void checkRealPlayFlow() -> checkRealPlayFlow
    void updateRealPlayFlowTv(long) -> updateRealPlayFlowTv
    void updateLoadingProgress(int) -> updateLoadingProgress
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleGetCameraInfoSuccess() -> handleGetCameraInfoSuccess
    void handleVoiceTalkSucceed() -> handleVoiceTalkSucceed
    void handleVoiceTalkFailed(int,int) -> handleVoiceTalkFailed
    void handleVoiceTalkStoped() -> handleVoiceTalkStoped
    void handleSetVedioModeSuccess() -> handleSetVedioModeSuccess
    void handleSetVedioModeFail(int) -> handleSetVedioModeFail
    void handleStartRecordSuccess(java.lang.String) -> handleStartRecordSuccess
    void handleCapturePictureSuccess(java.lang.String) -> handleCapturePictureSuccess
    void updateRealPlayUI() -> updateRealPlayUI
    void updateCaptureUI() -> updateCaptureUI
    void updateRecordTime() -> updateRecordTime
    void handlePasswordError(int,int,int) -> handlePasswordError
    void handlePlaySuccess(android.os.Message) -> handlePlaySuccess
    void setRealPlaySvLayout(float) -> setRealPlaySvLayout
    void handlePlayFail(int) -> handlePlayFail
    void startUpdateTimer() -> startUpdateTimer
    void stopUpdateTimer() -> stopUpdateTimer
    void sendMessage(int,int,int) -> sendMessage
    void dismissPopWindow(android.widget.PopupWindow) -> dismissPopWindow
    void dismissPopDialog(android.app.AlertDialog) -> dismissPopDialog
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void access$0(com.videogo.ui.realplay.RealPlayActivity) -> access$0
    void access$1(com.videogo.ui.realplay.RealPlayActivity,int) -> access$1
    void access$2(com.videogo.ui.realplay.RealPlayActivity) -> access$2
    void access$3(com.videogo.ui.realplay.RealPlayActivity) -> access$3
    void access$4(com.videogo.ui.realplay.RealPlayActivity) -> access$4
    com.videogo.widget.RingView access$5(com.videogo.ui.realplay.RealPlayActivity) -> access$5
    com.videogo.voicetalk.VoiceTalkManager access$6(com.videogo.ui.realplay.RealPlayActivity) -> access$6
    android.widget.LinearLayout access$7(com.videogo.ui.realplay.RealPlayActivity) -> access$7
    com.videogo.realplay.RealPlayerHelper access$8(com.videogo.ui.realplay.RealPlayActivity) -> access$8
    com.videogo.realplay.RealPlayerManager access$9(com.videogo.ui.realplay.RealPlayActivity) -> access$9
    android.os.Handler access$10(com.videogo.ui.realplay.RealPlayActivity) -> access$10
    int access$11(com.videogo.ui.realplay.RealPlayActivity) -> access$11
    void access$12(com.videogo.ui.realplay.RealPlayActivity) -> access$12
    void access$13(com.videogo.ui.realplay.RealPlayActivity) -> access$13
    void access$14(com.videogo.ui.realplay.RealPlayActivity,int) -> access$14
    com.videogo.openapi.bean.resp.CameraInfo access$15(com.videogo.ui.realplay.RealPlayActivity) -> access$15
    android.graphics.Rect access$16(com.videogo.ui.realplay.RealPlayActivity) -> access$16
    void access$17(com.videogo.ui.realplay.RealPlayActivity,android.graphics.Rect) -> access$17
    void access$18(com.videogo.ui.realplay.RealPlayActivity) -> access$18
    void access$19(com.videogo.ui.realplay.RealPlayActivity,android.view.MotionEvent) -> access$19
    android.widget.Button access$20(com.videogo.ui.realplay.RealPlayActivity) -> access$20
    void access$21(com.videogo.ui.realplay.RealPlayActivity,android.widget.PopupWindow) -> access$21
    void access$22(com.videogo.ui.realplay.RealPlayActivity,android.widget.LinearLayout) -> access$22
    void access$23(com.videogo.ui.realplay.RealPlayActivity,android.widget.PopupWindow) -> access$23
    com.videogo.util.LocalInfo access$24(com.videogo.ui.realplay.RealPlayActivity) -> access$24
    com.videogo.widget.HVScrollView access$25(com.videogo.ui.realplay.RealPlayActivity) -> access$25
    android.widget.TextView access$26(com.videogo.ui.realplay.RealPlayActivity) -> access$26
    android.widget.RelativeLayout access$27(com.videogo.ui.realplay.RealPlayActivity) -> access$27
    android.widget.RelativeLayout access$28(com.videogo.ui.realplay.RealPlayActivity) -> access$28
    int access$29(com.videogo.ui.realplay.RealPlayActivity) -> access$29
    void access$30(com.videogo.ui.realplay.RealPlayActivity,int) -> access$30
    android.widget.RelativeLayout access$31(com.videogo.ui.realplay.RealPlayActivity) -> access$31
    int access$32(com.videogo.ui.realplay.RealPlayActivity) -> access$32
    void access$33(com.videogo.ui.realplay.RealPlayActivity,int) -> access$33
    java.lang.String access$34(com.videogo.ui.realplay.RealPlayActivity) -> access$34
    java.lang.String access$35(com.videogo.ui.realplay.RealPlayActivity) -> access$35
    int access$36(com.videogo.ui.realplay.RealPlayActivity) -> access$36
    void access$37(com.videogo.ui.realplay.RealPlayActivity,int) -> access$37
    void access$38(com.videogo.ui.realplay.RealPlayActivity,java.lang.String) -> access$38
com.videogo.ui.realplay.RealPlayActivity$1 -> com.videogo.ui.realplay.RealPlayActivity$1:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.realplay.RealPlayActivity$10 -> com.videogo.ui.realplay.RealPlayActivity$10:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onDismiss() -> onDismiss
com.videogo.ui.realplay.RealPlayActivity$11 -> com.videogo.ui.realplay.RealPlayActivity$11:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    int val$touchX -> val$touchX
    int val$touchY -> val$touchY
    void run() -> run
com.videogo.ui.realplay.RealPlayActivity$12 -> com.videogo.ui.realplay.RealPlayActivity$12:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    int val$progress -> val$progress
    void run() -> run
com.videogo.ui.realplay.RealPlayActivity$13 -> com.videogo.ui.realplay.RealPlayActivity$13:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void run() -> run
com.videogo.ui.realplay.RealPlayActivity$2 -> com.videogo.ui.realplay.RealPlayActivity$2:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.videogo.ui.realplay.RealPlayActivity$3 -> com.videogo.ui.realplay.RealPlayActivity$3:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.realplay.RealPlayActivity$4 -> com.videogo.ui.realplay.RealPlayActivity$4:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.realplay.RealPlayActivity$5 -> com.videogo.ui.realplay.RealPlayActivity$5:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.videogo.ui.realplay.RealPlayActivity$6 -> com.videogo.ui.realplay.RealPlayActivity$6:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.videogo.ui.realplay.RealPlayActivity$7 -> com.videogo.ui.realplay.RealPlayActivity$7:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.videogo.ui.realplay.RealPlayActivity$8 -> com.videogo.ui.realplay.RealPlayActivity$8:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void run() -> run
com.videogo.ui.realplay.RealPlayActivity$9 -> com.videogo.ui.realplay.RealPlayActivity$9:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onDismiss() -> onDismiss
com.videogo.ui.realplay.RealPlayActivity$ScreenBroadcastReceiver -> com.videogo.ui.realplay.RealPlayActivity$ScreenBroadcastReceiver:
    com.videogo.ui.realplay.RealPlayActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.ui.realplay.SimpleRealPlayActivity -> com.videogo.ui.realplay.SimpleRealPlayActivity:
    java.lang.String TAG -> TAG
    com.videogo.realplay.RealPlayerManager mRealPlayMgr -> mRealPlayMgr
    com.videogo.realplay.RealPlayerHelper mRealPlayerHelper -> mRealPlayerHelper
    java.util.ArrayList mCameraInfoList -> mCameraInfoList
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    android.widget.RelativeLayout mDisplayView -> mDisplayView
    android.widget.RelativeLayout mTitleArea -> mTitleArea
    android.widget.ImageButton mBackBtn -> mBackBtn
    android.widget.TextView mTitleTv -> mTitleTv
    android.widget.RelativeLayout mPlayArea -> mPlayArea
    android.view.SurfaceView mSurfaceView -> mSurfaceView
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    android.widget.RelativeLayout mControlArea -> mControlArea
    android.widget.ImageButton mStopBtn -> mStopBtn
    android.widget.ImageButton mPlayBtn -> mPlayBtn
    com.videogo.widget.PagesGallery mPagesGallery -> mPagesGallery
    com.videogo.ui.realplay.SimpleRealPlayerAdapter mPagesAdapter -> mPagesAdapter
    com.videogo.ui.realplay.SimpleRealPlayerAdapter$RealPlayerHolder mSelectedRealPlayerHolder -> mSelectedRealPlayerHolder
    int mPosition -> mPosition
    int mOrientation -> mOrientation
    boolean mIsPlaying -> mIsPlaying
    android.graphics.Rect mCanDisplayRect -> mCanDisplayRect
    int mDisplayWidth -> mDisplayWidth
    int mDisplayHeight -> mDisplayHeight
    double mPlayRatio -> mPlayRatio
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    com.videogo.ui.realplay.SimpleRealPlayActivity$ScreenBroadcastReceiver mScreenBroadcastReceiver -> mScreenBroadcastReceiver
    android.app.AlertDialog mPlayFailDialog -> mPlayFailDialog
    com.videogo.widget.WaitDialog mWaitDialog -> mWaitDialog
    android.view.GestureDetector$OnGestureListener onGestureListener -> onGestureListener
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    void onResume() -> onResume
    void initViews() -> initViews
    void onStop() -> onStop
    void setPlayLoadingUI() -> setPlayLoadingUI
    void setPlayStopUI() -> setPlayStopUI
    void setPlayStartUI() -> setPlayStartUI
    void stopRealPlay(boolean) -> stopRealPlay
    void onDestroy() -> onDestroy
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void startRealPlay() -> startRealPlay
    void updateLoadingProgress(int) -> updateLoadingProgress
    boolean handleMessage(android.os.Message) -> handleMessage
    void handlePlaySuccess(android.os.Message) -> handlePlaySuccess
    void handlePlayFail(int) -> handlePlayFail
    void handlePasswordError(int,int,int,boolean) -> handlePasswordError
    void setPlayViewPosition() -> setPlayViewPosition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onOrientation() -> onOrientation
    void onClick(android.view.View) -> onClick
    void onSurfaceViewClick() -> onSurfaceViewClick
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void showPlayFailDialog(java.lang.String) -> showPlayFailDialog
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void dismissDialog(android.app.AlertDialog) -> dismissDialog
    void access$0(com.videogo.ui.realplay.SimpleRealPlayActivity) -> access$0
    void access$1(com.videogo.ui.realplay.SimpleRealPlayActivity,boolean) -> access$1
    com.videogo.ui.realplay.SimpleRealPlayerAdapter$RealPlayerHolder access$2(com.videogo.ui.realplay.SimpleRealPlayActivity) -> access$2
com.videogo.ui.realplay.SimpleRealPlayActivity$1 -> com.videogo.ui.realplay.SimpleRealPlayActivity$1:
    com.videogo.ui.realplay.SimpleRealPlayActivity this$0 -> this$0
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.videogo.ui.realplay.SimpleRealPlayActivity$2 -> com.videogo.ui.realplay.SimpleRealPlayActivity$2:
    com.videogo.ui.realplay.SimpleRealPlayActivity this$0 -> this$0
    int val$progress -> val$progress
    void run() -> run
com.videogo.ui.realplay.SimpleRealPlayActivity$ScreenBroadcastReceiver -> com.videogo.ui.realplay.SimpleRealPlayActivity$ScreenBroadcastReceiver:
    com.videogo.ui.realplay.SimpleRealPlayActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.ui.realplay.SimpleRealPlayerAdapter -> com.videogo.ui.realplay.SimpleRealPlayerAdapter:
    android.content.Context mContext -> mContext
    java.util.List mCameraInfoList -> mCameraInfoList
    int mOrientation -> mOrientation
    int mDisplayWidth -> mDisplayWidth
    void setOrientation(int) -> setOrientation
    void setDisplayWidthHeight(int,int) -> setDisplayWidthHeight
    void setCameraList(java.util.List) -> setCameraList
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void updateFigureIvLayoutParams(android.widget.ImageView,int) -> updateFigureIvLayoutParams
com.videogo.ui.realplay.SimpleRealPlayerAdapter$RealPlayerHolder -> com.videogo.ui.realplay.SimpleRealPlayerAdapter$RealPlayerHolder:
    android.widget.ImageView mFigureIv -> mFigureIv
    android.widget.RelativeLayout mLoadingRL -> mLoadingRL
    android.widget.TextView mWaittingTv -> mWaittingTv
    android.widget.ImageView mPlayIv -> mPlayIv
com.videogo.ui.remoteplayback.RemoteFileTimeBar -> com.videogo.ui.remoteplayback.RemoteFileTimeBar:
    java.lang.String TAG -> TAG
    java.util.List mFileList -> mFileList
    java.util.List mCloudFileList -> mCloudFileList
    java.util.Calendar mStartTime -> mStartTime
    java.util.Calendar mEndTime -> mEndTime
    int mLeftX -> mLeftX
    int mRightX -> mRightX
    float mMeasuredHeight -> mMeasuredHeight
    float mScreenWidth -> mScreenWidth
    float mHalfScreenWidth -> mHalfScreenWidth
    float mHourWith -> mHourWith
    java.util.ArrayList mClockList -> mClockList
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mAlarmPaint -> mAlarmPaint
    android.graphics.Paint mTransPaint -> mTransPaint
    android.graphics.Paint mTimePaint -> mTimePaint
    android.content.Context mContext -> mContext
    void init(android.content.Context) -> init
    float getScrollPosByPlayTime(long,int) -> getScrollPosByPlayTime
    java.util.Calendar pos2Calendar(int,int) -> pos2Calendar
    int getWidthByOrient(int) -> getWidthByOrient
    void drawFileLayout(java.util.List,java.util.List,java.util.Calendar,java.util.Calendar) -> drawFileLayout
    void setX(int,int) -> setX
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean isAlarmRecord(int) -> isAlarmRecord
    void drawTimePoint(android.graphics.Canvas) -> drawTimePoint
    void drawTimeLine(android.graphics.Canvas) -> drawTimeLine
    void drawTimeText(android.graphics.Canvas) -> drawTimeText
    java.util.List getFileRect(int,int) -> getFileRect
    java.util.List getCloudFileRect(int,int) -> getCloudFileRect
    void onMeasure(int,int) -> onMeasure
    java.util.Calendar getLastStopTime() -> getLastStopTime
com.videogo.ui.remoteplayback.RemotePlayBackActivity -> com.videogo.ui.remoteplayback.RemotePlayBackActivity:
    java.lang.String TAG -> TAG
    int MSG_PLAY_UI_UPDATE -> MSG_PLAY_UI_UPDATE
    int MSG_SEARCH_CLOUD_FILE_SUCCUSS -> MSG_SEARCH_CLOUD_FILE_SUCCUSS
    int MSG_SEARCH_CLOUD_FILE_FAIL -> MSG_SEARCH_CLOUD_FILE_FAIL
    int ALARM_MAX_DURATION -> ALARM_MAX_DURATION
    int STATUS_INIT -> STATUS_INIT
    int STATUS_START -> STATUS_START
    int STATUS_STOP -> STATUS_STOP
    int STATUS_PLAY -> STATUS_PLAY
    int STATUS_PAUSE -> STATUS_PAUSE
    com.videogo.openapi.bean.resp.CameraInfo mCameraInfo -> mCameraInfo
    java.util.List mCloudFileList -> mCloudFileList
    java.util.List mDeviceFileList -> mDeviceFileList
    java.util.Calendar mStartTime -> mStartTime
    java.util.Calendar mEndTime -> mEndTime
    java.util.Calendar mAlarmStartTime -> mAlarmStartTime
    java.util.Calendar mAlarmStopTime -> mAlarmStopTime
    com.videogo.remoteplayback.RemotePlayBackManager mRemotePlayBackMgr -> mRemotePlayBackMgr
    com.videogo.remoteplayback.RemotePlayBackHelper mRemotePlayBackHelper -> mRemotePlayBackHelper
    com.videogo.ui.util.AudioPlayUtil mAudioPlayUtil -> mAudioPlayUtil
    com.videogo.util.LocalInfo mLocalInfo -> mLocalInfo
    android.os.Handler mHandler -> mHandler
    float mRealRatio -> mRealRatio
    int mStatus -> mStatus
    boolean mIsOnStop -> mIsOnStop
    int mOrientation -> mOrientation
    long mStreamFlow -> mStreamFlow
    long mTotalStreamFlow -> mTotalStreamFlow
    android.graphics.Rect mRemotePlayBackRect -> mRemotePlayBackRect
    android.widget.RelativeLayout mRemotePlayBackPageLy -> mRemotePlayBackPageLy
    com.videogo.widget.TitleBar mTitleBar -> mTitleBar
    android.view.SurfaceView mRemotePlayBackSv -> mRemotePlayBackSv
    android.view.SurfaceHolder mRemotePlayBackSh -> mRemotePlayBackSh
    android.view.GestureDetector mPlaySvGestureDetector -> mPlaySvGestureDetector
    android.widget.LinearLayout mRemotePlayBackLoadingLy -> mRemotePlayBackLoadingLy
    android.widget.LinearLayout mRemotePlayBackLoadingPbLy -> mRemotePlayBackLoadingPbLy
    android.widget.TextView mRemotePlayBackLoadingTv -> mRemotePlayBackLoadingTv
    android.widget.TextView mRemotePlayBackTipTv -> mRemotePlayBackTipTv
    android.widget.ImageButton mRemotePlayBackReplayBtn -> mRemotePlayBackReplayBtn
    android.widget.ImageButton mRemotePlayBackLoadingPlayBtn -> mRemotePlayBackLoadingPlayBtn
    android.widget.RelativeLayout mRemotePlayBackControlRl -> mRemotePlayBackControlRl
    android.widget.ImageButton mRemotePlayBackBtn -> mRemotePlayBackBtn
    android.widget.ImageButton mRemotePlayBackSoundBtn -> mRemotePlayBackSoundBtn
    android.widget.TextView mRemotePlayBackFlowTv -> mRemotePlayBackFlowTv
    int mControlDisplaySec -> mControlDisplaySec
    long mPlayTime -> mPlayTime
    android.widget.LinearLayout mRemotePlayBackProgressLy -> mRemotePlayBackProgressLy
    android.widget.TextView mRemotePlayBackBeginTimeTv -> mRemotePlayBackBeginTimeTv
    android.widget.TextView mRemotePlayBackEndTimeTv -> mRemotePlayBackEndTimeTv
    android.widget.SeekBar mRemotePlayBackSeekBar -> mRemotePlayBackSeekBar
    android.widget.ProgressBar mRemotePlayBackProgressBar -> mRemotePlayBackProgressBar
    android.widget.RelativeLayout mRemotePlayBackCaptureRl -> mRemotePlayBackCaptureRl
    android.widget.RelativeLayout$LayoutParams mRemotePlayBackCaptureRlLp -> mRemotePlayBackCaptureRlLp
    android.widget.ImageView mRemotePlayBackCaptureIv -> mRemotePlayBackCaptureIv
    android.widget.ImageView mRemotePlayBackCaptureWatermarkIv -> mRemotePlayBackCaptureWatermarkIv
    int mCaptureDisplaySec -> mCaptureDisplaySec
    android.widget.LinearLayout mRemotePlayBackRecordLy -> mRemotePlayBackRecordLy
    android.widget.ImageView mRemotePlayBackRecordIv -> mRemotePlayBackRecordIv
    android.widget.TextView mRemotePlayBackRecordTv -> mRemotePlayBackRecordTv
    java.lang.String mRecordFilePath -> mRecordFilePath
    java.lang.String mRecordTime -> mRecordTime
    int mRecordSecond -> mRecordSecond
    android.widget.LinearLayout mRemotePlayBackOperateBar -> mRemotePlayBackOperateBar
    android.widget.ImageButton mRemotePlayBackCaptureBtn -> mRemotePlayBackCaptureBtn
    android.widget.ImageButton mRemotePlayBackRecordBtn -> mRemotePlayBackRecordBtn
    android.widget.ImageButton mRemotePlayBackRecordStartBtn -> mRemotePlayBackRecordStartBtn
    android.view.View mRemotePlayBackRecordContainer -> mRemotePlayBackRecordContainer
    com.videogo.util.RotateViewUtil mRecordRotateViewUtil -> mRecordRotateViewUtil
    android.widget.ImageButton mRemotePlayBackSmallRecordBtn -> mRemotePlayBackSmallRecordBtn
    android.widget.ImageButton mRemotePlayBackSmallRecordStartBtn -> mRemotePlayBackSmallRecordStartBtn
    android.view.View mRemotePlayBackSmallRecordContainer -> mRemotePlayBackSmallRecordContainer
    android.widget.ImageButton mRemotePlayBackSmallCaptureBtn -> mRemotePlayBackSmallCaptureBtn
    android.widget.RelativeLayout mRemotePlayBackFullOperateBar -> mRemotePlayBackFullOperateBar
    android.widget.ImageButton mRemotePlayBackFullPlayBtn -> mRemotePlayBackFullPlayBtn
    android.widget.ImageButton mRemotePlayBackFullSoundBtn -> mRemotePlayBackFullSoundBtn
    android.widget.ImageButton mRemotePlayBackFullCaptureBtn -> mRemotePlayBackFullCaptureBtn
    android.widget.ImageButton mRemotePlayBackFullRecordBtn -> mRemotePlayBackFullRecordBtn
    android.widget.ImageButton mRemotePlayBackFullRecordStartBtn -> mRemotePlayBackFullRecordStartBtn
    android.view.View mRemotePlayBackFullRecordContainer -> mRemotePlayBackFullRecordContainer
    android.widget.ImageButton mRemotePlayBackFullDownBtn -> mRemotePlayBackFullDownBtn
    android.widget.LinearLayout mRemotePlayBackFullFlowLy -> mRemotePlayBackFullFlowLy
    android.widget.TextView mRemotePlayBackFullRateTv -> mRemotePlayBackFullRateTv
    android.widget.TextView mRemotePlayBackFullFlowTv -> mRemotePlayBackFullFlowTv
    android.widget.TextView mRemotePlayBackRatioTv -> mRemotePlayBackRatioTv
    android.widget.RelativeLayout mRemotePlayBackTimeBarRl -> mRemotePlayBackTimeBarRl
    com.videogo.widget.TimeBarHorizontalScrollView mRemotePlayBackTimeBar -> mRemotePlayBackTimeBar
    com.videogo.ui.remoteplayback.RemoteFileTimeBar mRemoteFileTimeBar -> mRemoteFileTimeBar
    android.widget.TextView mRemotePlayBackTimeTv -> mRemotePlayBackTimeTv
    com.videogo.ui.remoteplayback.RemotePlayBackActivity$ScreenBroadcastReceiver mScreenBroadcastReceiver -> mScreenBroadcastReceiver
    java.util.Timer mUpdateTimer -> mUpdateTimer
    java.util.TimerTask mUpdateTimerTask -> mUpdateTimerTask
    com.videogo.widget.HVScrollView mHVScrollView -> mHVScrollView
    com.videogo.widget.WaitDialog mWaitDialog -> mWaitDialog
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    void initView() -> initView
    void initUI() -> initUI
    void showDatePicker() -> showDatePicker
    void onResume() -> onResume
    java.util.Calendar getTimeBarSeekTime() -> getTimeBarSeekTime
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void updateSoundUI() -> updateSoundUI
    void updateTimeBarUI() -> updateTimeBarUI
    void updateOperatorUI() -> updateOperatorUI
    void onOrientationChanged() -> onOrientationChanged
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void updateLoadingProgress(int) -> updateLoadingProgress
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleSearchDeviceFileSuccess() -> handleSearchDeviceFileSuccess
    java.util.Calendar getFileStartTime() -> getFileStartTime
    java.util.Calendar getFileStopTime() -> getFileStopTime
    void handleSearchNoFile() -> handleSearchNoFile
    void handleSearchCloudFileSuccess(java.util.Calendar) -> handleSearchCloudFileSuccess
    void handleSearchCloudFileFail(int) -> handleSearchCloudFileFail
    void handleConnectionException(int) -> handleConnectionException
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onTimeBarDownBtnClick() -> onTimeBarDownBtnClick
    void onRecordBtnClick() -> onRecordBtnClick
    void stopRemotePlayBackRecord() -> stopRemotePlayBackRecord
    void onCaptureRlClick() -> onCaptureRlClick
    void onSoundBtnClick() -> onSoundBtnClick
    void setRemotePlaySound() -> setRemotePlaySound
    void onCapturePicBtnClick() -> onCapturePicBtnClick
    void onRemotePlayBackSvClick() -> onRemotePlayBackSvClick
    void onRemotePlayBackSvDoubleClick(android.view.MotionEvent) -> onRemotePlayBackSvDoubleClick
    void searchCloudFileList(java.util.Calendar) -> searchCloudFileList
    void startRemotePlayBack(java.util.Calendar) -> startRemotePlayBack
    void stopRemotePlayBack() -> stopRemotePlayBack
    void pauseRemotePlayBack() -> pauseRemotePlayBack
    void resumeRemotePlayBack() -> resumeRemotePlayBack
    void setRemotePlayBackLoadingUI() -> setRemotePlayBackLoadingUI
    void setRemotePlayBackStopUI() -> setRemotePlayBackStopUI
    void setRemotePlayBackFailUI(java.lang.String) -> setRemotePlayBackFailUI
    void setRemotePlayBackSuccessUI() -> setRemotePlayBackSuccessUI
    void checkRemotePlayBackFlow() -> checkRemotePlayBackFlow
    void updateRemotePlayBackFlowTv(long) -> updateRemotePlayBackFlowTv
    void handleStartRecordSuccess(java.lang.String) -> handleStartRecordSuccess
    void handleCapturePictureSuccess(java.lang.String) -> handleCapturePictureSuccess
    void updateRemotePlayBackUI() -> updateRemotePlayBackUI
    void updateCaptureUI() -> updateCaptureUI
    void updateRecordTime() -> updateRecordTime
    void handlePasswordError(int,int,int) -> handlePasswordError
    void handlePlaySuccess(android.os.Message) -> handlePlaySuccess
    void setRemotePlayBackSvLayout(float) -> setRemotePlayBackSvLayout
    void handlePlayFail(int) -> handlePlayFail
    void handlePlayFinish() -> handlePlayFinish
    void startUpdateTimer() -> startUpdateTimer
    void stopUpdateTimer() -> stopUpdateTimer
    void sendMessage(int,int) -> sendMessage
    void sendMessage(int,int,java.lang.Object) -> sendMessage
    void dismissPopDialog(android.app.AlertDialog) -> dismissPopDialog
    void onScrollChanged(int,int,int,int,android.widget.HorizontalScrollView) -> onScrollChanged
    void onScrollStart(android.widget.HorizontalScrollView) -> onScrollStart
    void onScrollStop(android.widget.HorizontalScrollView) -> onScrollStop
    int access$0(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$0
    void access$1(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$1
    void access$2(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$2
    void access$3(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$3
    void access$4(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$4
    android.graphics.Rect access$5(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$5
    void access$6(com.videogo.ui.remoteplayback.RemotePlayBackActivity,android.graphics.Rect) -> access$6
    void access$7(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$7
    void access$8(com.videogo.ui.remoteplayback.RemotePlayBackActivity,android.view.MotionEvent) -> access$8
    java.util.Calendar access$9(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$9
    void access$10(com.videogo.ui.remoteplayback.RemotePlayBackActivity,long) -> access$10
    android.widget.ProgressBar access$11(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$11
    void access$12(com.videogo.ui.remoteplayback.RemotePlayBackActivity,java.util.Calendar) -> access$12
    void access$13(com.videogo.ui.remoteplayback.RemotePlayBackActivity,java.util.List) -> access$13
    void access$14(com.videogo.ui.remoteplayback.RemotePlayBackActivity,java.util.Calendar) -> access$14
    java.util.Calendar access$15(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$15
    void access$16(com.videogo.ui.remoteplayback.RemotePlayBackActivity,java.util.Calendar) -> access$16
    java.util.Calendar access$17(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$17
    com.videogo.widget.TitleBar access$18(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$18
    android.widget.TextView access$19(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$19
    com.videogo.util.LocalInfo access$20(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$20
    com.videogo.widget.HVScrollView access$21(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$21
    com.videogo.openapi.bean.resp.CameraInfo access$22(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$22
    java.util.Calendar access$23(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$23
    android.widget.RelativeLayout access$24(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$24
    android.widget.RelativeLayout access$25(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$25
    int access$26(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$26
    void access$27(com.videogo.ui.remoteplayback.RemotePlayBackActivity,int) -> access$27
    android.widget.RelativeLayout access$28(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$28
    int access$29(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$29
    void access$30(com.videogo.ui.remoteplayback.RemotePlayBackActivity,int) -> access$30
    java.lang.String access$31(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$31
    com.videogo.remoteplayback.RemotePlayBackManager access$32(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$32
    java.lang.String access$33(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$33
    int access$34(com.videogo.ui.remoteplayback.RemotePlayBackActivity) -> access$34
    void access$35(com.videogo.ui.remoteplayback.RemotePlayBackActivity,int) -> access$35
    void access$36(com.videogo.ui.remoteplayback.RemotePlayBackActivity,java.lang.String) -> access$36
com.videogo.ui.remoteplayback.RemotePlayBackActivity$1 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$1:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.remoteplayback.RemotePlayBackActivity$10 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$10:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    int val$touchX -> val$touchX
    int val$touchY -> val$touchY
    void run() -> run
com.videogo.ui.remoteplayback.RemotePlayBackActivity$11 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$11:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    java.util.Calendar val$seletedTime -> val$seletedTime
    void run() -> run
com.videogo.ui.remoteplayback.RemotePlayBackActivity$12 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$12:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void run() -> run
com.videogo.ui.remoteplayback.RemotePlayBackActivity$2 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$2:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.remoteplayback.RemotePlayBackActivity$3 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$3:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.videogo.ui.remoteplayback.RemotePlayBackActivity$4 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$4:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.videogo.ui.remoteplayback.RemotePlayBackActivity$5 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$5:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.videogo.ui.remoteplayback.RemotePlayBackActivity$6 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$6:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.videogo.ui.remoteplayback.RemotePlayBackActivity$7 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$7:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.remoteplayback.RemotePlayBackActivity$8 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$8:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.remoteplayback.RemotePlayBackActivity$9 -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$9:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    int val$progress -> val$progress
    void run() -> run
com.videogo.ui.remoteplayback.RemotePlayBackActivity$ScreenBroadcastReceiver -> com.videogo.ui.remoteplayback.RemotePlayBackActivity$ScreenBroadcastReceiver:
    com.videogo.ui.remoteplayback.RemotePlayBackActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.videogo.ui.util.AudioPlayUtil -> com.videogo.ui.util.AudioPlayUtil:
    android.media.SoundPool mSoundPool -> mSoundPool
    int CAPTURE_SOUND -> CAPTURE_SOUND
    int RECORD_SOUND -> RECORD_SOUND
    boolean mRingerMode -> mRingerMode
    int mStreamID -> mStreamID
    android.content.Context mContext -> mContext
    java.util.HashMap mSoundMap -> mSoundMap
    com.videogo.ui.util.AudioPlayUtil mAudioPlayUtil -> mAudioPlayUtil
    com.videogo.ui.util.AudioPlayUtil getInstance(android.app.Application) -> getInstance
    void playAudioFile(int) -> playAudioFile
    void stopAudioPlay() -> stopAudioPlay
    void getAlarmParams() -> getAlarmParams
com.videogo.ui.util.SignUtil -> com.videogo.ui.util.SignUtil:
    java.lang.String getGetSmsCodeSign(java.lang.String) -> getGetSmsCodeSign
    java.lang.String getGetAccessTokenSign(java.lang.String) -> getGetAccessTokenSign
    java.util.Map paramsInit(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> paramsInit
    org.json.JSONObject setJosn(java.util.Map) -> setJosn
    java.lang.String setList(java.util.List) -> setList
    java.util.Map getJosn(java.lang.String) -> getJosn
    java.util.List getList(java.lang.String) -> getList
com.videogo.ui.util.VerifySmsCodeUtil -> com.videogo.ui.util.VerifySmsCodeUtil:
    void openSmsVerifyDialog(int,android.content.Context) -> openSmsVerifyDialog
com.videogo.ui.util.VerifySmsCodeUtil$1 -> com.videogo.ui.util.VerifySmsCodeUtil$1:
    android.widget.EditText val$signEt -> val$signEt
    android.widget.EditText val$phoneEt -> val$phoneEt
    int val$type -> val$type
    android.content.Context val$context -> val$context
    void onClick(android.view.View) -> onClick
com.videogo.ui.util.VerifySmsCodeUtil$2 -> com.videogo.ui.util.VerifySmsCodeUtil$2:
    int val$type -> val$type
    android.content.Context val$context -> val$context
    android.widget.EditText val$userIdEt -> val$userIdEt
    android.widget.EditText val$phoneEt -> val$phoneEt
    android.widget.EditText val$smsCodeEt -> val$smsCodeEt
    void onClick(android.content.DialogInterface,int) -> onClick
com.videogo.ui.util.VerifySmsCodeUtil$GetSmsCodeTask -> com.videogo.ui.util.VerifySmsCodeUtil$GetSmsCodeTask:
    android.content.Context mContext -> mContext
    int mType -> mType
    android.app.Dialog mWaitDialog -> mWaitDialog
    int mErrorCode -> mErrorCode
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onError(int) -> onError
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.ui.util.VerifySmsCodeUtil$VerifySmsCodeTask -> com.videogo.ui.util.VerifySmsCodeUtil$VerifySmsCodeTask:
    android.content.Context mContext -> mContext
    int mType -> mType
    java.lang.String mUserId -> mUserId
    java.lang.String mSmsCode -> mSmsCode
    java.lang.String mPhone -> mPhone
    android.app.Dialog mWaitDialog -> mWaitDialog
    int mErrorCode -> mErrorCode
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onError(int) -> onError
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.videogo.util.Base64 -> com.videogo.util.Base64:
    char[] hp -> hp
    java.lang.String encode(byte[]) -> encode
    int a(char) -> a
    byte[] decode(java.lang.String) -> decode
    void a(java.lang.String,java.io.OutputStream) -> a
com.videogo.util.BeanConverter -> com.videogo.util.BeanConverter:
    java.lang.String TAG -> TAG
    java.util.Map toMap(java.lang.Object) -> toMap
    java.util.Map toMap(org.json.JSONObject) -> toMap
    org.json.JSONObject toJSON(java.lang.Object) -> toJSON
    java.lang.Object toJavaBean(java.lang.Object,java.util.Map) -> toJavaBean
    void toJavaBean(java.lang.Object,java.lang.String) -> toJavaBean
com.videogo.util.ByteUtil -> com.videogo.util.ByteUtil:
    void putShort(byte[],short,int) -> putShort
    short getShort(byte[],int) -> getShort
    void putInt(byte[],int,int) -> putInt
    int getInt(byte[],int) -> getInt
    void putLong(byte[],long,int) -> putLong
    long getLong(byte[],int) -> getLong
    void putChar(byte[],char,int) -> putChar
    char getChar(byte[],int) -> getChar
    void putFloat(byte[],float,int) -> putFloat
    float getFloat(byte[],int) -> getFloat
    void putDouble(byte[],double,int) -> putDouble
    double getDouble(byte[],int) -> getDouble
com.videogo.util.CollectionUtil -> com.videogo.util.CollectionUtil:
    boolean isEmpty(java.util.Collection) -> isEmpty
    boolean isNotEmpty(java.util.Collection) -> isNotEmpty
    boolean isEmpty(java.util.Map) -> isEmpty
    boolean isNotEmpty(java.util.Map) -> isNotEmpty
com.videogo.util.ConnectionDetector -> com.videogo.util.ConnectionDetector:
    int NO_NETWORK -> NO_NETWORK
    int CMNET -> CMNET
    int CMWAP -> CMWAP
    int WIFI -> WIFI
    int getConnectionType(android.content.Context) -> getConnectionType
    boolean isNetworkFor2G(android.content.Context) -> isNetworkFor2G
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    java.lang.String getTypeName(android.content.Context) -> getTypeName
com.videogo.util.DESHelper -> com.videogo.util.DESHelper:
    byte[] encryt(java.lang.String,java.lang.String) -> encryt
    java.lang.String decrypt(byte[],java.lang.String) -> decrypt
    java.lang.String encrytWithBase64(java.lang.String,java.lang.String) -> encrytWithBase64
    java.lang.String decryptWithBase64(java.lang.String,java.lang.String) -> decryptWithBase64
com.videogo.util.DateTimeUtil -> com.videogo.util.DateTimeUtil:
    java.lang.String TIME_FORMAT -> TIME_FORMAT
    java.lang.String DAY_FORMAT -> DAY_FORMAT
    java.util.Date getNow() -> getNow
    java.util.Date beginDate(java.util.Date) -> beginDate
    java.util.Date endDate(java.util.Date) -> endDate
    java.lang.String formatDateToString(java.util.Date,java.lang.String) -> formatDateToString
    java.lang.String formatTimeString(long) -> formatTimeString
    java.util.Date parseStringToDate(java.lang.String,java.lang.String) -> parseStringToDate
com.videogo.util.DevPwdUtil -> com.videogo.util.DevPwdUtil:
    java.lang.String TAG -> TAG
    void savePwd(com.videogo.device.DeviceInfoEx,java.lang.String) -> savePwd
    void savePwd(java.lang.String,java.lang.String) -> savePwd
    java.lang.String getPwd(com.videogo.device.DeviceInfoEx) -> getPwd
    void saveVerifyCodePwd(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> saveVerifyCodePwd
    java.lang.String getVerifyCodePwd(android.content.Context,java.lang.String,java.lang.String) -> getVerifyCodePwd
    void saveSafeModePwd(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> saveSafeModePwd
    java.lang.String getSafeModePwd(android.content.Context,java.lang.String,java.lang.String) -> getSafeModePwd
    void clearDevPwd(android.content.Context) -> clearDevPwd
com.videogo.util.GenerateFilePath -> com.videogo.util.GenerateFilePath:
    java.lang.String TAG -> TAG
    java.lang.String generateFilePath(java.lang.String,java.lang.String,java.lang.String) -> generateFilePath
    boolean saveBitmap2file(android.graphics.Bitmap,java.lang.String,java.lang.String) -> saveBitmap2file
    java.lang.String generateThumbnailPath(java.lang.String) -> generateThumbnailPath
com.videogo.util.HttpUtils -> com.videogo.util.HttpUtils:
    java.lang.String TAG -> TAG
    int hq -> hq
    java.lang.String hr -> hr
    java.lang.String hs -> hs
    java.lang.String ht -> ht
    android.content.Context mContext -> mContext
    com.videogo.util.HttpUtils hu -> hu
    javax.net.ssl.HostnameVerifier DO_NOT_VERIFY -> DO_NOT_VERIFY
    javax.net.ssl.HostnameVerifier hv -> hv
    void init(android.app.Application) -> init
    com.videogo.util.HttpUtils getInstance() -> getInstance
    java.lang.String sendPostRequest(java.lang.String) -> sendPostRequest
    java.lang.String getSslRequest(java.lang.String,java.lang.String) -> getSslRequest
    java.lang.String getRequest(java.lang.String,boolean) -> getRequest
    java.lang.String postRequest(java.lang.String,java.lang.String) -> postRequest
    java.lang.String httpsSend(java.lang.String) -> httpsSend
    byte[] getPostParam(java.util.List) -> getPostParam
com.videogo.util.HttpUtils$1 -> com.videogo.util.HttpUtils$1:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.videogo.util.HttpUtils$2 -> com.videogo.util.HttpUtils$2:
    com.videogo.util.HttpUtils hw -> hw
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.videogo.util.HttpUtils$FakeX509TrustManager -> com.videogo.util.HttpUtils$FakeX509TrustManager:
    javax.net.ssl.TrustManager[] hx -> hx
    java.security.cert.X509Certificate[] hy -> hy
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    boolean isClientTrusted(java.security.cert.X509Certificate[]) -> isClientTrusted
    boolean isServerTrusted(java.security.cert.X509Certificate[]) -> isServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void allowAllSSL() -> allowAllSSL
com.videogo.util.HttpUtils$FakeX509TrustManager$1 -> com.videogo.util.HttpUtils$FakeX509TrustManager$1:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.videogo.util.LocalInfo -> com.videogo.util.LocalInfo:
    java.lang.String TAG -> TAG
    android.content.SharedPreferences hz -> hz
    android.content.SharedPreferences$Editor hA -> hA
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String OAUTH -> OAUTH
    java.lang.String ACCESS_TOKEN -> ACCESS_TOKEN
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String DATE -> DATE
    java.lang.String TODAY_FLOW -> TODAY_FLOW
    java.lang.String MONTH_FLOW -> MONTH_FLOW
    java.lang.String TOTLE_FLOW -> TOTLE_FLOW
    java.lang.String LIMIT_FLOW -> LIMIT_FLOW
    java.lang.String HARD_CODE -> HARD_CODE
    java.lang.String HARD_NAME -> HARD_NAME
    java.lang.String SHOW_DEMO -> SHOW_DEMO
    java.lang.String IS_BIG_CAMERALIST -> IS_BIG_CAMERALIST
    java.lang.String hB -> hB
    java.lang.String IS_NET_WARN -> IS_NET_WARN
    java.lang.String IS_MESSAGE_PUSH -> IS_MESSAGE_PUSH
    java.lang.String REPORT_LAST_TIME -> REPORT_LAST_TIME
    java.lang.String CHECK_VERSION_LAST_TIME -> CHECK_VERSION_LAST_TIME
    java.lang.String IS_INTL -> IS_INTL
    java.lang.String AD_URL -> AD_URL
    java.lang.String cn -> cn
    java.lang.String hC -> hC
    java.lang.String co -> co
    java.lang.String hD -> hD
    java.lang.String hE -> hE
    java.lang.String hF -> hF
    long hG -> hG
    long hH -> hH
    long hI -> hI
    long hJ -> hJ
    int hK -> hK
    boolean hL -> hL
    boolean hM -> hM
    android.content.Context mContext -> mContext
    com.videogo.util.LocalInfo ca -> ca
    java.lang.String hN -> hN
    int hO -> hO
    java.lang.String hP -> hP
    java.lang.String hQ -> hQ
    android.location.Location hR -> hR
    boolean hS -> hS
    int hT -> hT
    int hU -> hU
    int hV -> hV
    boolean hW -> hW
    long hX -> hX
    long hY -> hY
    java.lang.String hZ -> hZ
    java.util.Map ia -> ia
    boolean ib -> ib
    com.videogo.alarm.NoticeInfo ic -> ic
    void init(android.app.Application) -> init
    com.videogo.util.LocalInfo getInstance() -> getInstance
    android.content.Context getContext() -> getContext
    boolean isSoundOpen() -> isSoundOpen
    void setSoundOpen(boolean) -> setSoundOpen
    void setGCMRunning(java.lang.Boolean) -> setGCMRunning
    boolean getGCMRunning() -> getGCMRunning
    void setScreenWidthHeight(int,int) -> setScreenWidthHeight
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    void setNavigationBarHeight(int) -> setNavigationBarHeight
    int getNavigationBarHeight() -> getNavigationBarHeight
    android.location.Location getMyLocation() -> getMyLocation
    void setMyLocation(android.location.Location) -> setMyLocation
    boolean getLocationChanged() -> getLocationChanged
    void setLocationChanged(boolean) -> setLocationChanged
    java.lang.String getHardwareNameFromWare() -> getHardwareNameFromWare
    java.lang.String getHardwareCode() -> getHardwareCode
    void setHardwareCode(java.lang.String) -> setHardwareCode
    java.lang.String getHardwareName() -> getHardwareName
    void setHardwareName(java.lang.String) -> setHardwareName
    java.lang.String getServAddr() -> getServAddr
    void setServAddr(java.lang.String) -> setServAddr
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getOAuth() -> getOAuth
    void setOAuth(java.lang.String) -> setOAuth
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getAccessToken() -> getAccessToken
    void setAccessToken(java.lang.String) -> setAccessToken
    boolean getIsLogin() -> getIsLogin
    java.lang.String getFilePath() -> getFilePath
    void setFilePath(java.lang.String) -> setFilePath
    void setDate(java.lang.String) -> setDate
    java.lang.String getDate() -> getDate
    void setCurFlow(long) -> setCurFlow
    long getCurFlow() -> getCurFlow
    void setTodayFlow(long) -> setTodayFlow
    long getTodayFlow() -> getTodayFlow
    void setMonthFlow(long) -> setMonthFlow
    long getMonthFlow() -> getMonthFlow
    void setTotleFlow(long) -> setTotleFlow
    long getTotleFlow() -> getTotleFlow
    void setLimitFlow(int) -> setLimitFlow
    int getLimitFlow() -> getLimitFlow
    boolean isMessagePush() -> isMessagePush
    void setIsMessagePush(boolean,boolean) -> setIsMessagePush
    void setNetWarn(boolean) -> setNetWarn
    java.lang.String getAdUrl() -> getAdUrl
    void setAdUrl(java.lang.String) -> setAdUrl
    boolean isNetWarn() -> isNetWarn
    long getmReportLastTime() -> getmReportLastTime
    void setmReportLastTime(long) -> setmReportLastTime
    long getmCheckVersionLastTime() -> getmCheckVersionLastTime
    void setmCheckVersionLastTime(long) -> setmCheckVersionLastTime
    void J() -> J
    void setLoginInfo(java.lang.String,java.lang.String) -> setLoginInfo
    android.content.SharedPreferences getSharePreferences() -> getSharePreferences
    java.lang.String getVersionName() -> getVersionName
    int getVersionCode() -> getVersionCode
    java.lang.String getHardwareCodeFromware() -> getHardwareCodeFromware
    java.lang.String getCameraIdUuid(java.lang.String) -> getCameraIdUuid
    java.lang.String getUuidCameraId(java.lang.String) -> getUuidCameraId
    com.videogo.alarm.NoticeInfo getNoticeInfo() -> getNoticeInfo
    void setNoticeInfo(com.videogo.alarm.NoticeInfo) -> setNoticeInfo
    void a(com.videogo.util.LocalInfo) -> a
com.videogo.util.LocalInfo$1 -> com.videogo.util.LocalInfo$1:
    com.videogo.util.LocalInfo ie -> ie
    void run() -> run
com.videogo.util.LogUtil -> com.videogo.util.LogUtil:
    boolean DEBUG -> DEBUG
    void debugLog(java.lang.String,java.lang.String) -> debugLog
    void errorLog(java.lang.String,java.lang.String) -> errorLog
    void infoLog(java.lang.String,java.lang.String) -> infoLog
    void verboseLog(java.lang.String,java.lang.String) -> verboseLog
    void warnLog(java.lang.String,java.lang.String) -> warnLog
    void debugLog(java.lang.String,java.lang.String,java.lang.Exception) -> debugLog
    void errorLog(java.lang.String,java.lang.String,java.lang.Exception) -> errorLog
    void warnLog(java.lang.String,java.lang.String,java.lang.Exception) -> warnLog
    void warnLog(java.lang.String,java.lang.Exception) -> warnLog
    java.lang.String makeLogTag(java.lang.Class) -> makeLogTag
com.videogo.util.MD5Util -> com.videogo.util.MD5Util:
    char[] hexDigits -> hexDigits
    java.security.MessageDigest messagedigest -> messagedigest
    java.lang.String getMD5String(java.lang.String) -> getMD5String
    boolean checkPassword(java.lang.String,java.lang.String) -> checkPassword
    java.lang.String getFileMD5String(java.io.File) -> getFileMD5String
    void main(java.lang.String[]) -> main
    java.lang.String getFileMD5String_old(java.io.File) -> getFileMD5String_old
    java.lang.String getMD5String(byte[]) -> getMD5String
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],int,int) -> a
    void a(byte,java.lang.StringBuffer) -> a
    java.lang.String md5Crypto(java.lang.String) -> md5Crypto
com.videogo.util.RotateViewUtil -> com.videogo.util.RotateViewUtil:
    int if -> if
    float ig -> ig
    float ih -> ih
    float ii -> ii
    android.view.View ij -> ij
    android.view.View ik -> ik
    android.view.View il -> il
    void applyRotation(android.view.View,android.view.View,android.view.View,float,float) -> applyRotation
    android.view.View a(com.videogo.util.RotateViewUtil) -> a
    android.view.View b(com.videogo.util.RotateViewUtil) -> b
    android.view.View c(com.videogo.util.RotateViewUtil) -> c
    float d(com.videogo.util.RotateViewUtil) -> d
    float e(com.videogo.util.RotateViewUtil) -> e
    float f(com.videogo.util.RotateViewUtil) -> f
    int g(com.videogo.util.RotateViewUtil) -> g
com.videogo.util.RotateViewUtil$DisplayEndView -> com.videogo.util.RotateViewUtil$DisplayEndView:
    com.videogo.util.RotateViewUtil im -> im
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.videogo.util.RotateViewUtil$DisplayNextView -> com.videogo.util.RotateViewUtil$DisplayNextView:
    com.videogo.util.RotateViewUtil im -> im
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.videogo.util.RotateViewUtil$SwapViews -> com.videogo.util.RotateViewUtil$SwapViews:
    com.videogo.util.RotateViewUtil im -> im
    void run() -> run
com.videogo.util.SDCardUtil -> com.videogo.util.SDCardUtil:
    long PIC_MIN_MEM_SPACE -> PIC_MIN_MEM_SPACE
    long REC_MIN_MEM_SPACE -> REC_MIN_MEM_SPACE
    java.io.File getSDCardPath() -> getSDCardPath
    long getSDCardRemainSize() -> getSDCardRemainSize
    boolean isSDCardUseable() -> isSDCardUseable
com.videogo.util.Utils -> com.videogo.util.Utils:
    android.os.PowerManager$WakeLock in -> in
    double io -> io
    java.lang.String getNetTypeName(android.content.Context) -> getNetTypeName
    java.lang.String getVersionName(android.content.Context) -> getVersionName
    void showToast(android.content.Context,java.lang.String) -> showToast
    void showToast(android.content.Context,int,int) -> showToast
    void showToast(android.content.Context,int) -> showToast
    java.lang.String getErrorTip(android.content.Context,int,int) -> getErrorTip
    void acquireWakeLock(android.content.Context) -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
    java.lang.String getCPUSerial() -> getCPUSerial
    java.lang.String getAndroidID(android.content.Context) -> getAndroidID
    void clearAllNotification(android.content.Context) -> clearAllNotification
    boolean isTopActivity(android.content.Context) -> isTopActivity
    boolean isServiceRunning(android.content.Context,java.lang.String) -> isServiceRunning
    void hideAppNotification(android.content.Context) -> hideAppNotification
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.lang.String inputStreamToChars(java.io.InputStream) -> inputStreamToChars
    java.io.InputStream stringToInputStream(java.lang.String) -> stringToInputStream
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    void showLog(android.content.Context,java.lang.String) -> showLog
    void showLogAsyn(android.content.Context,java.lang.String) -> showLogAsyn
    java.lang.String longToStrDate(long) -> longToStrDate
    java.util.Calendar parseTimeToCalendar(java.lang.String) -> parseTimeToCalendar
    void reportToService(android.content.Context) -> reportToService
    java.lang.String s(int) -> s
    boolean isBlankExt(java.lang.String) -> isBlankExt
    boolean isPad(android.content.Context) -> isPad
    boolean isSupportTel(android.content.Context) -> isSupportTel
    java.lang.String OSD2Time(java.util.Calendar) -> OSD2Time
    long get19TimeInMillis(java.lang.String) -> get19TimeInMillis
    long get14TimeInMillis(java.lang.String) -> get14TimeInMillis
    java.util.Calendar convert14Calender(java.lang.String) -> convert14Calender
    java.util.Calendar convert16Calender(java.lang.String) -> convert16Calender
    java.util.Calendar convert19Calender(java.lang.String) -> convert19Calender
    java.lang.String convert19Time(java.util.Calendar) -> convert19Time
    java.lang.String calendar2String(java.util.Calendar) -> calendar2String
    java.lang.String date2String(java.util.Date) -> date2String
    boolean isNumeric(java.lang.String) -> isNumeric
    java.lang.String g(java.lang.String) -> g
    boolean isIp(java.lang.String) -> isIp
    void saveCapturePictrue(java.lang.String,java.lang.String,byte[],int,int,int,android.content.res.Resources,int) -> saveCapturePictrue
    boolean a(byte[],int,int,java.io.FileOutputStream,android.content.res.Resources,int) -> a
    android.widget.RelativeLayout$LayoutParams getPlayViewLp(double,int,int,int,int,int) -> getPlayViewLp
    java.lang.String bytes2MB(float) -> bytes2MB
    java.lang.String calcPercent(double,double) -> calcPercent
    void saveBitmapToFile(android.graphics.Bitmap,java.lang.String) -> saveBitmapToFile
    void saveBytesToFile(byte[],java.lang.String) -> saveBytesToFile
    void deleteFile(java.io.File) -> deleteFile
    int getVoiceVolume(byte[],int) -> getVoiceVolume
    android.graphics.Bitmap getImageFromAssetsFile(android.content.Context,java.lang.String) -> getImageFromAssetsFile
    android.graphics.drawable.Drawable getDrawableFromAssetsFile(android.content.Context,java.lang.String) -> getDrawableFromAssetsFile
    android.graphics.drawable.StateListDrawable newSelector(android.content.Context,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> newSelector
    android.content.res.ColorStateList createColorStateList(int,int,int,int) -> createColorStateList
    java.lang.String getUrlValue(java.lang.String,java.lang.String,java.lang.String) -> getUrlValue
com.videogo.util.Utils$1 -> com.videogo.util.Utils$1:
    android.content.Context aq -> aq
    java.lang.String ip -> ip
    void run() -> run
com.videogo.util.WaterMarkUtil -> com.videogo.util.WaterMarkUtil:
    com.videogo.util.WaterMarkUtil iq -> iq
    com.videogo.util.WaterMarkUtil getInstance() -> getInstance
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> createBitmap
com.videogo.voicetalk.VoiceTalk -> com.videogo.voicetalk.VoiceTalk:
    java.lang.String TAG -> TAG
    com.hikvision.audio.AudioCodecParam ir -> ir
    com.hikvision.audio.AudioEngine is -> is
    boolean it -> it
    com.hik.CASClient.CASClient mCASClient -> mCASClient
    com.hik.TTSClient.TTSClient iu -> iu
    int mSessionHandle -> mSessionHandle
    int iv -> iv
    int mRealPlayType -> mRealPlayType
    android.os.Handler mHandler -> mHandler
    int iw -> iw
    int ix -> ix
    boolean iy -> iy
    com.videogo.camera.CameraInfoEx mCameraInfoEx -> mCameraInfoEx
    com.hik.CASClient.ST_STREAM_INFO mStreamInfo -> mStreamInfo
    java.lang.String iz -> iz
    boolean iA -> iA
    boolean iB -> iB
    java.util.concurrent.ExecutorService iC -> iC
    com.videogo.voicetalk.VoiceTalkManager iD -> iD
    int iE -> iE
    void onRecordDataCallBack(byte[],int) -> onRecordDataCallBack
    void onCaptureDataCallBack(byte[],int) -> onCaptureDataCallBack
    void onErrorInfo(java.lang.String,java.lang.String) -> onErrorInfo
    void setHandler(android.os.Handler) -> setHandler
    void setReportTalkVolume(boolean) -> setReportTalkVolume
    void setVoiceTalkStatus(boolean) -> setVoiceTalkStatus
    void setStopStatus(boolean) -> setStopStatus
    void startCasVoiceTalk(com.videogo.camera.CameraInfoEx,com.hik.CASClient.ST_STREAM_INFO,int) -> startCasVoiceTalk
    void onDataCallBack(int,int,int,byte[],int) -> onDataCallBack
    void onMessageCallBack(int,int,int,int,int,int) -> onMessageCallBack
    void startTtsVoiceTalk(com.videogo.camera.CameraInfoEx,java.lang.String,int) -> startTtsVoiceTalk
    void onDataCallBack(byte[],int) -> onDataCallBack
    void onMessageCallBack(int) -> onMessageCallBack
    void stopCasVoiceTalk() -> stopCasVoiceTalk
    void stopTtsVoiceTalk() -> stopTtsVoiceTalk
    void b(byte[],int) -> b
    void c(byte[],int) -> c
    void K() -> K
    void t(int) -> t
    void u(int) -> u
    void L() -> L
    void M() -> M
    void N() -> N
    void d(byte[],int) -> d
    void sendMessage(int,int,int) -> sendMessage
    void a(com.videogo.voicetalk.VoiceTalk,byte[],int) -> a
com.videogo.voicetalk.VoiceTalk$1 -> com.videogo.voicetalk.VoiceTalk$1:
    com.videogo.voicetalk.VoiceTalk iF -> iF
    byte[] iG -> iG
    int iH -> iH
    void run() -> run
com.videogo.voicetalk.VoiceTalkManager -> com.videogo.voicetalk.VoiceTalkManager:
    java.lang.String TAG -> TAG
    com.videogo.realplay.RealPlayerHelper$PlayStage iI -> iI
    com.videogo.voicetalk.VoiceTalk iJ -> iJ
    com.videogo.camera.CameraInfoEx mCameraInfoEx -> mCameraInfoEx
    com.videogo.device.DeviceInfoEx mDeviceInfoEx -> mDeviceInfoEx
    java.lang.String mSessionID -> mSessionID
    android.os.Handler mHandler -> mHandler
    boolean mStopStatus -> mStopStatus
    com.hik.CASClient.ST_STREAM_INFO mStreamInfo -> mStreamInfo
    int mRealPlayType -> mRealPlayType
    com.videogo.main.AppManager mAppManager -> mAppManager
    void setCameraInfo(com.videogo.camera.CameraInfoEx,int) -> setCameraInfo
    com.videogo.device.DeviceInfoEx getDeviceInfoEx() -> getDeviceInfoEx
    com.videogo.camera.CameraInfoEx getCameraInfoEx() -> getCameraInfoEx
    void setHandler(android.os.Handler) -> setHandler
    android.os.Handler getHandler() -> getHandler
    void setStopStatus(boolean) -> setStopStatus
    boolean getStopStatus() -> getStopStatus
    com.videogo.realplay.RealPlayerHelper$PlayStage getVoiceTalkStage() -> getVoiceTalkStage
    void setVoiceTalkStage(com.videogo.realplay.RealPlayerHelper$PlayStage) -> setVoiceTalkStage
    void startVoiceTalk() -> startVoiceTalk
    void stopVoiceTalk() -> stopVoiceTalk
    void stopAllTalk() -> stopAllTalk
    void setReportTalkVolume(boolean) -> setReportTalkVolume
    void setVoiceTalkStatus(boolean) -> setVoiceTalkStatus
    void startCasVoiceTalk() -> startCasVoiceTalk
    void startRtspVoiceTalk() -> startRtspVoiceTalk
com.videogo.widget.CompatWebViewClient -> com.videogo.widget.CompatWebViewClient:
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageStartedCompat(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStartedCompat
com.videogo.widget.HVScrollView -> com.videogo.widget.HVScrollView:
    int ANIMATED_SCROLL_GAP -> ANIMATED_SCROLL_GAP
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    long mLastScroll -> mLastScroll
    android.graphics.Rect mTempRect -> mTempRect
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollViewMovedFocus -> mScrollViewMovedFocus
    float mLastMotionY -> mLastMotionY
    float mLastMotionX -> mLastMotionX
    boolean mIsLayoutDirty -> mIsLayoutDirty
    android.view.View mChildToScrollTo -> mChildToScrollTo
    boolean mIsBeingDragged -> mIsBeingDragged
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mFillViewport -> mFillViewport
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    int mTouchSlop -> mTouchSlop
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    boolean mFlingEnabled -> mFlingEnabled
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getLeftFadingEdgeStrength() -> getLeftFadingEdgeStrength
    float getRightFadingEdgeStrength() -> getRightFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmountV() -> getMaxScrollAmountV
    int getMaxScrollAmountH() -> getMaxScrollAmountH
    void initScrollView() -> initScrollView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScrollV() -> canScrollV
    boolean canScrollH() -> canScrollH
    boolean isFillViewport() -> isFillViewport
    void setFillViewport(boolean) -> setFillViewport
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean inChild(int,int) -> inChild
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    android.view.View findFocusableViewInBoundsV(boolean,int,int) -> findFocusableViewInBoundsV
    android.view.View findFocusableViewInBoundsH(boolean,int,int) -> findFocusableViewInBoundsH
    boolean fullScrollV(int) -> fullScrollV
    boolean fullScrollH(int) -> fullScrollH
    boolean scrollAndFocusV(int,int,int) -> scrollAndFocusV
    boolean scrollAndFocusH(int,int,int) -> scrollAndFocusH
    boolean arrowScrollV(int) -> arrowScrollV
    boolean arrowScrollH(int) -> arrowScrollH
    boolean isOffScreenV(android.view.View) -> isOffScreenV
    boolean isOffScreenH(android.view.View) -> isOffScreenH
    boolean isWithinDeltaOfScreenV(android.view.View,int,int) -> isWithinDeltaOfScreenV
    boolean isWithinDeltaOfScreenH(android.view.View,int) -> isWithinDeltaOfScreenH
    void doScrollY(int) -> doScrollY
    void doScrollX(int) -> doScrollX
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollTo(int,int) -> smoothScrollTo
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> scrollToChild
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    int computeScrollDeltaToGetChildRectOnScreenV(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreenV
    int computeScrollDeltaToGetChildRectOnScreenH(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreenH
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    void fling(int,int) -> fling
    void scrollTo(int,int) -> scrollTo
    int clamp(int,int,int) -> clamp
    boolean isFlingEnabled() -> isFlingEnabled
    void setFlingEnabled(boolean) -> setFlingEnabled
com.videogo.widget.PagesGallery -> com.videogo.widget.PagesGallery:
    java.lang.String TAG -> TAG
    boolean setSelection -> setSelection
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.videogo.widget.ProgressBarHaveText -> com.videogo.widget.ProgressBarHaveText:
    java.lang.String iK -> iK
    android.graphics.Paint iL -> iL
    void setProgress(int) -> setProgress
    void onDraw(android.graphics.Canvas) -> onDraw
    void O() -> O
    void setText(int) -> setText
com.videogo.widget.PullToRefreshFooter -> com.videogo.widget.PullToRefreshFooter:
    android.widget.LinearLayout mLoadLayout -> mLoadLayout
    android.widget.TextView mHintView -> mHintView
    android.widget.TextView mHintMoreView -> mHintMoreView
    com.videogo.widget.PullToRefreshFooter$Style mStyle -> mStyle
    void pullToRefresh() -> pullToRefresh
    void refreshing() -> refreshing
    void releaseToRefresh() -> releaseToRefresh
    void onPull(float) -> onPull
    void reset() -> reset
    void disableRefresh() -> disableRefresh
com.videogo.widget.PullToRefreshFooter$Style -> com.videogo.widget.PullToRefreshFooter$Style:
    com.videogo.widget.PullToRefreshFooter$Style NORMAL -> NORMAL
    com.videogo.widget.PullToRefreshFooter$Style MORE -> MORE
    com.videogo.widget.PullToRefreshFooter$Style EMPTY_NO_MORE -> EMPTY_NO_MORE
    com.videogo.widget.PullToRefreshFooter$Style[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.widget.PullToRefreshFooter$Style[] values() -> values
    com.videogo.widget.PullToRefreshFooter$Style valueOf(java.lang.String) -> valueOf
com.videogo.widget.PullToRefreshHeader -> com.videogo.widget.PullToRefreshHeader:
    android.widget.ImageView mArrowImageView -> mArrowImageView
    android.widget.ProgressBar mProgressBar -> mProgressBar
    android.widget.TextView mHintTextView -> mHintTextView
    android.widget.TextView mHeaderTimeView -> mHeaderTimeView
    android.widget.TextView mHintMoreView -> mHintMoreView
    android.view.ViewGroup mHeaderTimelayout -> mHeaderTimelayout
    android.view.animation.Animation mRotateUpAnim -> mRotateUpAnim
    android.view.animation.Animation mRotateDownAnim -> mRotateDownAnim
    com.videogo.widget.PullToRefreshHeader$Style mStyle -> mStyle
    int ROTATE_ANIM_DURATION -> ROTATE_ANIM_DURATION
    void pullToRefresh() -> pullToRefresh
    void refreshing() -> refreshing
    void releaseToRefresh() -> releaseToRefresh
    void onPull(float) -> onPull
    void reset() -> reset
    void disableRefresh() -> disableRefresh
    void setLastRefreshTime(java.lang.CharSequence) -> setLastRefreshTime
com.videogo.widget.PullToRefreshHeader$Style -> com.videogo.widget.PullToRefreshHeader$Style:
    com.videogo.widget.PullToRefreshHeader$Style NORMAL -> NORMAL
    com.videogo.widget.PullToRefreshHeader$Style NO_TIME -> NO_TIME
    com.videogo.widget.PullToRefreshHeader$Style MORE -> MORE
    com.videogo.widget.PullToRefreshHeader$Style[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.widget.PullToRefreshHeader$Style[] values() -> values
    com.videogo.widget.PullToRefreshHeader$Style valueOf(java.lang.String) -> valueOf
com.videogo.widget.RingView -> com.videogo.widget.RingView:
    android.graphics.Paint iL -> iL
    android.content.Context mContext -> mContext
    float iM -> iM
    float iN -> iN
    float iO -> iO
    void onDraw(android.graphics.Canvas) -> onDraw
    void setMinRadiusAndDistance(float,int) -> setMinRadiusAndDistance
    void run() -> run
com.videogo.widget.Rotate3dAnimation -> com.videogo.widget.Rotate3dAnimation:
    float iP -> iP
    float iQ -> iQ
    float ig -> ig
    float ih -> ih
    float ii -> ii
    boolean iR -> iR
    android.graphics.Camera iS -> iS
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.videogo.widget.TimeBarHorizontalScrollView -> com.videogo.widget.TimeBarHorizontalScrollView:
    boolean iT -> iT
    com.videogo.widget.TimeBarHorizontalScrollView$TimeScrollBarScrollListener iU -> iU
    android.os.Handler mHandler -> mHandler
    int iV -> iV
    int iW -> iW
    boolean iX -> iX
    void P() -> P
    void setEnable(boolean) -> setEnable
    void setTimeScrollBarScrollListener(com.videogo.widget.TimeBarHorizontalScrollView$TimeScrollBarScrollListener) -> setTimeScrollBarScrollListener
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void Q() -> Q
    void a(com.videogo.widget.TimeBarHorizontalScrollView) -> a
com.videogo.widget.TimeBarHorizontalScrollView$1 -> com.videogo.widget.TimeBarHorizontalScrollView$1:
    com.videogo.widget.TimeBarHorizontalScrollView iY -> iY
    void handleMessage(android.os.Message) -> handleMessage
com.videogo.widget.TimeBarHorizontalScrollView$TimeScrollBarScrollListener -> com.videogo.widget.TimeBarHorizontalScrollView$TimeScrollBarScrollListener:
    void onScrollChanged(int,int,int,int,android.widget.HorizontalScrollView) -> onScrollChanged
    void onScrollStart(android.widget.HorizontalScrollView) -> onScrollStart
    void onScrollStop(android.widget.HorizontalScrollView) -> onScrollStop
com.videogo.widget.TitleBar -> com.videogo.widget.TitleBar:
    android.content.Context mContext -> mContext
    android.view.ViewGroup iZ -> iZ
    android.widget.TextView ja -> ja
    android.widget.LinearLayout jb -> jb
    android.widget.LinearLayout jc -> jc
    int jd -> jd
    int je -> je
    int jf -> jf
    int jg -> jg
    void init(android.content.Context) -> init
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setBackgroundColor(int) -> setBackgroundColor
    void setOnTitleClickListener(android.view.View$OnClickListener) -> setOnTitleClickListener
    android.widget.Button addTitleButton(int,android.view.View$OnClickListener) -> addTitleButton
    android.widget.Button addTitleButton(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> addTitleButton
    void addTitleView(android.view.View) -> addTitleView
    android.widget.Button addLeftButton(int,android.view.View$OnClickListener) -> addLeftButton
    android.widget.Button addLeftButton(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> addLeftButton
    android.widget.Button addRightButton(int,android.view.View$OnClickListener) -> addRightButton
    android.widget.Button addRightButton(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> addRightButton
    void addRightView(android.view.View) -> addRightView
    android.widget.ImageView addRightProgress() -> addRightProgress
    android.widget.Button addRightTextButton(java.lang.CharSequence,android.view.View$OnClickListener) -> addRightTextButton
    android.widget.Button addBackButton(android.view.View$OnClickListener) -> addBackButton
com.videogo.widget.WaitDialog -> com.videogo.widget.WaitDialog:
    android.content.Context mContext -> mContext
    android.widget.TextView mWaitTv -> mWaitTv
    java.lang.String mWaitingTxt -> mWaitingTxt
    void onCreate(android.os.Bundle) -> onCreate
    void setWaitText(java.lang.String) -> setWaitText
    void show() -> show
    void dismiss() -> dismiss
    void cancel() -> cancel
com.videogo.widget.WebViewEx -> com.videogo.widget.WebViewEx:
    boolean DEBUG -> DEBUG
    java.lang.String jh -> jh
    java.lang.String ji -> ji
    java.lang.String jj -> jj
    java.lang.String jk -> jk
    java.lang.String jl -> jl
    java.lang.String[] jm -> jm
    java.util.HashMap jn -> jn
    java.lang.String jo -> jo
    void init(android.content.Context) -> init
    void addJavascriptInterface(java.lang.Object,java.lang.String) -> addJavascriptInterface
    void removeJavascriptInterface(java.lang.String) -> removeJavascriptInterface
    boolean R() -> R
    void S() -> S
    void a(android.webkit.WebView) -> a
    void T() -> T
    java.lang.String U() -> U
    void a(java.lang.String,java.lang.Object,java.lang.StringBuilder) -> a
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
    boolean a(android.webkit.JsPromptResult,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    java.lang.Class a(java.lang.Object) -> a
    boolean h(java.lang.String) -> h
    boolean V() -> V
    boolean W() -> W
    void a(com.videogo.widget.WebViewEx,android.webkit.WebView) -> a
    boolean a(com.videogo.widget.WebViewEx,android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
com.videogo.widget.WebViewEx$WebChromeClientEx -> com.videogo.widget.WebViewEx$WebChromeClientEx:
    com.videogo.widget.WebViewEx dF -> dF
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
com.videogo.widget.WebViewEx$WebViewClientEx -> com.videogo.widget.WebViewEx$WebViewClientEx:
    com.videogo.widget.WebViewEx dF -> dF
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onPageStartedCompat(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStartedCompat
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.videogo.widget.pulltorefresh.EmptyViewMethodAccessor -> com.videogo.widget.pulltorefresh.EmptyViewMethodAccessor:
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
    void setEmptyView(android.view.View) -> setEmptyView
com.videogo.widget.pulltorefresh.IPullToRefresh -> com.videogo.widget.pulltorefresh.IPullToRefresh:
    boolean demo() -> demo
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode getCurrentMode() -> getCurrentMode
    boolean getFilterTouchEvents() -> getFilterTouchEvents
    com.videogo.widget.pulltorefresh.LoadingLayoutProxy getLoadingLayoutProxy() -> getLoadingLayoutProxy
    com.videogo.widget.pulltorefresh.LoadingLayoutProxy getLoadingLayoutProxy(boolean,boolean) -> getLoadingLayoutProxy
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode getMode() -> getMode
    android.view.View getRefreshableView() -> getRefreshableView
    boolean getShowViewWhileRefreshing() -> getShowViewWhileRefreshing
    com.videogo.widget.pulltorefresh.IPullToRefresh$State getState() -> getState
    boolean isPullToRefreshEnabled() -> isPullToRefreshEnabled
    boolean isPullToRefreshOverScrollEnabled() -> isPullToRefreshOverScrollEnabled
    boolean isRefreshing() -> isRefreshing
    boolean isScrollingWhileRefreshingEnabled() -> isScrollingWhileRefreshingEnabled
    void onRefreshComplete() -> onRefreshComplete
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setMode(com.videogo.widget.pulltorefresh.IPullToRefresh$Mode) -> setMode
    void setOnPullEventListener(com.videogo.widget.pulltorefresh.IPullToRefresh$OnPullEventListener) -> setOnPullEventListener
    void setOnRefreshListener(com.videogo.widget.pulltorefresh.IPullToRefresh$OnRefreshListener) -> setOnRefreshListener
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
com.videogo.widget.pulltorefresh.IPullToRefresh$Mode -> com.videogo.widget.pulltorefresh.IPullToRefresh$Mode:
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode DISABLED -> DISABLED
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode PULL_FROM_START -> PULL_FROM_START
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode PULL_FROM_END -> PULL_FROM_END
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode BOTH -> BOTH
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode MANUAL_REFRESH_ONLY -> MANUAL_REFRESH_ONLY
    int mIntValue -> mIntValue
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode mapIntToValue(int) -> mapIntToValue
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode getDefault() -> getDefault
    boolean permitsPullToRefresh() -> permitsPullToRefresh
    boolean showHeaderLoadingLayout() -> showHeaderLoadingLayout
    boolean showFooterLoadingLayout() -> showFooterLoadingLayout
    int getIntValue() -> getIntValue
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode[] values() -> values
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode valueOf(java.lang.String) -> valueOf
com.videogo.widget.pulltorefresh.IPullToRefresh$OnPullEventListener -> com.videogo.widget.pulltorefresh.IPullToRefresh$OnPullEventListener:
    void onPullEvent(com.videogo.widget.pulltorefresh.PullToRefreshBase,com.videogo.widget.pulltorefresh.IPullToRefresh$State,com.videogo.widget.pulltorefresh.IPullToRefresh$Mode) -> onPullEvent
com.videogo.widget.pulltorefresh.IPullToRefresh$OnRefreshListener -> com.videogo.widget.pulltorefresh.IPullToRefresh$OnRefreshListener:
    void onRefresh(com.videogo.widget.pulltorefresh.PullToRefreshBase,boolean) -> onRefresh
com.videogo.widget.pulltorefresh.IPullToRefresh$State -> com.videogo.widget.pulltorefresh.IPullToRefresh$State:
    com.videogo.widget.pulltorefresh.IPullToRefresh$State RESET -> RESET
    com.videogo.widget.pulltorefresh.IPullToRefresh$State PULL_TO_REFRESH -> PULL_TO_REFRESH
    com.videogo.widget.pulltorefresh.IPullToRefresh$State RELEASE_TO_REFRESH -> RELEASE_TO_REFRESH
    com.videogo.widget.pulltorefresh.IPullToRefresh$State REFRESHING -> REFRESHING
    com.videogo.widget.pulltorefresh.IPullToRefresh$State MANUAL_REFRESHING -> MANUAL_REFRESHING
    com.videogo.widget.pulltorefresh.IPullToRefresh$State OVERSCROLLING -> OVERSCROLLING
    int mIntValue -> mIntValue
    com.videogo.widget.pulltorefresh.IPullToRefresh$State[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.widget.pulltorefresh.IPullToRefresh$State mapIntToValue(int) -> mapIntToValue
    int getIntValue() -> getIntValue
    com.videogo.widget.pulltorefresh.IPullToRefresh$State[] values() -> values
    com.videogo.widget.pulltorefresh.IPullToRefresh$State valueOf(java.lang.String) -> valueOf
com.videogo.widget.pulltorefresh.LoadingLayout -> com.videogo.widget.pulltorefresh.LoadingLayout:
    boolean mHeaderOrFooter -> mHeaderOrFooter
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation mScrollDirection -> mScrollDirection
    android.view.View mContentView -> mContentView
    java.lang.Runnable mPostRenderRunnable -> mPostRenderRunnable
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation
    void setContentView(int) -> setContentView
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    int getContentSize(com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation) -> getContentSize
    void pullToRefresh() -> pullToRefresh
    void refreshing() -> refreshing
    void releaseToRefresh() -> releaseToRefresh
    void onPull(float) -> onPull
    void reset() -> reset
    void disableRefresh() -> disableRefresh
    void showInvisibleViews() -> showInvisibleViews
    void hideAllViews() -> hideAllViews
    void postRenderRunnable(java.lang.Runnable) -> postRenderRunnable
    void onLayout(boolean,int,int,int,int) -> onLayout
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation() -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation
com.videogo.widget.pulltorefresh.LoadingLayoutProxy -> com.videogo.widget.pulltorefresh.LoadingLayoutProxy:
    java.util.HashSet mLoadingLayouts -> mLoadingLayouts
    void addLayout(com.videogo.widget.pulltorefresh.LoadingLayout) -> addLayout
    java.util.HashSet getLayouts() -> getLayouts
com.videogo.widget.pulltorefresh.OverscrollHelper -> com.videogo.widget.pulltorefresh.OverscrollHelper:
    java.lang.String LOG_TAG -> LOG_TAG
    float DEFAULT_OVERSCROLL_SCALE -> DEFAULT_OVERSCROLL_SCALE
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation
    void overScrollBy(com.videogo.widget.pulltorefresh.PullToRefreshBase,int,int,int,int,boolean) -> overScrollBy
    void overScrollBy(com.videogo.widget.pulltorefresh.PullToRefreshBase,int,int,int,int,int,boolean) -> overScrollBy
    void overScrollBy(com.videogo.widget.pulltorefresh.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> overScrollBy
    boolean isAndroidOverScrollEnabled(android.view.View) -> isAndroidOverScrollEnabled
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation() -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation
com.videogo.widget.pulltorefresh.PullToRefreshAdapterViewBase -> com.videogo.widget.pulltorefresh.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> mLastItemVisible
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    com.videogo.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> mOnLastItemVisibleListener
    android.view.View mEmptyView -> mEmptyView
    boolean mScrollEmptyView -> mScrollEmptyView
    android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams) -> convertEmptyViewLayoutParams
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnLastItemVisibleListener(com.videogo.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener) -> setOnLastItemVisibleListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setScrollEmptyView(boolean) -> setScrollEmptyView
    boolean isReadyForPullStart() -> isReadyForPullStart
    boolean isReadyForPullEnd() -> isReadyForPullEnd
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    boolean isFirstItemVisible() -> isFirstItemVisible
    boolean isLastItemVisible() -> isLastItemVisible
com.videogo.widget.pulltorefresh.PullToRefreshBase -> com.videogo.widget.pulltorefresh.PullToRefreshBase:
    boolean DEBUG -> DEBUG
    boolean USE_HW_LAYERS -> USE_HW_LAYERS
    java.lang.String LOG_TAG -> LOG_TAG
    float FRICTION -> FRICTION
    int SMOOTH_SCROLL_DURATION_MS -> SMOOTH_SCROLL_DURATION_MS
    int SMOOTH_SCROLL_LONG_DURATION_MS -> SMOOTH_SCROLL_LONG_DURATION_MS
    int DEMO_SCROLL_INTERVAL -> DEMO_SCROLL_INTERVAL
    java.lang.String STATE_STATE -> STATE_STATE
    java.lang.String STATE_MODE -> STATE_MODE
    java.lang.String STATE_CURRENT_MODE -> STATE_CURRENT_MODE
    java.lang.String STATE_SCROLLING_REFRESHING_ENABLED -> STATE_SCROLLING_REFRESHING_ENABLED
    java.lang.String STATE_SHOW_REFRESHING_VIEW -> STATE_SHOW_REFRESHING_VIEW
    java.lang.String STATE_SUPER -> STATE_SUPER
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    com.videogo.widget.pulltorefresh.IPullToRefresh$State mState -> mState
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode mMode -> mMode
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode mCurrentMode -> mCurrentMode
    android.view.View mRefreshableView -> mRefreshableView
    android.widget.FrameLayout mRefreshableViewWrapper -> mRefreshableViewWrapper
    boolean mShowViewWhileRefreshing -> mShowViewWhileRefreshing
    boolean mScrollingWhileRefreshingEnabled -> mScrollingWhileRefreshingEnabled
    boolean mFilterTouchEvents -> mFilterTouchEvents
    boolean mOverScrollEnabled -> mOverScrollEnabled
    boolean mLayoutVisibilityChangesEnabled -> mLayoutVisibilityChangesEnabled
    boolean mHeaderRefreshEnabled -> mHeaderRefreshEnabled
    boolean mFooterRefreshEnabled -> mFooterRefreshEnabled
    android.view.animation.Interpolator mScrollAnimationInterpolator -> mScrollAnimationInterpolator
    com.videogo.widget.pulltorefresh.LoadingLayout mHeaderLayout -> mHeaderLayout
    com.videogo.widget.pulltorefresh.LoadingLayout mFooterLayout -> mFooterLayout
    com.videogo.widget.pulltorefresh.PullToRefreshBase$LoadingLayoutCreator mLoadingLayoutCreator -> mLoadingLayoutCreator
    com.videogo.widget.pulltorefresh.IPullToRefresh$OnRefreshListener mOnRefreshListener -> mOnRefreshListener
    com.videogo.widget.pulltorefresh.IPullToRefresh$OnPullEventListener mOnPullEventListener -> mOnPullEventListener
    com.videogo.widget.pulltorefresh.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> mCurrentSmoothScrollRunnable
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$State -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$State
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean demo() -> demo
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode getCurrentMode() -> getCurrentMode
    boolean getFilterTouchEvents() -> getFilterTouchEvents
    com.videogo.widget.pulltorefresh.LoadingLayoutProxy getLoadingLayoutProxy() -> getLoadingLayoutProxy
    com.videogo.widget.pulltorefresh.LoadingLayoutProxy getLoadingLayoutProxy(boolean,boolean) -> getLoadingLayoutProxy
    com.videogo.widget.pulltorefresh.IPullToRefresh$Mode getMode() -> getMode
    android.view.View getRefreshableView() -> getRefreshableView
    boolean getShowViewWhileRefreshing() -> getShowViewWhileRefreshing
    com.videogo.widget.pulltorefresh.IPullToRefresh$State getState() -> getState
    boolean isPullToRefreshEnabled() -> isPullToRefreshEnabled
    boolean isPullToRefreshOverScrollEnabled() -> isPullToRefreshOverScrollEnabled
    boolean isRefreshing() -> isRefreshing
    boolean isScrollingWhileRefreshingEnabled() -> isScrollingWhileRefreshingEnabled
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> onRefreshComplete
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.videogo.widget.pulltorefresh.IPullToRefresh$Mode) -> setMode
    void setOnPullEventListener(com.videogo.widget.pulltorefresh.IPullToRefresh$OnPullEventListener) -> setOnPullEventListener
    void setOnRefreshListener(com.videogo.widget.pulltorefresh.IPullToRefresh$OnRefreshListener) -> setOnRefreshListener
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void setState(com.videogo.widget.pulltorefresh.IPullToRefresh$State,java.lang.Object[]) -> setState
    void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addViewInternal
    void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams) -> addViewInternal
    void setLoadingLayoutCreator(com.videogo.widget.pulltorefresh.PullToRefreshBase$LoadingLayoutCreator) -> setLoadingLayoutCreator
    com.videogo.widget.pulltorefresh.PullToRefreshBase$LoadingLayoutCreator getLoadingLayoutCreator() -> getLoadingLayoutCreator
    com.videogo.widget.pulltorefresh.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> createLoadingLayoutProxy
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    void disableLoadingLayoutVisibilityChanges() -> disableLoadingLayoutVisibilityChanges
    com.videogo.widget.pulltorefresh.LoadingLayout getFooterLayout() -> getFooterLayout
    int getFooterSize() -> getFooterSize
    com.videogo.widget.pulltorefresh.LoadingLayout getHeaderLayout() -> getHeaderLayout
    int getHeaderSize() -> getHeaderSize
    int getPullToRefreshScrollDuration() -> getPullToRefreshScrollDuration
    int getPullToRefreshScrollDurationLonger() -> getPullToRefreshScrollDurationLonger
    android.widget.FrameLayout getRefreshableViewWrapper() -> getRefreshableViewWrapper
    void handleStyledAttributes(android.content.res.TypedArray) -> handleStyledAttributes
    boolean isReadyForPullEnd() -> isReadyForPullEnd
    boolean isReadyForPullStart() -> isReadyForPullStart
    void onPtrRestoreInstanceState(android.os.Bundle) -> onPtrRestoreInstanceState
    void onPtrSaveInstanceState(android.os.Bundle) -> onPtrSaveInstanceState
    void onPullToRefresh() -> onPullToRefresh
    void onRefreshing(java.lang.Boolean) -> onRefreshing
    void onReleaseToRefresh() -> onReleaseToRefresh
    void onReset() -> onReset
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> refreshLoadingViewsSize
    void refreshRefreshableViewSize(int,int) -> refreshRefreshableViewSize
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> smoothScrollTo
    void smoothScrollTo(int,com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener) -> smoothScrollTo
    void smoothScrollToLonger(int) -> smoothScrollToLonger
    void updateUIForMode() -> updateUIForMode
    void addRefreshableView(android.content.Context,android.view.View) -> addRefreshableView
    void callRefreshListener() -> callRefreshListener
    void init(android.content.Context,android.util.AttributeSet) -> init
    boolean isReadyForPull() -> isReadyForPull
    void pullEvent() -> pullEvent
    android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams() -> getLoadingLayoutLayoutParams
    int getMaximumPullScroll() -> getMaximumPullScroll
    void smoothScrollTo(int,long) -> smoothScrollTo
    void smoothScrollTo(int,long,long,com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener) -> smoothScrollTo
    void smoothScrollToAndBack(int) -> smoothScrollToAndBack
    void setHeaderRefreshEnabled(boolean) -> setHeaderRefreshEnabled
    void setFooterRefreshEnabled(boolean) -> setFooterRefreshEnabled
    android.view.animation.Interpolator access$0(com.videogo.widget.pulltorefresh.PullToRefreshBase) -> access$0
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation() -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$PullToRefreshBase$Orientation
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$State() -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$State
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode() -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode
    void access$4(com.videogo.widget.pulltorefresh.PullToRefreshBase) -> access$4
    void access$5(com.videogo.widget.pulltorefresh.PullToRefreshBase,int,long,long,com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener) -> access$5
com.videogo.widget.pulltorefresh.PullToRefreshBase$1 -> com.videogo.widget.pulltorefresh.PullToRefreshBase$1:
    com.videogo.widget.pulltorefresh.PullToRefreshBase this$0 -> this$0
    void onSmoothScrollFinished() -> onSmoothScrollFinished
com.videogo.widget.pulltorefresh.PullToRefreshBase$2 -> com.videogo.widget.pulltorefresh.PullToRefreshBase$2:
    com.videogo.widget.pulltorefresh.PullToRefreshBase this$0 -> this$0
    com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener val$listener -> val$listener
    void run() -> run
com.videogo.widget.pulltorefresh.PullToRefreshBase$3 -> com.videogo.widget.pulltorefresh.PullToRefreshBase$3:
    com.videogo.widget.pulltorefresh.PullToRefreshBase this$0 -> this$0
    com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener val$listener -> val$listener
    void run() -> run
com.videogo.widget.pulltorefresh.PullToRefreshBase$4 -> com.videogo.widget.pulltorefresh.PullToRefreshBase$4:
    com.videogo.widget.pulltorefresh.PullToRefreshBase this$0 -> this$0
    void run() -> run
com.videogo.widget.pulltorefresh.PullToRefreshBase$5 -> com.videogo.widget.pulltorefresh.PullToRefreshBase$5:
    com.videogo.widget.pulltorefresh.PullToRefreshBase this$0 -> this$0
    void onSmoothScrollFinished() -> onSmoothScrollFinished
com.videogo.widget.pulltorefresh.PullToRefreshBase$LoadingLayoutCreator -> com.videogo.widget.pulltorefresh.PullToRefreshBase$LoadingLayoutCreator:
    com.videogo.widget.pulltorefresh.LoadingLayout create(android.content.Context,boolean,com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation) -> create
com.videogo.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener -> com.videogo.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener:
    void onLastItemVisible() -> onLastItemVisible
com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener -> com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener:
    void onSmoothScrollFinished() -> onSmoothScrollFinished
com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation -> com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation:
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation VERTICAL -> VERTICAL
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation HORIZONTAL -> HORIZONTAL
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation[] ENUM$VALUES -> ENUM$VALUES
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation[] values() -> values
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation valueOf(java.lang.String) -> valueOf
com.videogo.widget.pulltorefresh.PullToRefreshBase$SmoothScrollRunnable -> com.videogo.widget.pulltorefresh.PullToRefreshBase$SmoothScrollRunnable:
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    int mScrollToY -> mScrollToY
    int mScrollFromY -> mScrollFromY
    long mDuration -> mDuration
    com.videogo.widget.pulltorefresh.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> mListener
    boolean mContinueRunning -> mContinueRunning
    long mStartTime -> mStartTime
    int mCurrentY -> mCurrentY
    com.videogo.widget.pulltorefresh.PullToRefreshBase this$0 -> this$0
    void run() -> run
    void stop() -> stop
com.videogo.widget.pulltorefresh.PullToRefreshGridView -> com.videogo.widget.pulltorefresh.PullToRefreshGridView:
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.widget.GridView createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
com.videogo.widget.pulltorefresh.PullToRefreshGridView$InternalGridView -> com.videogo.widget.pulltorefresh.PullToRefreshGridView$InternalGridView:
    com.videogo.widget.pulltorefresh.PullToRefreshGridView this$0 -> this$0
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.videogo.widget.pulltorefresh.PullToRefreshGridView$InternalGridViewSDK9 -> com.videogo.widget.pulltorefresh.PullToRefreshGridView$InternalGridViewSDK9:
    com.videogo.widget.pulltorefresh.PullToRefreshGridView this$0 -> this$0
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.videogo.widget.pulltorefresh.PullToRefreshListView -> com.videogo.widget.pulltorefresh.PullToRefreshListView:
    com.videogo.widget.pulltorefresh.LoadingLayout mHeaderLoadingView -> mHeaderLoadingView
    com.videogo.widget.pulltorefresh.LoadingLayout mFooterLoadingView -> mFooterLoadingView
    android.widget.FrameLayout mLvFooterLoadingFrame -> mLvFooterLoadingFrame
    boolean mListViewExtrasEnabled -> mListViewExtrasEnabled
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void onRefreshing(java.lang.Boolean) -> onRefreshing
    void onReset() -> onReset
    com.videogo.widget.pulltorefresh.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> createLoadingLayoutProxy
    android.widget.ListView createListView(android.content.Context,android.util.AttributeSet) -> createListView
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    void handleStyledAttributes(android.content.res.TypedArray) -> handleStyledAttributes
    void setLoadingLayoutCreator(com.videogo.widget.pulltorefresh.PullToRefreshBase$LoadingLayoutCreator) -> setLoadingLayoutCreator
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    android.widget.FrameLayout access$1(com.videogo.widget.pulltorefresh.PullToRefreshListView) -> access$1
    int[] $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode() -> $SWITCH_TABLE$com$videogo$widget$pulltorefresh$IPullToRefresh$Mode
com.videogo.widget.pulltorefresh.PullToRefreshListView$InternalListView -> com.videogo.widget.pulltorefresh.PullToRefreshListView$InternalListView:
    boolean mAddedLvFooter -> mAddedLvFooter
    com.videogo.widget.pulltorefresh.PullToRefreshListView this$0 -> this$0
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.videogo.widget.pulltorefresh.PullToRefreshListView$InternalListViewSDK9 -> com.videogo.widget.pulltorefresh.PullToRefreshListView$InternalListViewSDK9:
    com.videogo.widget.pulltorefresh.PullToRefreshListView this$0 -> this$0
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.videogo.widget.pulltorefresh.PullToRefreshWebView -> com.videogo.widget.pulltorefresh.PullToRefreshWebView:
    com.videogo.widget.pulltorefresh.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    com.videogo.widget.WebViewEx createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    boolean isReadyForPullStart() -> isReadyForPullStart
    boolean isReadyForPullEnd() -> isReadyForPullEnd
    void onPtrRestoreInstanceState(android.os.Bundle) -> onPtrRestoreInstanceState
    void onPtrSaveInstanceState(android.os.Bundle) -> onPtrSaveInstanceState
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
com.videogo.widget.pulltorefresh.PullToRefreshWebView$InternalWebViewSDK9 -> com.videogo.widget.pulltorefresh.PullToRefreshWebView$InternalWebViewSDK9:
    int OVERSCROLL_FUZZY_THRESHOLD -> OVERSCROLL_FUZZY_THRESHOLD
    float OVERSCROLL_SCALE_FACTOR -> OVERSCROLL_SCALE_FACTOR
    com.videogo.widget.pulltorefresh.PullToRefreshWebView this$0 -> this$0
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
    int getScrollRange() -> getScrollRange
com.videogo.widget.pulltorefresh.ViewCompat -> com.videogo.widget.pulltorefresh.ViewCompat:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    void setLayerType(android.view.View,int) -> setLayerType
com.videogo.widget.pulltorefresh.ViewCompat$SDK11 -> com.videogo.widget.pulltorefresh.ViewCompat$SDK11:
    void setLayerType(android.view.View,int) -> setLayerType
com.videogo.widget.pulltorefresh.ViewCompat$SDK16 -> com.videogo.widget.pulltorefresh.ViewCompat$SDK16:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
de.measite.smack.AndroidDebugger -> a.a.a.a:
    boolean printInterpreted -> a
    org.jivesoftware.smack.Connection connection -> b
    org.jivesoftware.smack.PacketListener listener -> c
    org.jivesoftware.smack.ConnectionListener connListener -> d
    java.io.Writer writer -> e
    java.io.Reader reader -> f
    org.jivesoftware.smack.util.ReaderListener readerListener -> g
    org.jivesoftware.smack.util.WriterListener writerListener -> h
    java.io.Reader newConnectionReader(java.io.Reader) -> a
    java.io.Writer newConnectionWriter(java.io.Writer) -> a
    void userHasLogged(java.lang.String) -> a
    java.io.Reader getReader() -> a
    java.io.Writer getWriter() -> b
    org.jivesoftware.smack.PacketListener getReaderListener() -> c
    org.jivesoftware.smack.PacketListener getWriterListener() -> d
de.measite.smack.Sasl -> a.a.a.b:
    java.util.Enumeration getSaslClientFactories() -> a
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
de.measite.smack.SaslClientFactory -> a.a.a.c:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    java.lang.String[] getMechanismNames(java.util.Map) -> a
javax.jmdns.JmDNS -> b.a.a:
    javax.jmdns.JmDNS create() -> a
    void addServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> a
    void removeServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> b
javax.jmdns.JmDNS$Delegate -> b.a.b:
    void cannotRecoverFromIOError(javax.jmdns.JmDNS,java.util.Collection) -> a
javax.jmdns.NetworkTopologyDiscovery -> b.a.c:
    java.net.InetAddress[] getInetAddresses() -> a
javax.jmdns.NetworkTopologyDiscovery$Factory -> b.a.d:
    javax.jmdns.NetworkTopologyDiscovery _instance -> a
    java.util.concurrent.atomic.AtomicReference _databaseClassDelegate -> b
    javax.jmdns.NetworkTopologyDiscovery newNetworkTopologyDiscovery() -> a
    javax.jmdns.NetworkTopologyDiscovery getInstance() -> b
javax.jmdns.NetworkTopologyDiscovery$Factory$ClassDelegate -> b.a.e:
    javax.jmdns.NetworkTopologyDiscovery newNetworkTopologyDiscovery() -> a
javax.jmdns.ServiceEvent -> b.a.f:
    javax.jmdns.JmDNS getDNS() -> a
    java.lang.String getType() -> b
    java.lang.String getName() -> c
    javax.jmdns.ServiceInfo getInfo() -> d
    javax.jmdns.ServiceEvent clone() -> e
    java.lang.Object clone() -> clone
javax.jmdns.ServiceInfo -> b.a.g:
    byte[] NO_VALUE -> a
    boolean hasData() -> a
    java.lang.String getType() -> b
    java.lang.String getName() -> c
    java.lang.String getQualifiedName() -> d
    java.lang.String getServer() -> e
    java.net.InetAddress[] getInetAddresses() -> f
    java.net.Inet4Address[] getInet4Addresses() -> g
    java.net.Inet6Address[] getInet6Addresses() -> h
    int getPort() -> i
    int getPriority() -> j
    int getWeight() -> k
    byte[] getTextBytes() -> l
    java.lang.String[] getURLs() -> m
    java.lang.String getNiceTextString() -> n
    boolean isPersistent() -> o
    java.lang.String getDomain() -> p
    java.lang.String getProtocol() -> q
    java.lang.String getApplication() -> r
    java.lang.String getSubtype() -> s
    javax.jmdns.ServiceInfo clone() -> t
    java.lang.Object clone() -> clone
javax.jmdns.ServiceInfo$Fields -> b.a.h:
    javax.jmdns.ServiceInfo$Fields Domain -> a
    javax.jmdns.ServiceInfo$Fields Protocol -> b
    javax.jmdns.ServiceInfo$Fields Application -> c
    javax.jmdns.ServiceInfo$Fields Instance -> d
    javax.jmdns.ServiceInfo$Fields Subtype -> e
    javax.jmdns.ServiceInfo$Fields[] $VALUES -> f
    javax.jmdns.ServiceInfo$Fields[] values() -> values
    javax.jmdns.ServiceInfo$Fields valueOf(java.lang.String) -> valueOf
javax.jmdns.ServiceListener -> b.a.i:
    void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
javax.jmdns.ServiceTypeListener -> b.a.j:
    void serviceTypeAdded(javax.jmdns.ServiceEvent) -> a
    void subTypeForServiceTypeAdded(javax.jmdns.ServiceEvent) -> b
javax.jmdns.impl.DNSCache -> b.a.a.a:
    java.util.Set _entrySet -> b
    javax.jmdns.impl.DNSCache EmptyCache -> a
    java.util.Set entrySet() -> entrySet
    java.util.Map$Entry getEntry(java.lang.String) -> a
    java.util.List put(java.lang.String,java.util.List) -> a
    java.lang.Object clone() -> clone
    java.util.Collection allValues() -> a
    java.util.Collection getDNSEntryList(java.lang.String) -> b
    java.util.Collection _getDNSEntryList(java.lang.String) -> c
    javax.jmdns.impl.DNSEntry getDNSEntry(javax.jmdns.impl.DNSEntry) -> a
    javax.jmdns.impl.DNSEntry getDNSEntry(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass) -> a
    java.util.Collection getDNSEntryList(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass) -> b
    boolean addDNSEntry(javax.jmdns.impl.DNSEntry) -> b
    boolean removeDNSEntry(javax.jmdns.impl.DNSEntry) -> c
    boolean replaceDNSEntry(javax.jmdns.impl.DNSEntry,javax.jmdns.impl.DNSEntry) -> a
    java.lang.String toString() -> toString
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
javax.jmdns.impl.DNSCache$_CacheEntry -> b.a.a.b:
    java.util.List _value -> a
    java.lang.String _key -> b
    java.lang.String getKey() -> a
    java.util.List getValue() -> b
    java.util.List setValue(java.util.List) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
javax.jmdns.impl.DNSCache$_EmptyCache -> b.a.a.c:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.List get(java.lang.Object) -> a
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    java.util.List put(java.lang.String,java.util.List) -> a
    int hashCode() -> hashCode
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
javax.jmdns.impl.DNSEntry -> b.a.a.d:
    java.lang.String _key -> b
    java.lang.String _name -> c
    java.lang.String _type -> d
    javax.jmdns.impl.constants.DNSRecordType _recordType -> e
    javax.jmdns.impl.constants.DNSRecordClass _dnsClass -> f
    boolean _unique -> g
    java.util.Map _qualifiedNameMap -> a
    boolean equals(java.lang.Object) -> equals
    boolean isSameEntry(javax.jmdns.impl.DNSEntry) -> a
    boolean sameSubtype(javax.jmdns.impl.DNSEntry) -> b
    java.lang.String getSubtype() -> a
    java.lang.String getName() -> b
    java.lang.String getType() -> c
    java.lang.String getKey() -> d
    javax.jmdns.impl.constants.DNSRecordType getRecordType() -> e
    javax.jmdns.impl.constants.DNSRecordClass getRecordClass() -> f
    boolean isUnique() -> g
    java.util.Map getQualifiedNameMap() -> h
    boolean isServicesDiscoveryMetaQuery() -> i
    boolean isDomainDiscoveryQuery() -> j
    boolean isReverseLookup() -> k
    boolean isV4ReverseLookup() -> l
    boolean isV6ReverseLookup() -> m
    boolean isExpired(long) -> a
    boolean isSameRecordClass(javax.jmdns.impl.DNSEntry) -> c
    boolean isSameType(javax.jmdns.impl.DNSEntry) -> d
    void toByteArray(java.io.DataOutputStream) -> a
    byte[] toByteArray() -> n
    int compareTo(javax.jmdns.impl.DNSEntry) -> e
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSIncoming -> b.a.a.e:
    java.util.logging.Logger logger -> g
    boolean USE_DOMAIN_NAME_FORMAT_FOR_SRV_TARGET -> a
    java.net.DatagramPacket _packet -> h
    long _receivedTime -> i
    javax.jmdns.impl.DNSIncoming$MessageInputStream _messageInputStream -> j
    int _senderUDPPayload -> k
    char[] _nibbleToHex -> l
    javax.jmdns.impl.DNSIncoming clone() -> a
    javax.jmdns.impl.DNSQuestion readQuestion() -> t
    javax.jmdns.impl.DNSRecord readAnswer(java.net.InetAddress) -> a
    java.lang.String print(boolean) -> a
    java.lang.String toString() -> toString
    void append(javax.jmdns.impl.DNSIncoming) -> a
    int elapseSinceArrival() -> b
    int getSenderUDPPayload() -> c
    java.lang.String _hexString(byte[]) -> b
    java.lang.Object clone() -> clone
javax.jmdns.impl.DNSIncoming$1 -> b.a.a.f:
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSLabel -> a
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSOptionCode -> b
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSRecordType -> c
javax.jmdns.impl.DNSIncoming$MessageInputStream -> b.a.a.g:
    java.util.logging.Logger logger1 -> b
    java.util.Map _names -> a
    int readUnsignedShort() -> a
    int readInt() -> b
    byte[] readBytes(int) -> a
    java.lang.String readUTF(int) -> b
    java.lang.String readName() -> c
    java.lang.String readNonNameString() -> d
javax.jmdns.impl.DNSListener -> b.a.a.h:
    void updateRecord(javax.jmdns.impl.DNSCache,long,javax.jmdns.impl.DNSEntry) -> a
javax.jmdns.impl.DNSMessage -> b.a.a.i:
    int _id -> a
    boolean _multicast -> b
    int _flags -> g
    java.util.List _questions -> c
    java.util.List _answers -> d
    java.util.List _authoritativeAnswers -> e
    java.util.List _additionals -> f
    int getId() -> d
    void setId(int) -> a
    int getFlags() -> e
    void setFlags(int) -> b
    boolean isMulticast() -> f
    java.util.Collection getQuestions() -> g
    int getNumberOfQuestions() -> h
    java.util.Collection getAllAnswers() -> i
    java.util.Collection getAnswers() -> j
    int getNumberOfAnswers() -> k
    java.util.Collection getAuthorities() -> l
    int getNumberOfAuthorities() -> m
    java.util.Collection getAdditionals() -> n
    int getNumberOfAdditionals() -> o
    boolean isTruncated() -> p
    boolean isQuery() -> q
    boolean isEmpty() -> r
    java.lang.String print() -> s
    java.lang.String print(byte[]) -> a
javax.jmdns.impl.DNSOutgoing -> b.a.a.j:
    boolean USE_DOMAIN_NAME_COMPRESSION -> a
    java.util.Map _names -> g
    int _maxUDPPayload -> h
    javax.jmdns.impl.DNSOutgoing$MessageOutputStream _questionsBytes -> i
    javax.jmdns.impl.DNSOutgoing$MessageOutputStream _answersBytes -> j
    javax.jmdns.impl.DNSOutgoing$MessageOutputStream _authoritativeAnswersBytes -> k
    javax.jmdns.impl.DNSOutgoing$MessageOutputStream _additionalsAnswersBytes -> l
    int availableSpace() -> a
    void addQuestion(javax.jmdns.impl.DNSQuestion) -> a
    void addAnswer(javax.jmdns.impl.DNSIncoming,javax.jmdns.impl.DNSRecord) -> a
    void addAnswer(javax.jmdns.impl.DNSRecord,long) -> a
    void addAuthorativeAnswer(javax.jmdns.impl.DNSRecord) -> a
    byte[] data() -> b
    boolean isQuery() -> q
    java.lang.String toString() -> toString
    int getMaxUDPPayload() -> c
javax.jmdns.impl.DNSOutgoing$MessageOutputStream -> b.a.a.k:
    javax.jmdns.impl.DNSOutgoing _out -> a
    int _offset -> b
    void writeByte(int) -> a
    void writeBytes(byte[],int,int) -> a
    void writeShort(int) -> b
    void writeInt(int) -> c
    void writeUTF(java.lang.String,int,int) -> a
    void writeName(java.lang.String) -> a
    void writeName(java.lang.String,boolean) -> a
    void writeQuestion(javax.jmdns.impl.DNSQuestion) -> a
    void writeRecord(javax.jmdns.impl.DNSRecord,long) -> a
javax.jmdns.impl.DNSQuestion -> b.a.a.l:
    java.util.logging.Logger logger -> b
    javax.jmdns.impl.DNSQuestion newQuestion(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> a
    boolean answeredBy(javax.jmdns.impl.DNSEntry) -> f
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
    void addAnswersForServiceInfo(javax.jmdns.impl.JmDNSImpl,java.util.Set,javax.jmdns.impl.ServiceInfoImpl) -> a
    boolean isExpired(long) -> a
    boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> a
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSQuestion$1 -> b.a.a.m:
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSRecordType -> a
javax.jmdns.impl.DNSQuestion$AllRecords -> b.a.a.n:
    boolean isSameType(javax.jmdns.impl.DNSEntry) -> d
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
    boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.DNSQuestion$DNS4Address -> b.a.a.o:
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
    boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.DNSQuestion$DNS6Address -> b.a.a.p:
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
    boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.DNSQuestion$HostInformation -> b.a.a.q:
javax.jmdns.impl.DNSQuestion$Pointer -> b.a.a.r:
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
javax.jmdns.impl.DNSQuestion$Service -> b.a.a.s:
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
    boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.DNSQuestion$Text -> b.a.a.t:
    void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> a
    boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.DNSRecord -> b.a.a.u:
    java.util.logging.Logger logger -> c
    int _ttl -> d
    long _created -> e
    java.net.InetAddress _source -> f
    byte[] EMPTY_TXT -> b
    boolean equals(java.lang.Object) -> equals
    boolean sameValue(javax.jmdns.impl.DNSRecord) -> a
    boolean sameType(javax.jmdns.impl.DNSRecord) -> b
    boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> a
    boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> a
    boolean suppressedBy(javax.jmdns.impl.DNSIncoming) -> a
    boolean suppressedBy(javax.jmdns.impl.DNSRecord) -> c
    long getExpirationTime(int) -> a
    int getRemainingTTL(long) -> b
    boolean isExpired(long) -> a
    boolean isStale(long) -> c
    void resetTTL(javax.jmdns.impl.DNSRecord) -> d
    void setWillExpireSoon(long) -> d
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    boolean isSingleValued() -> o
    javax.jmdns.ServiceInfo getServiceInfo() -> p
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
    javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> b
    void setRecordSource(java.net.InetAddress) -> a
    java.net.InetAddress getRecordSource() -> q
    void toString(java.lang.StringBuilder) -> a
    int getTTL() -> r
javax.jmdns.impl.DNSRecord$Address -> b.a.a.v:
    java.util.logging.Logger logger1 -> d
    java.net.InetAddress _addr -> c
    boolean sameName(javax.jmdns.impl.DNSRecord) -> e
    boolean sameValue(javax.jmdns.impl.DNSRecord) -> a
    boolean isSingleValued() -> o
    java.net.InetAddress getAddress() -> s
    void toByteArray(java.io.DataOutputStream) -> a
    boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> a
    boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> a
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
    javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> b
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSRecord$HostInformation -> b.a.a.w:
    java.lang.String _os -> c
    java.lang.String _cpu -> d
    boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> a
    boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> a
    boolean sameValue(javax.jmdns.impl.DNSRecord) -> a
    boolean isSingleValued() -> o
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
    javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> b
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSRecord$IPv4Address -> b.a.a.x:
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
javax.jmdns.impl.DNSRecord$IPv6Address -> b.a.a.y:
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
javax.jmdns.impl.DNSRecord$Pointer -> b.a.a.z:
    java.lang.String _alias -> c
    boolean isSameEntry(javax.jmdns.impl.DNSEntry) -> a
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    boolean sameValue(javax.jmdns.impl.DNSRecord) -> a
    boolean isSingleValued() -> o
    boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> a
    boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> a
    java.lang.String getAlias() -> s
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
    javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> b
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSRecord$Service -> b.a.a.aa:
    java.util.logging.Logger logger1 -> c
    int _priority -> d
    int _weight -> e
    int _port -> f
    java.lang.String _server -> g
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    void toByteArray(java.io.DataOutputStream) -> a
    java.lang.String getServer() -> s
    int getPriority() -> t
    int getWeight() -> u
    int getPort() -> v
    boolean sameValue(javax.jmdns.impl.DNSRecord) -> a
    boolean isSingleValued() -> o
    boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> a
    boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> a
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
    javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> b
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSRecord$Text -> b.a.a.ab:
    byte[] _text -> c
    byte[] getText() -> s
    void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> a
    boolean sameValue(javax.jmdns.impl.DNSRecord) -> a
    boolean isSingleValued() -> o
    boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> a
    boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> a
    javax.jmdns.ServiceInfo getServiceInfo(boolean) -> a
    javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> b
    void toString(java.lang.StringBuilder) -> a
javax.jmdns.impl.DNSStatefulObject -> b.a.a.ac:
    boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> a
javax.jmdns.impl.DNSStatefulObject$DNSStatefulObjectSemaphore -> b.a.a.ad:
    java.util.logging.Logger logger -> a
    java.lang.String _name -> b
    java.util.concurrent.ConcurrentMap _semaphores -> c
    void waitForEvent(long) -> a
    void signalEvent() -> a
    java.lang.String toString() -> toString
javax.jmdns.impl.DNSStatefulObject$DefaultImplementation -> b.a.a.ae:
    java.util.logging.Logger logger -> c
    javax.jmdns.impl.JmDNSImpl _dns -> d
    javax.jmdns.impl.tasks.DNSTask _task -> a
    javax.jmdns.impl.constants.DNSState _state -> b
    javax.jmdns.impl.DNSStatefulObject$DNSStatefulObjectSemaphore _announcing -> e
    javax.jmdns.impl.DNSStatefulObject$DNSStatefulObjectSemaphore _canceling -> f
    javax.jmdns.impl.JmDNSImpl getDns() -> a
    void setDns(javax.jmdns.impl.JmDNSImpl) -> a
    void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> a
    void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> b
    boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> b
    void setTask(javax.jmdns.impl.tasks.DNSTask) -> c
    void setState(javax.jmdns.impl.constants.DNSState) -> a
    boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> a
    boolean revertState() -> b
    boolean cancelState() -> c
    boolean closeState() -> d
    boolean recoverState() -> e
    boolean isProbing() -> f
    boolean isAnnouncing() -> g
    boolean isAnnounced() -> h
    boolean isCanceling() -> i
    boolean isCanceled() -> j
    boolean isClosing() -> k
    boolean isClosed() -> l
    boolean willCancel() -> m
    boolean willClose() -> n
    boolean waitForAnnounced(long) -> a
    boolean waitForCanceled(long) -> b
    java.lang.String toString() -> toString
javax.jmdns.impl.DNSTaskStarter -> b.a.a.af:
    void purgeTimer() -> a_
    void purgeStateTimer() -> b
    void cancelTimer() -> c
    void cancelStateTimer() -> d
    void startProber() -> e
    void startAnnouncer() -> f
    void startRenewer() -> g
    void startCanceler() -> h
    void startReaper() -> i
    void startServiceInfoResolver(javax.jmdns.impl.ServiceInfoImpl) -> a
    void startServiceResolver(java.lang.String) -> a
    void startResponder(javax.jmdns.impl.DNSIncoming,int) -> a
javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl -> b.a.a.ag:
    javax.jmdns.impl.JmDNSImpl _jmDNSImpl -> a
    java.util.Timer _timer -> b
    java.util.Timer _stateTimer -> c
    void purgeTimer() -> a_
    void purgeStateTimer() -> b
    void cancelTimer() -> c
    void cancelStateTimer() -> d
    void startProber() -> e
    void startAnnouncer() -> f
    void startRenewer() -> g
    void startCanceler() -> h
    void startReaper() -> i
    void startServiceInfoResolver(javax.jmdns.impl.ServiceInfoImpl) -> a
    void startServiceResolver(java.lang.String) -> a
    void startResponder(javax.jmdns.impl.DNSIncoming,int) -> a
javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer -> b.a.a.ah:
    boolean _cancelled -> a
    void cancel() -> cancel
    void schedule(java.util.TimerTask,long) -> schedule
    void schedule(java.util.TimerTask,java.util.Date) -> schedule
    void schedule(java.util.TimerTask,long,long) -> schedule
    void schedule(java.util.TimerTask,java.util.Date,long) -> schedule
    void scheduleAtFixedRate(java.util.TimerTask,long,long) -> scheduleAtFixedRate
    void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long) -> scheduleAtFixedRate
javax.jmdns.impl.DNSTaskStarter$Factory -> b.a.a.ai:
    javax.jmdns.impl.DNSTaskStarter$Factory _instance -> a
    java.util.concurrent.ConcurrentMap _instances -> b
    java.util.concurrent.atomic.AtomicReference _databaseClassDelegate -> c
    javax.jmdns.impl.DNSTaskStarter newDNSTaskStarter(javax.jmdns.impl.JmDNSImpl) -> a
    javax.jmdns.impl.DNSTaskStarter$Factory getInstance() -> a
    javax.jmdns.impl.DNSTaskStarter getStarter(javax.jmdns.impl.JmDNSImpl) -> b
javax.jmdns.impl.DNSTaskStarter$Factory$ClassDelegate -> b.a.a.aj:
    javax.jmdns.impl.DNSTaskStarter newDNSTaskStarter(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.HostInfo -> b.a.a.ak:
    java.util.logging.Logger logger -> d
    java.lang.String _name -> a
    java.net.InetAddress _address -> b
    java.net.NetworkInterface _interfaze -> c
    javax.jmdns.impl.HostInfo$HostInfoState _state -> e
    int hostNameCount -> f
    javax.jmdns.impl.HostInfo newHostInfo(java.net.InetAddress,javax.jmdns.impl.JmDNSImpl,java.lang.String) -> a
    java.net.InetAddress loopbackAddress() -> q
    java.lang.String getName() -> a
    java.net.InetAddress getInetAddress() -> b
    java.net.Inet4Address getInet4Address() -> c
    java.net.Inet6Address getInet6Address() -> d
    java.net.NetworkInterface getInterface() -> e
    boolean conflictWithRecord(javax.jmdns.impl.DNSRecord$Address) -> a
    java.lang.String incrementHostName() -> f
    boolean shouldIgnorePacket(java.net.DatagramPacket) -> a
    javax.jmdns.impl.DNSRecord$Address getDNSAddressRecord(javax.jmdns.impl.constants.DNSRecordType,boolean,int) -> a
    javax.jmdns.impl.DNSRecord$Address getDNS4AddressRecord(boolean,int) -> b
    javax.jmdns.impl.DNSRecord$Address getDNS6AddressRecord(boolean,int) -> c
    javax.jmdns.impl.DNSRecord$Pointer getDNSReverseAddressRecord(javax.jmdns.impl.constants.DNSRecordType,boolean,int) -> b
    javax.jmdns.impl.DNSRecord$Pointer getDNS4ReverseAddressRecord(boolean,int) -> d
    javax.jmdns.impl.DNSRecord$Pointer getDNS6ReverseAddressRecord(boolean,int) -> e
    java.lang.String toString() -> toString
    java.util.Collection answers(boolean,int) -> a
    boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> a
    void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> b
    boolean revertState() -> g
    void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> a
    boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> b
    boolean cancelState() -> h
    boolean closeState() -> i
    boolean recoverState() -> j
    boolean isProbing() -> k
    boolean isAnnounced() -> l
    boolean isCanceling() -> m
    boolean isCanceled() -> n
    boolean isClosing() -> o
    boolean isClosed() -> p
    boolean waitForAnnounced(long) -> a
    boolean waitForCanceled(long) -> b
javax.jmdns.impl.HostInfo$1 -> b.a.a.al:
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSRecordType -> a
javax.jmdns.impl.HostInfo$HostInfoState -> b.a.a.am:
javax.jmdns.impl.JmDNSImpl -> b.a.a.an:
    java.util.logging.Logger logger -> b
    java.net.InetAddress _group -> c
    java.net.MulticastSocket _socket -> d
    java.util.List _listeners -> e
    java.util.concurrent.ConcurrentMap _serviceListeners -> f
    java.util.Set _typeListeners -> g
    javax.jmdns.impl.DNSCache _cache -> h
    java.util.concurrent.ConcurrentMap _services -> i
    java.util.concurrent.ConcurrentMap _serviceTypes -> j
    javax.jmdns.JmDNS$Delegate _delegate -> k
    java.lang.Thread _shutdown -> a
    javax.jmdns.impl.HostInfo _localHost -> l
    java.lang.Thread _incomingListener -> m
    int _throttle -> n
    long _lastThrottleIncrement -> o
    java.util.concurrent.ExecutorService _executor -> p
    java.util.Random _random -> q
    java.util.concurrent.locks.ReentrantLock _ioLock -> r
    javax.jmdns.impl.DNSIncoming _plannedAnswer -> s
    java.util.concurrent.ConcurrentMap _serviceCollectors -> t
    java.lang.String _name -> u
    java.lang.Object _recoverLock -> v
    void start(java.util.Collection) -> a
    void openMulticastSocket(javax.jmdns.impl.HostInfo) -> a
    void closeMulticastSocket() -> M
    boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> a
    boolean revertState() -> j
    boolean cancelState() -> k
    boolean closeState() -> l
    boolean recoverState() -> m
    javax.jmdns.impl.JmDNSImpl getDns() -> n
    void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> a
    void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> b
    boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> b
    boolean isProbing() -> o
    boolean isAnnounced() -> p
    boolean isCanceling() -> q
    boolean isCanceled() -> r
    boolean isClosing() -> s
    boolean isClosed() -> t
    boolean waitForAnnounced(long) -> a
    boolean waitForCanceled(long) -> b
    javax.jmdns.impl.DNSCache getCache() -> u
    java.lang.String getName() -> v
    javax.jmdns.impl.HostInfo getLocalHost() -> w
    java.net.InetAddress getInterface() -> x
    javax.jmdns.impl.ServiceInfoImpl resolveServiceInfo(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    javax.jmdns.impl.ServiceInfoImpl getServiceInfoFromCache(java.lang.String,java.lang.String,java.lang.String,boolean) -> b
    void handleServiceResolved(javax.jmdns.ServiceEvent) -> a
    void addServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> a
    void addServiceListener(java.lang.String,javax.jmdns.ServiceListener,boolean) -> a
    void removeServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> b
    void registerService(javax.jmdns.ServiceInfo) -> a
    void unregisterAllServices() -> y
    boolean registerServiceType(java.lang.String) -> b
    boolean makeServiceNameUnique(javax.jmdns.impl.ServiceInfoImpl) -> b
    java.lang.String incrementName(java.lang.String) -> c
    void addListener(javax.jmdns.impl.DNSListener,javax.jmdns.impl.DNSQuestion) -> a
    void removeListener(javax.jmdns.impl.DNSListener) -> a
    void renewServiceCollector(javax.jmdns.impl.DNSRecord) -> a
    void updateRecord(long,javax.jmdns.impl.DNSRecord,javax.jmdns.impl.JmDNSImpl$Operation) -> a
    void handleRecord(javax.jmdns.impl.DNSRecord,long) -> a
    void handleResponse(javax.jmdns.impl.DNSIncoming) -> a
    void handleQuery(javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int) -> a
    void respondToQuery(javax.jmdns.impl.DNSIncoming) -> b
    void send(javax.jmdns.impl.DNSOutgoing) -> a
    void purgeTimer() -> a_
    void purgeStateTimer() -> b
    void cancelTimer() -> c
    void cancelStateTimer() -> d
    void startProber() -> e
    void startAnnouncer() -> f
    void startRenewer() -> g
    void startCanceler() -> h
    void startReaper() -> i
    void startServiceInfoResolver(javax.jmdns.impl.ServiceInfoImpl) -> a
    void startServiceResolver(java.lang.String) -> a
    void startResponder(javax.jmdns.impl.DNSIncoming,int) -> a
    void recover() -> z
    void __recover() -> A
    void cleanCache() -> B
    void close() -> close
    java.lang.String toString() -> toString
    void disposeServiceCollectors() -> N
    java.lang.String toUnqualifiedName(java.lang.String,java.lang.String) -> a
    java.util.Map getServices() -> C
    void setLastThrottleIncrement(long) -> c
    long getLastThrottleIncrement() -> D
    void setThrottle(int) -> a
    int getThrottle() -> E
    java.util.Random getRandom() -> F
    void ioLock() -> G
    void ioUnlock() -> H
    java.util.Map getServiceTypes() -> I
    java.net.MulticastSocket getSocket() -> J
    java.net.InetAddress getGroup() -> K
    javax.jmdns.JmDNS$Delegate getDelegate() -> L
javax.jmdns.impl.JmDNSImpl$1 -> b.a.a.ao:
    javax.jmdns.impl.ListenerStatus$ServiceListenerStatus val$listener -> a
    javax.jmdns.ServiceEvent val$localEvent -> b
    javax.jmdns.impl.JmDNSImpl this$0 -> c
    void run() -> run
javax.jmdns.impl.JmDNSImpl$2 -> b.a.a.ap:
    javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus val$status -> a
    javax.jmdns.ServiceEvent val$event -> b
    javax.jmdns.impl.JmDNSImpl this$0 -> c
    void run() -> run
javax.jmdns.impl.JmDNSImpl$3 -> b.a.a.aq:
    javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus val$status -> a
    javax.jmdns.ServiceEvent val$event -> b
    javax.jmdns.impl.JmDNSImpl this$0 -> c
    void run() -> run
javax.jmdns.impl.JmDNSImpl$4 -> b.a.a.ar:
    javax.jmdns.impl.ListenerStatus$ServiceListenerStatus val$listener -> a
    javax.jmdns.ServiceEvent val$localEvent -> b
    javax.jmdns.impl.JmDNSImpl this$0 -> c
    void run() -> run
javax.jmdns.impl.JmDNSImpl$5 -> b.a.a.as:
    javax.jmdns.impl.ListenerStatus$ServiceListenerStatus val$listener -> a
    javax.jmdns.ServiceEvent val$localEvent -> b
    javax.jmdns.impl.JmDNSImpl this$0 -> c
    void run() -> run
javax.jmdns.impl.JmDNSImpl$6 -> b.a.a.at:
    javax.jmdns.impl.JmDNSImpl this$0 -> a
    void run() -> run
javax.jmdns.impl.JmDNSImpl$7 -> b.a.a.au:
    int[] $SwitchMap$javax$jmdns$impl$JmDNSImpl$Operation -> a
javax.jmdns.impl.JmDNSImpl$Operation -> b.a.a.av:
    javax.jmdns.impl.JmDNSImpl$Operation Remove -> a
    javax.jmdns.impl.JmDNSImpl$Operation Update -> b
    javax.jmdns.impl.JmDNSImpl$Operation Add -> c
    javax.jmdns.impl.JmDNSImpl$Operation RegisterServiceType -> d
    javax.jmdns.impl.JmDNSImpl$Operation Noop -> e
    javax.jmdns.impl.JmDNSImpl$Operation[] $VALUES -> f
    javax.jmdns.impl.JmDNSImpl$Operation[] values() -> values
    javax.jmdns.impl.JmDNSImpl$Operation valueOf(java.lang.String) -> valueOf
javax.jmdns.impl.JmDNSImpl$ServiceCollector -> b.a.a.aw:
    java.util.concurrent.ConcurrentMap _infos -> a
    java.util.concurrent.ConcurrentMap _events -> b
    java.lang.String _type -> c
    boolean _needToWaitForInfos -> d
    void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
    java.lang.String toString() -> toString
javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry -> b.a.a.ax:
    java.util.Set _entrySet -> a
    java.lang.String _type -> b
    java.lang.String getType() -> a
    java.util.Set entrySet() -> entrySet
    boolean contains(java.lang.String) -> a
    boolean add(java.lang.String) -> b
    javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry clone() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry$SubTypeEntry -> b.a.a.ay:
    java.lang.String _key -> a
    java.lang.String _value -> b
    java.lang.String getKey() -> a
    java.lang.String getValue() -> b
    java.lang.String setValue(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry$SubTypeEntry clone() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
javax.jmdns.impl.ListenerStatus -> b.a.a.az:
    java.util.EventListener _listener -> a
    boolean _synch -> b
    java.util.EventListener getListener() -> a
    boolean isSynchronous() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
javax.jmdns.impl.ListenerStatus$ServiceListenerStatus -> b.a.a.ba:
    java.util.logging.Logger logger -> a
    java.util.concurrent.ConcurrentMap _addedServices -> b
    void serviceAdded(javax.jmdns.ServiceEvent) -> a
    void serviceRemoved(javax.jmdns.ServiceEvent) -> b
    void serviceResolved(javax.jmdns.ServiceEvent) -> c
    boolean _sameInfo(javax.jmdns.ServiceInfo,javax.jmdns.ServiceInfo) -> a
    java.lang.String toString() -> toString
javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus -> b.a.a.bb:
    java.util.logging.Logger logger -> a
    java.util.concurrent.ConcurrentMap _addedTypes -> b
    void serviceTypeAdded(javax.jmdns.ServiceEvent) -> a
    void subTypeForServiceTypeAdded(javax.jmdns.ServiceEvent) -> b
    java.lang.String toString() -> toString
javax.jmdns.impl.NetworkTopologyDiscoveryImpl -> b.a.a.bc:
    java.util.logging.Logger logger -> a
    java.lang.reflect.Method _isUp -> b
    java.lang.reflect.Method _supportsMulticast -> c
    java.net.InetAddress[] getInetAddresses() -> a
    boolean useInetAddress(java.net.NetworkInterface,java.net.InetAddress) -> a
javax.jmdns.impl.ServiceEventImpl -> b.a.a.bd:
    java.lang.String _type -> a
    java.lang.String _name -> b
    javax.jmdns.ServiceInfo _info -> c
    javax.jmdns.JmDNS getDNS() -> a
    java.lang.String getType() -> b
    java.lang.String getName() -> c
    java.lang.String toString() -> toString
    javax.jmdns.ServiceInfo getInfo() -> d
    javax.jmdns.impl.ServiceEventImpl clone() -> f
    javax.jmdns.ServiceEvent clone() -> e
    java.lang.Object clone() -> clone
javax.jmdns.impl.ServiceInfoImpl -> b.a.a.be:
    java.util.logging.Logger logger -> b
    java.lang.String _domain -> c
    java.lang.String _protocol -> d
    java.lang.String _application -> e
    java.lang.String _name -> f
    java.lang.String _subtype -> g
    java.lang.String _server -> h
    int _port -> i
    int _weight -> j
    int _priority -> k
    byte[] _text -> l
    java.util.Map _props -> m
    java.util.Set _ipv4Addresses -> n
    java.util.Set _ipv6Addresses -> o
    java.lang.String _key -> p
    boolean _persistent -> q
    boolean _needTextAnnouncing -> r
    javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState _state -> s
    java.util.Map decodeQualifiedNameMap(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Map decodeQualifiedNameMapForType(java.lang.String) -> a
    java.util.Map checkQualifiedNameMap(java.util.Map) -> a
    java.lang.String removeSeparators(java.lang.String) -> f
    java.lang.String getType() -> b
    java.lang.String getTypeWithSubtype() -> u
    java.lang.String getName() -> c
    java.lang.String getKey() -> v
    void setName(java.lang.String) -> b
    java.lang.String getQualifiedName() -> d
    java.lang.String getServer() -> e
    void setServer(java.lang.String) -> c
    void addAddress(java.net.Inet4Address) -> a
    void addAddress(java.net.Inet6Address) -> a
    java.net.InetAddress[] getInetAddresses() -> f
    java.net.Inet4Address[] getInet4Addresses() -> g
    java.net.Inet6Address[] getInet6Addresses() -> h
    int getPort() -> i
    int getPriority() -> j
    int getWeight() -> k
    byte[] getTextBytes() -> l
    java.lang.String[] getURLs() -> m
    java.lang.String[] getURLs(java.lang.String) -> d
    java.lang.String getPropertyString(java.lang.String) -> e
    java.lang.String getApplication() -> r
    java.lang.String getDomain() -> p
    java.lang.String getProtocol() -> q
    java.lang.String getSubtype() -> s
    java.util.Map getQualifiedNameMap() -> w
    void writeUTF(java.io.OutputStream,java.lang.String) -> a
    java.lang.String readUTF(byte[],int,int) -> a
    java.util.Map getProperties() -> x
    void updateRecord(javax.jmdns.impl.DNSCache,long,javax.jmdns.impl.DNSEntry) -> a
    boolean hasData() -> a
    boolean hasInetAddress() -> H
    boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> a
    boolean revertState() -> y
    boolean cancelState() -> z
    boolean recoverState() -> A
    void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> b
    void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> a
    boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> b
    boolean isProbing() -> B
    boolean isAnnouncing() -> C
    boolean isAnnounced() -> D
    boolean waitForAnnounced(long) -> a
    boolean waitForCanceled(long) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String getNiceTextString() -> n
    javax.jmdns.impl.ServiceInfoImpl clone() -> E
    java.lang.String toString() -> toString
    java.util.Collection answers(boolean,int,javax.jmdns.impl.HostInfo) -> a
    void _setText(byte[]) -> a
    byte[] textFromProperties(java.util.Map) -> b
    void setDns(javax.jmdns.impl.JmDNSImpl) -> a
    javax.jmdns.impl.JmDNSImpl getDns() -> F
    boolean isPersistent() -> o
    void setNeedTextAnnouncing(boolean) -> a
    boolean needTextAnnouncing() -> G
    javax.jmdns.ServiceInfo clone() -> t
    java.lang.Object clone() -> clone
javax.jmdns.impl.ServiceInfoImpl$1 -> b.a.a.bf:
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSRecordType -> a
javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState -> b.a.a.bg:
    javax.jmdns.impl.ServiceInfoImpl _info -> c
    void setTask(javax.jmdns.impl.tasks.DNSTask) -> c
    void setDns(javax.jmdns.impl.JmDNSImpl) -> a
javax.jmdns.impl.SocketListener -> b.a.a.bh:
    java.util.logging.Logger logger -> a
    javax.jmdns.impl.JmDNSImpl _jmDNSImpl -> b
    void run() -> run
javax.jmdns.impl.constants.DNSConstants -> b.a.a.a.a:
    int MDNS_PORT -> a
javax.jmdns.impl.constants.DNSLabel -> b.a.a.a.b:
    javax.jmdns.impl.constants.DNSLabel Unknown -> a
    javax.jmdns.impl.constants.DNSLabel Standard -> b
    javax.jmdns.impl.constants.DNSLabel Compressed -> c
    javax.jmdns.impl.constants.DNSLabel Extended -> d
    java.lang.String _externalName -> e
    int _index -> f
    javax.jmdns.impl.constants.DNSLabel[] $VALUES -> g
    javax.jmdns.impl.constants.DNSLabel[] values() -> values
    javax.jmdns.impl.constants.DNSLabel valueOf(java.lang.String) -> valueOf
    int indexValue() -> a
    javax.jmdns.impl.constants.DNSLabel labelForByte(int) -> a
    int labelValue(int) -> b
    java.lang.String toString() -> toString
javax.jmdns.impl.constants.DNSOptionCode -> b.a.a.a.c:
    javax.jmdns.impl.constants.DNSOptionCode Unknown -> a
    javax.jmdns.impl.constants.DNSOptionCode LLQ -> b
    javax.jmdns.impl.constants.DNSOptionCode UL -> c
    javax.jmdns.impl.constants.DNSOptionCode NSID -> d
    javax.jmdns.impl.constants.DNSOptionCode Owner -> e
    java.lang.String _externalName -> f
    int _index -> g
    javax.jmdns.impl.constants.DNSOptionCode[] $VALUES -> h
    javax.jmdns.impl.constants.DNSOptionCode[] values() -> values
    javax.jmdns.impl.constants.DNSOptionCode valueOf(java.lang.String) -> valueOf
    int indexValue() -> a
    javax.jmdns.impl.constants.DNSOptionCode resultCodeForFlags(int) -> a
    java.lang.String toString() -> toString
javax.jmdns.impl.constants.DNSRecordClass -> b.a.a.a.d:
    javax.jmdns.impl.constants.DNSRecordClass CLASS_UNKNOWN -> a
    javax.jmdns.impl.constants.DNSRecordClass CLASS_IN -> b
    javax.jmdns.impl.constants.DNSRecordClass CLASS_CS -> c
    javax.jmdns.impl.constants.DNSRecordClass CLASS_CH -> d
    javax.jmdns.impl.constants.DNSRecordClass CLASS_HS -> e
    javax.jmdns.impl.constants.DNSRecordClass CLASS_NONE -> f
    javax.jmdns.impl.constants.DNSRecordClass CLASS_ANY -> g
    java.util.logging.Logger logger -> h
    java.lang.String _externalName -> i
    int _index -> j
    javax.jmdns.impl.constants.DNSRecordClass[] $VALUES -> k
    javax.jmdns.impl.constants.DNSRecordClass[] values() -> values
    javax.jmdns.impl.constants.DNSRecordClass valueOf(java.lang.String) -> valueOf
    int indexValue() -> a
    boolean isUnique(int) -> a
    javax.jmdns.impl.constants.DNSRecordClass classForIndex(int) -> b
    java.lang.String toString() -> toString
javax.jmdns.impl.constants.DNSRecordType -> b.a.a.a.e:
    javax.jmdns.impl.constants.DNSRecordType TYPE_IGNORE -> a
    javax.jmdns.impl.constants.DNSRecordType TYPE_A -> b
    javax.jmdns.impl.constants.DNSRecordType TYPE_NS -> c
    javax.jmdns.impl.constants.DNSRecordType TYPE_MD -> d
    javax.jmdns.impl.constants.DNSRecordType TYPE_MF -> e
    javax.jmdns.impl.constants.DNSRecordType TYPE_CNAME -> f
    javax.jmdns.impl.constants.DNSRecordType TYPE_SOA -> g
    javax.jmdns.impl.constants.DNSRecordType TYPE_MB -> h
    javax.jmdns.impl.constants.DNSRecordType TYPE_MG -> i
    javax.jmdns.impl.constants.DNSRecordType TYPE_MR -> j
    javax.jmdns.impl.constants.DNSRecordType TYPE_NULL -> k
    javax.jmdns.impl.constants.DNSRecordType TYPE_WKS -> l
    javax.jmdns.impl.constants.DNSRecordType TYPE_PTR -> m
    javax.jmdns.impl.constants.DNSRecordType TYPE_HINFO -> n
    javax.jmdns.impl.constants.DNSRecordType TYPE_MINFO -> o
    javax.jmdns.impl.constants.DNSRecordType TYPE_MX -> p
    javax.jmdns.impl.constants.DNSRecordType TYPE_TXT -> q
    javax.jmdns.impl.constants.DNSRecordType TYPE_RP -> r
    javax.jmdns.impl.constants.DNSRecordType TYPE_AFSDB -> s
    javax.jmdns.impl.constants.DNSRecordType TYPE_X25 -> t
    javax.jmdns.impl.constants.DNSRecordType TYPE_ISDN -> u
    javax.jmdns.impl.constants.DNSRecordType TYPE_RT -> v
    javax.jmdns.impl.constants.DNSRecordType TYPE_NSAP -> w
    javax.jmdns.impl.constants.DNSRecordType TYPE_NSAP_PTR -> x
    javax.jmdns.impl.constants.DNSRecordType TYPE_SIG -> y
    javax.jmdns.impl.constants.DNSRecordType TYPE_KEY -> z
    javax.jmdns.impl.constants.DNSRecordType TYPE_PX -> A
    javax.jmdns.impl.constants.DNSRecordType TYPE_GPOS -> B
    javax.jmdns.impl.constants.DNSRecordType TYPE_AAAA -> C
    javax.jmdns.impl.constants.DNSRecordType TYPE_LOC -> D
    javax.jmdns.impl.constants.DNSRecordType TYPE_NXT -> E
    javax.jmdns.impl.constants.DNSRecordType TYPE_EID -> F
    javax.jmdns.impl.constants.DNSRecordType TYPE_NIMLOC -> G
    javax.jmdns.impl.constants.DNSRecordType TYPE_SRV -> H
    javax.jmdns.impl.constants.DNSRecordType TYPE_ATMA -> I
    javax.jmdns.impl.constants.DNSRecordType TYPE_NAPTR -> J
    javax.jmdns.impl.constants.DNSRecordType TYPE_KX -> K
    javax.jmdns.impl.constants.DNSRecordType TYPE_CERT -> L
    javax.jmdns.impl.constants.DNSRecordType TYPE_A6 -> M
    javax.jmdns.impl.constants.DNSRecordType TYPE_DNAME -> N
    javax.jmdns.impl.constants.DNSRecordType TYPE_SINK -> O
    javax.jmdns.impl.constants.DNSRecordType TYPE_OPT -> P
    javax.jmdns.impl.constants.DNSRecordType TYPE_APL -> Q
    javax.jmdns.impl.constants.DNSRecordType TYPE_DS -> R
    javax.jmdns.impl.constants.DNSRecordType TYPE_SSHFP -> S
    javax.jmdns.impl.constants.DNSRecordType TYPE_RRSIG -> T
    javax.jmdns.impl.constants.DNSRecordType TYPE_NSEC -> U
    javax.jmdns.impl.constants.DNSRecordType TYPE_DNSKEY -> V
    javax.jmdns.impl.constants.DNSRecordType TYPE_UINFO -> W
    javax.jmdns.impl.constants.DNSRecordType TYPE_UID -> X
    javax.jmdns.impl.constants.DNSRecordType TYPE_GID -> Y
    javax.jmdns.impl.constants.DNSRecordType TYPE_UNSPEC -> Z
    javax.jmdns.impl.constants.DNSRecordType TYPE_TKEY -> aa
    javax.jmdns.impl.constants.DNSRecordType TYPE_TSIG -> ab
    javax.jmdns.impl.constants.DNSRecordType TYPE_IXFR -> ac
    javax.jmdns.impl.constants.DNSRecordType TYPE_AXFR -> ad
    javax.jmdns.impl.constants.DNSRecordType TYPE_MAILA -> ae
    javax.jmdns.impl.constants.DNSRecordType TYPE_MAILB -> af
    javax.jmdns.impl.constants.DNSRecordType TYPE_ANY -> ag
    java.util.logging.Logger logger -> ah
    java.lang.String _externalName -> ai
    int _index -> aj
    javax.jmdns.impl.constants.DNSRecordType[] $VALUES -> ak
    javax.jmdns.impl.constants.DNSRecordType[] values() -> values
    javax.jmdns.impl.constants.DNSRecordType valueOf(java.lang.String) -> valueOf
    int indexValue() -> a
    javax.jmdns.impl.constants.DNSRecordType typeForIndex(int) -> a
    java.lang.String toString() -> toString
javax.jmdns.impl.constants.DNSResultCode -> b.a.a.a.f:
    javax.jmdns.impl.constants.DNSResultCode Unknown -> a
    javax.jmdns.impl.constants.DNSResultCode NoError -> b
    javax.jmdns.impl.constants.DNSResultCode FormErr -> c
    javax.jmdns.impl.constants.DNSResultCode ServFail -> d
    javax.jmdns.impl.constants.DNSResultCode NXDomain -> e
    javax.jmdns.impl.constants.DNSResultCode NotImp -> f
    javax.jmdns.impl.constants.DNSResultCode Refused -> g
    javax.jmdns.impl.constants.DNSResultCode YXDomain -> h
    javax.jmdns.impl.constants.DNSResultCode YXRRSet -> i
    javax.jmdns.impl.constants.DNSResultCode NXRRSet -> j
    javax.jmdns.impl.constants.DNSResultCode NotAuth -> k
    javax.jmdns.impl.constants.DNSResultCode NotZone -> l
    java.lang.String _externalName -> m
    int _index -> n
    javax.jmdns.impl.constants.DNSResultCode[] $VALUES -> o
    javax.jmdns.impl.constants.DNSResultCode[] values() -> values
    javax.jmdns.impl.constants.DNSResultCode valueOf(java.lang.String) -> valueOf
    int indexValue() -> a
    javax.jmdns.impl.constants.DNSResultCode resultCodeForFlags(int,int) -> a
    java.lang.String toString() -> toString
javax.jmdns.impl.constants.DNSState -> b.a.a.a.g:
    javax.jmdns.impl.constants.DNSState PROBING_1 -> a
    javax.jmdns.impl.constants.DNSState PROBING_2 -> b
    javax.jmdns.impl.constants.DNSState PROBING_3 -> c
    javax.jmdns.impl.constants.DNSState ANNOUNCING_1 -> d
    javax.jmdns.impl.constants.DNSState ANNOUNCING_2 -> e
    javax.jmdns.impl.constants.DNSState ANNOUNCED -> f
    javax.jmdns.impl.constants.DNSState CANCELING_1 -> g
    javax.jmdns.impl.constants.DNSState CANCELING_2 -> h
    javax.jmdns.impl.constants.DNSState CANCELING_3 -> i
    javax.jmdns.impl.constants.DNSState CANCELED -> j
    javax.jmdns.impl.constants.DNSState CLOSING -> k
    javax.jmdns.impl.constants.DNSState CLOSED -> l
    java.lang.String _name -> m
    javax.jmdns.impl.constants.DNSState$StateClass _state -> n
    javax.jmdns.impl.constants.DNSState[] $VALUES -> o
    javax.jmdns.impl.constants.DNSState[] values() -> values
    javax.jmdns.impl.constants.DNSState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    javax.jmdns.impl.constants.DNSState advance() -> a
    javax.jmdns.impl.constants.DNSState revert() -> b
    boolean isProbing() -> c
    boolean isAnnouncing() -> d
    boolean isAnnounced() -> e
    boolean isCanceling() -> f
    boolean isCanceled() -> g
    boolean isClosing() -> h
    boolean isClosed() -> i
javax.jmdns.impl.constants.DNSState$1 -> b.a.a.a.h:
    int[] $SwitchMap$javax$jmdns$impl$constants$DNSState -> a
javax.jmdns.impl.constants.DNSState$StateClass -> b.a.a.a.i:
    javax.jmdns.impl.constants.DNSState$StateClass probing -> a
    javax.jmdns.impl.constants.DNSState$StateClass announcing -> b
    javax.jmdns.impl.constants.DNSState$StateClass announced -> c
    javax.jmdns.impl.constants.DNSState$StateClass canceling -> d
    javax.jmdns.impl.constants.DNSState$StateClass canceled -> e
    javax.jmdns.impl.constants.DNSState$StateClass closing -> f
    javax.jmdns.impl.constants.DNSState$StateClass closed -> g
    javax.jmdns.impl.constants.DNSState$StateClass[] $VALUES -> h
    javax.jmdns.impl.constants.DNSState$StateClass[] values() -> values
    javax.jmdns.impl.constants.DNSState$StateClass valueOf(java.lang.String) -> valueOf
javax.jmdns.impl.tasks.DNSTask -> b.a.a.b.a:
    javax.jmdns.impl.JmDNSImpl _jmDNSImpl -> a
    javax.jmdns.impl.JmDNSImpl getDns() -> a
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    javax.jmdns.impl.DNSOutgoing addQuestion(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSQuestion) -> a
    javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSIncoming,javax.jmdns.impl.DNSRecord) -> a
    javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSRecord,long) -> a
    javax.jmdns.impl.DNSOutgoing addAuthoritativeAnswer(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSRecord) -> a
javax.jmdns.impl.tasks.RecordReaper -> b.a.a.b.b:
    java.util.logging.Logger logger -> a
    java.lang.String getName() -> b
    void start(java.util.Timer) -> a
    void run() -> run
javax.jmdns.impl.tasks.Responder -> b.a.a.b.c:
    java.util.logging.Logger logger -> a
    javax.jmdns.impl.DNSIncoming _in -> b
    boolean _unicast -> c
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    void start(java.util.Timer) -> a
    void run() -> run
javax.jmdns.impl.tasks.resolver.DNSResolverTask -> b.a.a.b.a.a:
    java.util.logging.Logger logger -> b
    int _count -> a
    java.lang.String toString() -> toString
    void start(java.util.Timer) -> a
    void run() -> run
    javax.jmdns.impl.DNSOutgoing addQuestions(javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing addAnswers(javax.jmdns.impl.DNSOutgoing) -> b
    java.lang.String description() -> c
javax.jmdns.impl.tasks.resolver.ServiceInfoResolver -> b.a.a.b.a.b:
    javax.jmdns.impl.ServiceInfoImpl _info -> b
    java.lang.String getName() -> b
    boolean cancel() -> cancel
    javax.jmdns.impl.DNSOutgoing addAnswers(javax.jmdns.impl.DNSOutgoing) -> b
    javax.jmdns.impl.DNSOutgoing addQuestions(javax.jmdns.impl.DNSOutgoing) -> a
    java.lang.String description() -> c
javax.jmdns.impl.tasks.resolver.ServiceResolver -> b.a.a.b.a.c:
    java.lang.String _type -> b
    java.lang.String getName() -> b
    javax.jmdns.impl.DNSOutgoing addAnswers(javax.jmdns.impl.DNSOutgoing) -> b
    javax.jmdns.impl.DNSOutgoing addQuestions(javax.jmdns.impl.DNSOutgoing) -> a
    java.lang.String description() -> c
javax.jmdns.impl.tasks.state.Announcer -> b.a.a.b.b.a:
    java.util.logging.Logger logger -> a
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    void start(java.util.Timer) -> a
    boolean cancel() -> cancel
    java.lang.String getTaskDescription() -> c
    boolean checkRunCondition() -> d
    javax.jmdns.impl.DNSOutgoing createOugoing() -> e
    javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> a
    void recoverTask(java.lang.Throwable) -> a
    void advanceTask() -> f
javax.jmdns.impl.tasks.state.Canceler -> b.a.a.b.b.b:
    java.util.logging.Logger logger -> a
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    void start(java.util.Timer) -> a
    boolean cancel() -> cancel
    java.lang.String getTaskDescription() -> c
    boolean checkRunCondition() -> d
    javax.jmdns.impl.DNSOutgoing createOugoing() -> e
    javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> a
    void recoverTask(java.lang.Throwable) -> a
    void advanceTask() -> f
javax.jmdns.impl.tasks.state.DNSStateTask -> b.a.a.b.b.c:
    java.util.logging.Logger logger1 -> b
    int _ttl -> a
    int _defaultTTL -> c
    javax.jmdns.impl.constants.DNSState _taskState -> d
    java.lang.String getTaskDescription() -> c
    int defaultTTL() -> g
    int getTTL() -> h
    void associate(javax.jmdns.impl.constants.DNSState) -> a
    void removeAssociation() -> i
    void run() -> run
    boolean checkRunCondition() -> d
    javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing createOugoing() -> e
    void advanceObjectsState(java.util.List) -> a
    void recoverTask(java.lang.Throwable) -> a
    void advanceTask() -> f
    javax.jmdns.impl.constants.DNSState getTaskState() -> j
    void setTaskState(javax.jmdns.impl.constants.DNSState) -> b
javax.jmdns.impl.tasks.state.Prober -> b.a.a.b.b.d:
    java.util.logging.Logger logger -> a
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    void start(java.util.Timer) -> a
    boolean cancel() -> cancel
    java.lang.String getTaskDescription() -> c
    boolean checkRunCondition() -> d
    javax.jmdns.impl.DNSOutgoing createOugoing() -> e
    javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> a
    void recoverTask(java.lang.Throwable) -> a
    void advanceTask() -> f
javax.jmdns.impl.tasks.state.Renewer -> b.a.a.b.b.e:
    java.util.logging.Logger logger -> a
    java.lang.String getName() -> b
    java.lang.String toString() -> toString
    void start(java.util.Timer) -> a
    boolean cancel() -> cancel
    java.lang.String getTaskDescription() -> c
    boolean checkRunCondition() -> d
    javax.jmdns.impl.DNSOutgoing createOugoing() -> e
    javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> a
    javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> a
    void recoverTask(java.lang.Throwable) -> a
    void advanceTask() -> f
org.MediaPlayer.PlayM4.Player -> org.MediaPlayer.PlayM4.Player:
    org.MediaPlayer.PlayM4.Player mPlayer -> a
    org.MediaPlayer.PlayM4.Player getInstance() -> a
    int getPort() -> b
    boolean freePort(int) -> a
    boolean play(int,android.view.SurfaceHolder) -> a
    boolean pause(int,int) -> a
    int getLastError(int) -> b
    boolean openStream(int,byte[],int,int) -> a
    boolean closeStream(int) -> c
    boolean setSecretKey(int,int,byte[],int) -> a
    boolean setVideoWindow(int,int,android.view.SurfaceHolder) -> a
    boolean inputData(int,byte[],int) -> a
    boolean playSound(int) -> d
    boolean stopSound() -> c
    boolean setStreamOpenMode(int,int) -> b
    boolean getJPEG(int,byte[],int,org.MediaPlayer.PlayM4.Player$MPInteger) -> a
    boolean getPictureSize(int,org.MediaPlayer.PlayM4.Player$MPInteger,org.MediaPlayer.PlayM4.Player$MPInteger) -> a
    boolean getSystemTime(int,org.MediaPlayer.PlayM4.Player$MPSystemTime) -> a
    boolean setDisplayCB(int,org.MediaPlayer.PlayM4.PlayerCallBack$PlayerDisplayCB) -> a
    int GetPort() -> GetPort
    int FreePort(int) -> FreePort
    int GetLastError(int) -> GetLastError
    int Play(int,android.view.Surface) -> Play
    int Pause(int,int) -> Pause
    int PlaySound(int) -> PlaySound
    int StopSound() -> StopSound
    int SetStreamOpenMode(int,int) -> SetStreamOpenMode
    int OpenStream(int,byte[],int,int) -> OpenStream
    int CloseStream(int) -> CloseStream
    int InputData(int,byte[],int) -> InputData
    int SetVideoWindow(int,int,android.view.Surface) -> SetVideoWindow
    int GetPictureSize(int,org.MediaPlayer.PlayM4.Player$MPInteger,org.MediaPlayer.PlayM4.Player$MPInteger) -> GetPictureSize
    int GetJPEG(int,byte[],int,org.MediaPlayer.PlayM4.Player$MPInteger) -> GetJPEG
    int SetDisplayCallback(int,org.MediaPlayer.PlayM4.PlayerCallBack$PlayerDisplayCB) -> SetDisplayCallback
    int SetSecretKey(int,int,byte[],int) -> SetSecretKey
    int GetSystemTime(int,org.MediaPlayer.PlayM4.Player$MPSystemTime) -> GetSystemTime
    int GetCpuFeatures() -> GetCpuFeatures
    void SetAndroidSDKVersion(int) -> SetAndroidSDKVersion
org.MediaPlayer.PlayM4.Player$MPInteger -> org.MediaPlayer.PlayM4.a:
    int value -> a
org.MediaPlayer.PlayM4.Player$MPSystemTime -> org.MediaPlayer.PlayM4.b:
    int year -> a
    int month -> b
    int day -> c
    int hour -> d
    int min -> e
    int sec -> f
org.MediaPlayer.PlayM4.PlayerCallBack -> org.MediaPlayer.PlayM4.c:
org.MediaPlayer.PlayM4.PlayerCallBack$PlayerDisplayCB -> org.MediaPlayer.PlayM4.d:
org.apache.harmony.javax.security.auth.callback.Callback -> org.a.a.a.a.a.a.a:
org.apache.harmony.javax.security.auth.callback.CallbackHandler -> org.a.a.a.a.a.a.b:
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> a
org.apache.harmony.javax.security.auth.callback.ChoiceCallback -> org.a.a.a.a.a.a.c:
    int defaultChoice -> a
    java.lang.String prompt -> b
    boolean multipleSelectionsAllowed -> c
    java.lang.String[] choices -> d
    int[] selections -> e
    void setChoices(java.lang.String[]) -> a
    void setPrompt(java.lang.String) -> a
    void setDefaultChoice(int) -> a
    java.lang.String[] getChoices() -> a
    int[] getSelectedIndexes() -> b
org.apache.harmony.javax.security.auth.callback.NameCallback -> org.a.a.a.a.a.a.d:
    java.lang.String prompt -> a
    java.lang.String defaultName -> b
    java.lang.String inputName -> c
    void setPrompt(java.lang.String) -> b
    void setDefaultName(java.lang.String) -> c
    java.lang.String getDefaultName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getName() -> b
org.apache.harmony.javax.security.auth.callback.PasswordCallback -> org.a.a.a.a.a.a.e:
    java.lang.String prompt -> b
    boolean echoOn -> a
    char[] inputPassword -> c
    void setPrompt(java.lang.String) -> a
    void setPassword(char[]) -> a
    char[] getPassword() -> a
    void clearPassword() -> b
org.apache.harmony.javax.security.auth.callback.TextInputCallback -> org.a.a.a.a.a.a.f:
    java.lang.String defaultText -> a
    java.lang.String prompt -> b
    java.lang.String inputText -> c
    void setPrompt(java.lang.String) -> b
    void setDefaultText(java.lang.String) -> c
    java.lang.String getText() -> a
    void setText(java.lang.String) -> a
org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException -> org.a.a.a.a.a.a.g:
    org.apache.harmony.javax.security.auth.callback.Callback callback -> a
org.apache.harmony.javax.security.sasl.RealmCallback -> org.a.a.a.a.b.a:
org.apache.harmony.javax.security.sasl.RealmChoiceCallback -> org.a.a.a.a.b.b:
org.apache.harmony.javax.security.sasl.SaslClient -> org.a.a.a.a.b.c:
    byte[] evaluateChallenge(byte[]) -> a
    boolean hasInitialResponse() -> a
org.apache.harmony.javax.security.sasl.SaslException -> org.a.a.a.a.b.d:
    java.lang.Throwable _exception -> a
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
org.apache.qpid.management.common.sasl.PlainSaslClient -> org.a.b.a.a.a.a:
    boolean completed -> a
    org.apache.harmony.javax.security.auth.callback.CallbackHandler cbh -> b
    java.lang.String authorizationID -> c
    java.lang.String authenticationID -> d
    byte[] password -> e
    byte SEPARATOR -> f
    byte[] evaluateChallenge(byte[]) -> a
    boolean hasInitialResponse() -> a
    void clearPassword() -> b
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> c
org.jivesoftware.smack.AccountManager -> org.b.a.a:
    org.jivesoftware.smack.Connection connection -> a
    org.jivesoftware.smack.packet.Registration info -> b
    boolean accountCreationSupported -> c
    void setSupportsAccountCreation(boolean) -> a
org.jivesoftware.smack.Connection -> org.b.a.b:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> n
    java.util.Set connectionEstablishedListeners -> o
    boolean DEBUG_ENABLED -> a
    java.util.Collection connectionListeners -> b
    java.util.Collection collectors -> c
    java.util.Map recvListeners -> d
    java.util.Map sendListeners -> e
    java.util.Map interceptors -> f
    org.jivesoftware.smack.AccountManager accountManager -> p
    org.jivesoftware.smack.debugger.SmackDebugger debugger -> g
    java.io.Reader reader -> h
    java.io.Writer writer -> i
    org.jivesoftware.smack.RosterStorage rosterStorage -> j
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> k
    int connectionCounterValue -> l
    org.jivesoftware.smack.ConnectionConfiguration config -> m
    org.jivesoftware.smack.ConnectionConfiguration getConfiguration() -> a
    java.lang.String getServiceName() -> b
    java.lang.String getHost() -> c
    int getPort() -> d
    java.lang.String getConnectionID() -> e
    boolean isConnected() -> f
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> a
    org.jivesoftware.smack.AccountManager getAccountManager() -> g
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> h
    void disconnect() -> i
    void disconnect(org.jivesoftware.smack.packet.Presence) -> a
    java.util.Collection getConnectionCreationListeners() -> j
    void addConnectionListener(org.jivesoftware.smack.ConnectionListener) -> a
    java.util.Collection getConnectionListeners() -> k
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.filter.PacketFilter) -> a
    void removePacketCollector(org.jivesoftware.smack.PacketCollector) -> a
    java.util.Collection getPacketCollectors() -> l
    void addPacketListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> a
    void removePacketListener(org.jivesoftware.smack.PacketListener) -> a
    void addPacketSendingListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> b
    void firePacketSendingListeners(org.jivesoftware.smack.packet.Packet) -> b
    void firePacketInterceptors(org.jivesoftware.smack.packet.Packet) -> c
    void initDebugger() -> m
org.jivesoftware.smack.Connection$InterceptorWrapper -> org.b.a.c:
    org.jivesoftware.smack.PacketInterceptor packetInterceptor -> a
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> b
    boolean equals(java.lang.Object) -> equals
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.Connection$ListenerWrapper -> org.b.a.d:
    org.jivesoftware.smack.PacketListener packetListener -> a
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> b
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.ConnectionConfiguration -> org.b.a.e:
    java.lang.String LOG_TAG -> b
    java.lang.String serviceName -> c
    java.lang.String host -> d
    int port -> e
    java.lang.String truststorePath -> f
    java.lang.String truststoreType -> g
    java.lang.String truststorePassword -> h
    java.lang.String keystorePath -> i
    java.lang.String keystoreType -> j
    java.lang.String pkcs11Library -> k
    boolean verifyChainEnabled -> l
    boolean verifyRootCAEnabled -> m
    boolean selfSignedCertificateEnabled -> n
    boolean expiredCertificatesCheckEnabled -> o
    boolean notMatchingDomainCheckEnabled -> p
    boolean isRosterVersioningAvailable -> q
    java.lang.String capsNode -> r
    boolean compressionEnabled -> s
    boolean saslAuthenticationEnabled -> t
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> u
    boolean debuggerEnabled -> v
    boolean reconnectionAllowed -> w
    javax.net.SocketFactory socketFactory -> x
    java.lang.String username -> y
    java.lang.String password -> z
    java.lang.String resource -> A
    boolean sendPresence -> B
    boolean rosterLoadedAtLogin -> C
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode securityMode -> D
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    void init(java.lang.String,int,java.lang.String,org.jivesoftware.smack.proxy.ProxyInfo) -> a
    void setServiceName(java.lang.String) -> a
    java.lang.String getServiceName() -> a
    java.lang.String getHost() -> b
    int getPort() -> c
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> d
    void setSecurityMode(org.jivesoftware.smack.ConnectionConfiguration$SecurityMode) -> a
    java.lang.String getTruststorePath() -> e
    java.lang.String getTruststoreType() -> f
    java.lang.String getTruststorePassword() -> g
    java.lang.String getKeystorePath() -> h
    java.lang.String getKeystoreType() -> i
    java.lang.String getPKCS11Library() -> j
    boolean isVerifyChainEnabled() -> k
    boolean isVerifyRootCAEnabled() -> l
    void setVerifyRootCAEnabled(boolean) -> a
    boolean isSelfSignedCertificateEnabled() -> m
    boolean isExpiredCertificatesCheckEnabled() -> n
    boolean isNotMatchingDomainCheckEnabled() -> o
    boolean isCompressionEnabled() -> p
    void setCompressionEnabled(boolean) -> b
    boolean isSASLAuthenticationEnabled() -> q
    void setSASLAuthenticationEnabled(boolean) -> c
    boolean isDebuggerEnabled() -> r
    boolean isRosterLoadedAtLogin() -> s
    org.apache.harmony.javax.security.auth.callback.CallbackHandler getCallbackHandler() -> t
    javax.net.SocketFactory getSocketFactory() -> u
    java.lang.String getUsername() -> v
    java.lang.String getPassword() -> w
    java.lang.String getResource() -> x
    boolean isRosterVersioningAvailable() -> y
    void setRosterVersioningAvailable(boolean) -> d
    void setCapsNode(java.lang.String) -> b
    boolean isSendPresence() -> z
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> a
org.jivesoftware.smack.ConnectionConfiguration$SecurityMode -> org.b.a.f:
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode required -> a
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode enabled -> b
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode disabled -> c
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] ENUM$VALUES -> d
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.ConnectionCreationListener -> org.b.a.g:
    void connectionCreated(org.jivesoftware.smack.Connection) -> a
org.jivesoftware.smack.ConnectionListener -> org.b.a.h:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.KeepAliveListener -> org.b.a.i:
    void onSuccess() -> onSuccess
    void onError() -> onError
org.jivesoftware.smack.NonSASLAuthentication -> org.b.a.j:
    org.jivesoftware.smack.Connection connection -> a
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String authenticateAnonymously() -> a
org.jivesoftware.smack.PacketCollector -> org.b.a.k:
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> a
    java.util.concurrent.LinkedBlockingQueue resultQueue -> b
    org.jivesoftware.smack.Connection conection -> c
    boolean cancelled -> d
    void cancel() -> a
    org.jivesoftware.smack.packet.Packet nextResult(long) -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.PacketInterceptor -> org.b.a.l:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.PacketListener -> org.b.a.m:
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketReader -> org.b.a.n:
    java.lang.String LOG_TAG -> a
    java.lang.Thread readerThread -> b
    java.util.concurrent.ExecutorService listenerExecutor -> c
    org.jivesoftware.smack.XMPPConnection connection -> d
    org.xmlpull.v1.XmlPullParser parser -> e
    boolean done -> f
    java.lang.String connectionID -> g
    java.util.concurrent.Semaphore connectionSemaphore -> h
    void init() -> a
    void startup() -> b
    void shutdown() -> c
    void cleanup() -> d
    void notifyConnectionError(java.lang.Exception) -> a
    void notifyReconnection() -> e
    void resetParser() -> f
    void parsePackets(java.lang.Thread) -> a
    void releaseConnectionIDLock() -> g
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> a
    org.jivesoftware.smack.XMPPConnection access$0(org.jivesoftware.smack.PacketReader) -> a
    void access$1(org.jivesoftware.smack.PacketReader,java.lang.Thread) -> a
org.jivesoftware.smack.PacketReader$1 -> org.b.a.o:
    org.jivesoftware.smack.PacketReader this$0 -> a
    void run() -> run
org.jivesoftware.smack.PacketReader$2 -> org.b.a.p:
    org.jivesoftware.smack.PacketReader this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.PacketReader$ListenerNotification -> org.b.a.q:
    org.jivesoftware.smack.packet.Packet packet -> b
    org.jivesoftware.smack.PacketReader this$0 -> a
    void run() -> run
org.jivesoftware.smack.PacketWriter -> org.b.a.r:
    java.lang.String LOG_TAG -> a
    java.lang.Thread writerThread -> b
    java.io.Writer writer -> c
    org.jivesoftware.smack.XMPPConnection connection -> d
    java.util.concurrent.BlockingQueue queue -> e
    boolean done -> f
    java.util.concurrent.ExecutorService mSingleThreadExecutor -> g
    long lastActive -> h
    void init() -> a
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> a
    void startup() -> b
    void sendKeepAlive(org.jivesoftware.smack.KeepAliveListener) -> a
    void setWriter(java.io.Writer) -> a
    void shutdown() -> c
    void cleanup() -> d
    org.jivesoftware.smack.packet.Packet nextPacket() -> f
    void writePackets(java.lang.Thread) -> a
    void openStream() -> e
    java.io.Writer access$3(org.jivesoftware.smack.PacketWriter) -> a
    void access$5(org.jivesoftware.smack.PacketWriter,java.lang.Thread) -> a
org.jivesoftware.smack.PacketWriter$1 -> org.b.a.s:
    org.jivesoftware.smack.PacketWriter this$0 -> a
    void run() -> run
org.jivesoftware.smack.PacketWriter$2 -> org.b.a.t:
    org.jivesoftware.smack.PacketWriter this$0 -> a
    org.jivesoftware.smack.KeepAliveListener val$keepAliveListener -> b
    void run() -> run
org.jivesoftware.smack.Roster -> org.b.a.u:
    org.jivesoftware.smack.Roster$SubscriptionMode defaultSubscriptionMode -> b
    org.jivesoftware.smack.RosterStorage persistentStorage -> c
    org.jivesoftware.smack.Connection connection -> d
    java.util.Map groups -> e
    java.util.Map entries -> f
    java.util.List unfiledEntries -> g
    java.util.List rosterListeners -> h
    java.util.Map presenceMap -> i
    boolean rosterInitialized -> a
    org.jivesoftware.smack.Roster$PresencePacketListener presencePacketListener -> j
    org.jivesoftware.smack.Roster$SubscriptionMode subscriptionMode -> k
    java.lang.String requestPacketId -> l
    org.jivesoftware.smack.Roster$SubscriptionMode getDefaultSubscriptionMode() -> a
    void reload() -> b
    org.jivesoftware.smack.RosterGroup createGroup(java.lang.String) -> a
    void insertRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> a
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> b
    boolean contains(java.lang.String) -> c
    org.jivesoftware.smack.RosterGroup getGroup(java.lang.String) -> d
    java.util.Collection getGroups() -> c
    void cleanup() -> d
    java.lang.String getPresenceMapKey(java.lang.String) -> e
    void setOfflinePresences() -> e
    void fireRosterChangedEvent(java.util.Collection,java.util.Collection,java.util.Collection) -> a
    void fireRosterPresenceEvent(org.jivesoftware.smack.packet.Presence) -> a
    java.lang.String access$0(org.jivesoftware.smack.Roster,java.lang.String) -> a
    java.util.Map access$1(org.jivesoftware.smack.Roster) -> a
    java.util.Map access$2(org.jivesoftware.smack.Roster) -> b
    void access$3(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.Presence) -> a
    org.jivesoftware.smack.Roster$SubscriptionMode access$4(org.jivesoftware.smack.Roster) -> c
    org.jivesoftware.smack.Connection access$5(org.jivesoftware.smack.Roster) -> d
    org.jivesoftware.smack.RosterStorage access$6(org.jivesoftware.smack.Roster) -> e
    void access$7(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> a
    void access$8(org.jivesoftware.smack.Roster,java.util.Collection,java.util.Collection,java.util.Collection) -> a
    void access$9(org.jivesoftware.smack.Roster,org.jivesoftware.smack.RosterStorage) -> a
    void access$10(org.jivesoftware.smack.Roster) -> f
org.jivesoftware.smack.Roster$1 -> org.b.a.v:
    org.jivesoftware.smack.Roster this$0 -> a
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.Roster$PresencePacketListener -> org.b.a.w:
    org.jivesoftware.smack.Roster this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterPacketListener -> org.b.a.x:
    org.jivesoftware.smack.Roster this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterResultListener -> org.b.a.y:
    org.jivesoftware.smack.Roster this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$SubscriptionMode -> org.b.a.z:
    org.jivesoftware.smack.Roster$SubscriptionMode accept_all -> a
    org.jivesoftware.smack.Roster$SubscriptionMode reject_all -> b
    org.jivesoftware.smack.Roster$SubscriptionMode manual -> c
    org.jivesoftware.smack.Roster$SubscriptionMode[] ENUM$VALUES -> d
    org.jivesoftware.smack.Roster$SubscriptionMode[] values() -> values
    org.jivesoftware.smack.Roster$SubscriptionMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.RosterEntry -> org.b.a.aa:
    java.lang.String user -> a
    java.lang.String name -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType type -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus status -> d
    org.jivesoftware.smack.Roster roster -> e
    org.jivesoftware.smack.Connection connection -> f
    java.lang.String getUser() -> a
    java.util.Collection getGroups() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.RosterGroup -> org.b.a.ab:
    java.lang.String name -> a
    org.jivesoftware.smack.Connection connection -> b
    java.util.List entries -> c
    java.lang.String getName() -> a
    int getEntryCount() -> b
    boolean contains(org.jivesoftware.smack.RosterEntry) -> a
    void addEntryLocal(org.jivesoftware.smack.RosterEntry) -> b
    void removeEntryLocal(org.jivesoftware.smack.RosterEntry) -> c
org.jivesoftware.smack.RosterListener -> org.b.a.ac:
    void entriesAdded(java.util.Collection) -> a
    void entriesUpdated(java.util.Collection) -> b
    void entriesDeleted(java.util.Collection) -> c
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> a
org.jivesoftware.smack.RosterStorage -> org.b.a.ad:
    java.util.List getEntries() -> a
    java.lang.String getRosterVersion() -> b
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> a
    void removeEntry(java.lang.String) -> a
org.jivesoftware.smack.SASLAuthentication -> org.b.a.ae:
    java.util.Map implementedMechanisms -> a
    java.util.List mechanismsPreferences -> b
    org.jivesoftware.smack.Connection connection -> c
    java.util.Collection serverMechanisms -> d
    org.jivesoftware.smack.sasl.SASLMechanism currentMechanism -> e
    boolean saslNegotiated -> f
    boolean saslFailed -> g
    boolean resourceBinded -> h
    boolean sessionSupported -> i
    java.lang.String errorCondition -> j
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> a
    void supportSASLMechanism(java.lang.String,int) -> a
    boolean hasAnonymousAuthentication() -> a
    boolean hasNonAnonymousAuthentication() -> b
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String authenticateAnonymously() -> c
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> c
    void setAvailableSASLMethods(java.util.Collection) -> a
    void challengeReceived(java.lang.String) -> a
    void authenticated() -> d
    void authenticationFailed() -> e
    void authenticationFailed(java.lang.String) -> b
    void bindingRequired() -> f
    void send(org.jivesoftware.smack.packet.Packet) -> a
    void sessionsSupported() -> g
    void init() -> h
org.jivesoftware.smack.ServerTrustManager -> org.b.a.af:
    java.util.regex.Pattern cnPattern -> a
    org.jivesoftware.smack.ConnectionConfiguration configuration -> b
    java.lang.String server -> c
    java.security.KeyStore trustStore -> d
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> a
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> b
org.jivesoftware.smack.SmackConfiguration -> org.b.a.ag:
    int packetReplyTimeout -> a
    int keepAliveInterval -> b
    java.util.Vector defaultMechs -> c
    java.lang.String getVersion() -> a
    int getPacketReplyTimeout() -> b
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> a
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> a
    java.lang.ClassLoader[] getClassLoaders() -> c
org.jivesoftware.smack.XMPPConnection -> org.b.a.ah:
    java.lang.String LOG_TAG -> s
    java.net.Socket socket -> n
    java.lang.String connectionID -> o
    java.lang.String user -> t
    boolean connected -> u
    boolean authenticated -> v
    boolean wasAuthenticated -> w
    boolean anonymous -> x
    boolean usingTLS -> y
    org.jivesoftware.smack.PacketWriter packetWriter -> p
    org.jivesoftware.smack.PacketReader packetReader -> q
    org.jivesoftware.smack.Roster roster -> r
    java.util.Collection compressionMethods -> z
    boolean usingCompression -> A
    java.lang.String getConnectionID() -> e
    void login(java.lang.String,java.lang.String,java.lang.String) -> a
    void loginAnonymously() -> n
    boolean isConnected() -> f
    boolean isSecureConnection() -> o
    boolean isAuthenticated() -> p
    boolean isAnonymous() -> q
    void shutdown(org.jivesoftware.smack.packet.Presence) -> b
    void disconnect(org.jivesoftware.smack.packet.Presence) -> a
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> a
    void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration) -> a
    void initConnection() -> w
    void initReaderAndWriter() -> x
    boolean isUsingTLS() -> r
    void startTLSReceived(boolean) -> a
    void proceedTLSReceived() -> s
    void setAvailableCompressionMethods(java.util.Collection) -> a
    boolean hasAvailableCompressionMethod(java.lang.String) -> a
    boolean useCompression() -> y
    void requestStreamCompression() -> z
    void startStreamCompression() -> t
    void streamCompressionDenied() -> u
    void connect() -> v
    void setWasAuthenticated(boolean) -> b
    void sendKeepAlive(org.jivesoftware.smack.KeepAliveListener) -> a
org.jivesoftware.smack.XMPPException -> org.b.a.ai:
    org.jivesoftware.smack.packet.StreamError streamError -> a
    org.jivesoftware.smack.packet.XMPPError error -> b
    java.lang.Throwable wrappedThrowable -> c
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smack.debugger.ConsoleDebugger -> org.b.a.a.a:
    boolean printInterpreted -> a
    org.jivesoftware.smack.Connection connection -> b
    org.jivesoftware.smack.PacketListener listener -> c
    org.jivesoftware.smack.ConnectionListener connListener -> d
    java.io.Writer writer -> e
    java.io.Reader reader -> f
    org.jivesoftware.smack.util.ReaderListener readerListener -> g
    org.jivesoftware.smack.util.WriterListener writerListener -> h
    java.io.Reader newConnectionReader(java.io.Reader) -> a
    java.io.Writer newConnectionWriter(java.io.Writer) -> a
    void userHasLogged(java.lang.String) -> a
    java.io.Reader getReader() -> a
    java.io.Writer getWriter() -> b
    org.jivesoftware.smack.PacketListener getReaderListener() -> c
    org.jivesoftware.smack.PacketListener getWriterListener() -> d
org.jivesoftware.smack.debugger.SmackDebugger -> org.b.a.a.b:
    void userHasLogged(java.lang.String) -> a
    java.io.Reader getReader() -> a
    java.io.Writer getWriter() -> b
    java.io.Reader newConnectionReader(java.io.Reader) -> a
    java.io.Writer newConnectionWriter(java.io.Writer) -> a
    org.jivesoftware.smack.PacketListener getReaderListener() -> c
    org.jivesoftware.smack.PacketListener getWriterListener() -> d
org.jivesoftware.smack.filter.PacketFilter -> org.b.a.b.a:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.filter.PacketIDFilter -> org.b.a.b.b:
    java.lang.String packetID -> a
    boolean accept(org.jivesoftware.smack.packet.Packet) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketTypeFilter -> org.b.a.b.c:
    java.lang.Class packetType -> a
    boolean accept(org.jivesoftware.smack.packet.Packet) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Authentication -> org.b.a.c.a:
    java.lang.String username -> a
    java.lang.String password -> b
    java.lang.String digest -> c
    java.lang.String resource -> d
    void setUsername(java.lang.String) -> a
    java.lang.String getPassword() -> a
    void setPassword(java.lang.String) -> b
    java.lang.String getDigest() -> b
    void setDigest(java.lang.String,java.lang.String) -> a
    void setDigest(java.lang.String) -> c
    java.lang.String getResource() -> c
    void setResource(java.lang.String) -> d
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.Bind -> org.b.a.c.b:
    java.lang.String resource -> a
    java.lang.String jid -> b
    void setResource(java.lang.String) -> a
    java.lang.String getJid() -> a
    void setJid(java.lang.String) -> b
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.DefaultPacketExtension -> org.b.a.c.c:
    java.lang.String elementName -> a
    java.lang.String namespace -> b
    java.util.Map map -> c
    java.lang.String getElementName() -> a
    java.lang.String getNamespace() -> b
    java.lang.String toXML() -> c
    java.util.Collection getNames() -> d
    java.lang.String getValue(java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String) -> a
org.jivesoftware.smack.packet.IQ -> org.b.a.c.d:
    long serialVersionUID -> serialVersionUID
    org.jivesoftware.smack.packet.IQ$Type type -> type
    org.jivesoftware.smack.packet.IQ$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.IQ$Type) -> setType
    java.lang.String toXML() -> toXML
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smack.packet.IQ createResultIQ(org.jivesoftware.smack.packet.IQ) -> createResultIQ
    org.jivesoftware.smack.packet.IQ createErrorResponse(org.jivesoftware.smack.packet.IQ,org.jivesoftware.smack.packet.XMPPError) -> createErrorResponse
org.jivesoftware.smack.packet.IQ$1 -> org.b.a.c.e:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$2 -> org.b.a.c.f:
    org.jivesoftware.smack.packet.IQ val$request -> a
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$Type -> org.b.a.c.g:
    org.jivesoftware.smack.packet.IQ$Type GET -> a
    org.jivesoftware.smack.packet.IQ$Type SET -> b
    org.jivesoftware.smack.packet.IQ$Type RESULT -> c
    org.jivesoftware.smack.packet.IQ$Type ERROR -> d
    java.lang.String value -> e
    org.jivesoftware.smack.packet.IQ$Type fromString(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Message -> org.b.a.c.h:
    org.jivesoftware.smack.packet.Message$Type type -> a
    java.lang.String thread -> b
    java.lang.String language -> c
    java.util.Set subjects -> d
    java.util.Set bodies -> e
    void setType(org.jivesoftware.smack.packet.Message$Type) -> a
    java.lang.String getSubject(java.lang.String) -> a
    org.jivesoftware.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> e
    java.util.Collection getSubjects() -> a
    org.jivesoftware.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> a
    java.lang.String getBody(java.lang.String) -> b
    org.jivesoftware.smack.packet.Message$Body getMessageBody(java.lang.String) -> f
    java.util.Collection getBodies() -> b
    org.jivesoftware.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> b
    void setThread(java.lang.String) -> c
    java.lang.String getLanguage() -> c
    void setLanguage(java.lang.String) -> d
    java.lang.String determineLanguage(java.lang.String) -> g
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.Message$Body -> org.b.a.c.i:
    java.lang.String message -> a
    java.lang.String language -> b
    java.lang.String getLanguage() -> a
    java.lang.String getMessage() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String access$0(org.jivesoftware.smack.packet.Message$Body) -> a
    java.lang.String access$1(org.jivesoftware.smack.packet.Message$Body) -> b
org.jivesoftware.smack.packet.Message$Subject -> org.b.a.c.j:
    java.lang.String subject -> a
    java.lang.String language -> b
    java.lang.String getLanguage() -> a
    java.lang.String getSubject() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String access$0(org.jivesoftware.smack.packet.Message$Subject) -> a
    java.lang.String access$1(org.jivesoftware.smack.packet.Message$Subject) -> b
org.jivesoftware.smack.packet.Message$Type -> org.b.a.c.k:
    org.jivesoftware.smack.packet.Message$Type normal -> a
    org.jivesoftware.smack.packet.Message$Type chat -> b
    org.jivesoftware.smack.packet.Message$Type groupchat -> c
    org.jivesoftware.smack.packet.Message$Type headline -> d
    org.jivesoftware.smack.packet.Message$Type error -> e
    org.jivesoftware.smack.packet.Message$Type[] ENUM$VALUES -> f
    org.jivesoftware.smack.packet.Message$Type fromString(java.lang.String) -> a
    org.jivesoftware.smack.packet.Message$Type[] values() -> values
    org.jivesoftware.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Packet -> org.b.a.c.l:
    java.lang.String DEFAULT_LANGUAGE -> DEFAULT_LANGUAGE
    java.lang.String DEFAULT_XML_NS -> DEFAULT_XML_NS
    java.lang.String ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.lang.String prefix -> prefix
    long id -> id
    java.lang.String xmlns -> xmlns
    java.lang.String packetID -> packetID
    java.lang.String to -> to
    java.lang.String from -> from
    java.util.List packetExtensions -> packetExtensions
    java.util.Map properties -> properties
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.String nextID() -> nextID
    void setDefaultXmlns(java.lang.String) -> setDefaultXmlns
    java.lang.String getPacketID() -> getPacketID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    org.jivesoftware.smack.packet.XMPPError getError() -> getError
    void setError(org.jivesoftware.smack.packet.XMPPError) -> setError
    java.util.Collection getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String) -> getExtension
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void removeExtension(org.jivesoftware.smack.packet.PacketExtension) -> removeExtension
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void deleteProperty(java.lang.String) -> deleteProperty
    java.util.Collection getPropertyNames() -> getPropertyNames
    java.lang.String toXML() -> toXML
    java.lang.String getExtensionsXML() -> getExtensionsXML
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getDefaultLanguage() -> getDefaultLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.PacketExtension -> org.b.a.c.m:
    java.lang.String getElementName() -> a
    java.lang.String getNamespace() -> b
    java.lang.String toXML() -> c
org.jivesoftware.smack.packet.Presence -> org.b.a.c.n:
    org.jivesoftware.smack.packet.Presence$Type type -> a
    java.lang.String status -> b
    int priority -> c
    org.jivesoftware.smack.packet.Presence$Mode mode -> d
    java.lang.String language -> e
    org.jivesoftware.smack.packet.Presence$Type getType() -> a
    void setType(org.jivesoftware.smack.packet.Presence$Type) -> a
    java.lang.String getStatus() -> b
    void setStatus(java.lang.String) -> a
    void setPriority(int) -> a
    void setMode(org.jivesoftware.smack.packet.Presence$Mode) -> a
    java.lang.String getLanguage() -> c
    void setLanguage(java.lang.String) -> b
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Presence$Mode -> org.b.a.c.o:
    org.jivesoftware.smack.packet.Presence$Mode chat -> a
    org.jivesoftware.smack.packet.Presence$Mode available -> b
    org.jivesoftware.smack.packet.Presence$Mode away -> c
    org.jivesoftware.smack.packet.Presence$Mode xa -> d
    org.jivesoftware.smack.packet.Presence$Mode dnd -> e
    org.jivesoftware.smack.packet.Presence$Mode[] ENUM$VALUES -> f
    org.jivesoftware.smack.packet.Presence$Mode[] values() -> values
    org.jivesoftware.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Presence$Type -> org.b.a.c.p:
    org.jivesoftware.smack.packet.Presence$Type available -> a
    org.jivesoftware.smack.packet.Presence$Type unavailable -> b
    org.jivesoftware.smack.packet.Presence$Type subscribe -> c
    org.jivesoftware.smack.packet.Presence$Type subscribed -> d
    org.jivesoftware.smack.packet.Presence$Type unsubscribe -> e
    org.jivesoftware.smack.packet.Presence$Type unsubscribed -> f
    org.jivesoftware.smack.packet.Presence$Type error -> g
    org.jivesoftware.smack.packet.Presence$Type[] ENUM$VALUES -> h
    org.jivesoftware.smack.packet.Presence$Type[] values() -> values
    org.jivesoftware.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Registration -> org.b.a.c.q:
    java.lang.String instructions -> a
    java.util.Map attributes -> b
    java.util.List requiredFields -> c
    boolean registered -> d
    boolean remove -> e
    void setInstructions(java.lang.String) -> a
    void addRequiredField(java.lang.String) -> b
    void addAttribute(java.lang.String,java.lang.String) -> a
    void setRegistered(boolean) -> a
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket -> org.b.a.c.r:
    java.util.List rosterItems -> a
    java.lang.String version -> b
    void addRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item) -> a
    java.lang.String getVersion() -> a
    void setVersion(java.lang.String) -> a
    java.util.Collection getRosterItems() -> b
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket$Item -> org.b.a.c.s:
    java.lang.String user -> a
    java.lang.String name -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType itemType -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus itemStatus -> d
    java.util.Set groupNames -> e
    java.lang.String getUser() -> a
    java.lang.String getName() -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType getItemType() -> c
    void setItemType(org.jivesoftware.smack.packet.RosterPacket$ItemType) -> a
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getItemStatus() -> d
    void setItemStatus(org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> a
    java.util.Set getGroupNames() -> e
    void addGroupName(java.lang.String) -> a
    java.lang.String toXML() -> f
org.jivesoftware.smack.packet.RosterPacket$ItemStatus -> org.b.a.c.t:
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus SUBSCRIPTION_PENDING -> a
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus UNSUBSCRIPTION_PENDING -> b
    java.lang.String value -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus fromString(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.RosterPacket$ItemType -> org.b.a.c.u:
    org.jivesoftware.smack.packet.RosterPacket$ItemType none -> a
    org.jivesoftware.smack.packet.RosterPacket$ItemType to -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType from -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemType both -> d
    org.jivesoftware.smack.packet.RosterPacket$ItemType remove -> e
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] ENUM$VALUES -> f
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] values() -> values
    org.jivesoftware.smack.packet.RosterPacket$ItemType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Session -> org.b.a.c.v:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.StreamError -> org.b.a.c.w:
    java.lang.String code -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.XMPPError -> org.b.a.c.x:
    int code -> a
    org.jivesoftware.smack.packet.XMPPError$Type type -> b
    java.lang.String condition -> c
    java.lang.String message -> d
    java.util.List applicationExtensions -> e
    void init(org.jivesoftware.smack.packet.XMPPError$Condition) -> a
    java.lang.String toXML() -> a
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> b
org.jivesoftware.smack.packet.XMPPError$Condition -> org.b.a.c.y:
    org.jivesoftware.smack.packet.XMPPError$Condition interna_server_error -> a
    org.jivesoftware.smack.packet.XMPPError$Condition forbidden -> b
    org.jivesoftware.smack.packet.XMPPError$Condition bad_request -> c
    org.jivesoftware.smack.packet.XMPPError$Condition conflict -> d
    org.jivesoftware.smack.packet.XMPPError$Condition feature_not_implemented -> e
    org.jivesoftware.smack.packet.XMPPError$Condition gone -> f
    org.jivesoftware.smack.packet.XMPPError$Condition item_not_found -> g
    org.jivesoftware.smack.packet.XMPPError$Condition jid_malformed -> h
    org.jivesoftware.smack.packet.XMPPError$Condition no_acceptable -> i
    org.jivesoftware.smack.packet.XMPPError$Condition not_allowed -> j
    org.jivesoftware.smack.packet.XMPPError$Condition not_authorized -> k
    org.jivesoftware.smack.packet.XMPPError$Condition payment_required -> l
    org.jivesoftware.smack.packet.XMPPError$Condition recipient_unavailable -> m
    org.jivesoftware.smack.packet.XMPPError$Condition redirect -> n
    org.jivesoftware.smack.packet.XMPPError$Condition registration_required -> o
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_error -> p
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_not_found -> q
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_timeout -> r
    org.jivesoftware.smack.packet.XMPPError$Condition resource_constraint -> s
    org.jivesoftware.smack.packet.XMPPError$Condition service_unavailable -> t
    org.jivesoftware.smack.packet.XMPPError$Condition subscription_required -> u
    org.jivesoftware.smack.packet.XMPPError$Condition undefined_condition -> v
    org.jivesoftware.smack.packet.XMPPError$Condition unexpected_request -> w
    org.jivesoftware.smack.packet.XMPPError$Condition request_timeout -> x
    java.lang.String value -> y
    java.lang.String toString() -> toString
    java.lang.String access$0(org.jivesoftware.smack.packet.XMPPError$Condition) -> a
org.jivesoftware.smack.packet.XMPPError$ErrorSpecification -> org.b.a.c.z:
    int code -> a
    org.jivesoftware.smack.packet.XMPPError$Type type -> b
    org.jivesoftware.smack.packet.XMPPError$Condition condition -> c
    java.util.Map instances -> d
    java.util.Map errorSpecifications() -> c
    org.jivesoftware.smack.packet.XMPPError$ErrorSpecification specFor(org.jivesoftware.smack.packet.XMPPError$Condition) -> a
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> a
    int getCode() -> b
org.jivesoftware.smack.packet.XMPPError$Type -> org.b.a.c.aa:
    org.jivesoftware.smack.packet.XMPPError$Type WAIT -> a
    org.jivesoftware.smack.packet.XMPPError$Type CANCEL -> b
    org.jivesoftware.smack.packet.XMPPError$Type MODIFY -> c
    org.jivesoftware.smack.packet.XMPPError$Type AUTH -> d
    org.jivesoftware.smack.packet.XMPPError$Type CONTINUE -> e
    org.jivesoftware.smack.packet.XMPPError$Type[] ENUM$VALUES -> f
    org.jivesoftware.smack.packet.XMPPError$Type[] values() -> values
    org.jivesoftware.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.provider.IQProvider -> org.b.a.d.a:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smack.provider.PacketExtensionProvider -> org.b.a.d.b:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> a
org.jivesoftware.smack.provider.ProviderManager -> org.b.a.d.c:
    org.jivesoftware.smack.provider.ProviderManager instance -> a
    java.util.Map extensionProviders -> b
    java.util.Map iqProviders -> c
    org.jivesoftware.smack.provider.ProviderManager getInstance() -> a
    void initialize() -> b
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> a
    void addIQProvider(java.lang.String,java.lang.String,java.lang.Object) -> a
    java.lang.Object getExtensionProvider(java.lang.String,java.lang.String) -> b
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> c
    java.lang.ClassLoader[] getClassLoaders() -> c
org.jivesoftware.smack.proxy.DirectSocketFactory -> org.b.a.e.a:
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
org.jivesoftware.smack.proxy.HTTPProxySocketFactory -> org.b.a.e.b:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    java.util.regex.Pattern RESPONSE_PATTERN -> b
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket httpProxifiedSocket(java.lang.String,int) -> a
org.jivesoftware.smack.proxy.ProxyException -> org.b.a.e.c:
org.jivesoftware.smack.proxy.ProxyInfo -> org.b.a.e.d:
    java.lang.String proxyAddress -> a
    int proxyPort -> b
    java.lang.String proxyUsername -> c
    java.lang.String proxyPassword -> d
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType proxyType -> e
    org.jivesoftware.smack.proxy.ProxyInfo forDefaultProxy() -> a
    java.lang.String getProxyAddress() -> b
    int getProxyPort() -> c
    java.lang.String getProxyUsername() -> d
    java.lang.String getProxyPassword() -> e
    javax.net.SocketFactory getSocketFactory() -> f
org.jivesoftware.smack.proxy.ProxyInfo$ProxyType -> org.b.a.e.e:
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType NONE -> a
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType HTTP -> b
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> c
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> d
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] ENUM$VALUES -> e
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.proxy.Socks4ProxySocketFactory -> org.b.a.e.f:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks4ProxifiedSocket(java.lang.String,int) -> a
org.jivesoftware.smack.proxy.Socks5ProxySocketFactory -> org.b.a.e.g:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks5ProxifiedSocket(java.lang.String,int) -> a
    void fill(java.io.InputStream,byte[],int) -> a
org.jivesoftware.smack.sasl.SASLAnonymous -> org.b.a.f.a:
    java.lang.String getName() -> a
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    void authenticate() -> b
    void challengeReceived(java.lang.String) -> a
org.jivesoftware.smack.sasl.SASLCramMD5Mechanism -> org.b.a.f.b:
    java.lang.String getName() -> a
org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism -> org.b.a.f.c:
    java.lang.String getName() -> a
org.jivesoftware.smack.sasl.SASLExternalMechanism -> org.b.a.f.d:
    java.lang.String getName() -> a
org.jivesoftware.smack.sasl.SASLGSSAPIMechanism -> org.b.a.f.e:
    java.lang.String getName() -> a
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
org.jivesoftware.smack.sasl.SASLMechanism -> org.b.a.f.f:
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> e
    org.apache.harmony.javax.security.sasl.SaslClient sc -> a
    java.lang.String authenticationId -> b
    java.lang.String password -> c
    java.lang.String hostname -> d
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    void authenticate() -> b
    void challengeReceived(java.lang.String) -> a
    java.lang.String getName() -> a
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> c
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> a
org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism -> org.b.a.f.g:
    java.lang.String name -> b
    java.lang.String authenticationText -> c
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> a
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Challenge -> org.b.a.f.h:
    java.lang.String data -> a
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Failure -> org.b.a.f.i:
    java.lang.String condition -> a
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Response -> org.b.a.f.j:
    java.lang.String authenticationText -> b
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> a
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Success -> org.b.a.f.k:
    java.lang.String data -> a
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLPlainMechanism -> org.b.a.f.l:
    java.lang.String getName() -> a
org.jivesoftware.smack.util.Base64 -> org.b.a.g.a:
    byte[] _STANDARD_ALPHABET -> a
    byte[] _STANDARD_DECODABET -> b
    byte[] _URL_SAFE_ALPHABET -> c
    byte[] _URL_SAFE_DECODABET -> d
    byte[] _ORDERED_ALPHABET -> e
    byte[] _ORDERED_DECODABET -> f
    byte[] getAlphabet(int) -> c
    byte[] getDecodabet(int) -> d
    byte[] encode3to4(byte[],byte[],int,int) -> b
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> a
    java.lang.String encodeBytes(byte[]) -> a
    java.lang.String encodeBytes(byte[],int) -> a
    java.lang.String encodeBytes(byte[],int,int,int) -> a
    int decode4to3(byte[],int,byte[],int,int) -> b
    byte[] decode(byte[],int,int,int) -> b
    byte[] decode(java.lang.String) -> a
    byte[] decode(java.lang.String,int) -> a
    byte[] access$0(int) -> a
    byte[] access$1(int) -> b
    int access$3(byte[],int,byte[],int,int) -> a
    byte[] access$4(byte[],byte[],int,int) -> a
org.jivesoftware.smack.util.Base64$OutputStream -> org.b.a.g.b:
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
    int bufferLength -> d
    int lineLength -> e
    boolean breakLines -> f
    byte[] b4 -> g
    boolean suspendEncoding -> h
    int options -> i
    byte[] alphabet -> j
    byte[] decodabet -> k
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> a
    void close() -> close
org.jivesoftware.smack.util.ObservableReader -> org.b.a.g.c:
    java.io.Reader wrappedReader -> a
    java.util.List listeners -> b
    int read(char[],int,int) -> read
    void close() -> close
    int read() -> read
    int read(char[]) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void addReaderListener(org.jivesoftware.smack.util.ReaderListener) -> a
    void removeReaderListener(org.jivesoftware.smack.util.ReaderListener) -> b
org.jivesoftware.smack.util.ObservableWriter -> org.b.a.g.d:
    java.io.Writer wrappedWriter -> a
    java.util.List listeners -> b
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void notifyListeners(java.lang.String) -> a
    void addWriterListener(org.jivesoftware.smack.util.WriterListener) -> a
    void removeWriterListener(org.jivesoftware.smack.util.WriterListener) -> b
org.jivesoftware.smack.util.PacketParserUtils -> org.b.a.g.e:
    org.jivesoftware.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> i
    org.jivesoftware.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> b
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.Connection) -> a
    org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> j
    org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser) -> k
    org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser) -> l
    org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> m
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> c
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> d
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> e
    org.jivesoftware.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> f
    org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> g
    org.jivesoftware.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> h
    org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> n
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> a
    java.lang.Object decode(java.lang.Class,java.lang.String) -> a
org.jivesoftware.smack.util.PacketParserUtils$1 -> org.b.a.g.f:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$2 -> org.b.a.g.g:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.ReaderListener -> org.b.a.g.h:
    void read(java.lang.String) -> a
org.jivesoftware.smack.util.StringUtils -> org.b.a.g.i:
    char[] QUOTE_ENCODE -> a
    char[] APOS_ENCODE -> b
    char[] AMP_ENCODE -> c
    char[] LT_ENCODE -> d
    char[] GT_ENCODE -> e
    java.security.MessageDigest digest -> f
    java.util.Random randGen -> g
    char[] numbersAndLetters -> h
    java.lang.String parseName(java.lang.String) -> a
    java.lang.String parseServer(java.lang.String) -> b
    java.lang.String parseResource(java.lang.String) -> c
    java.lang.String parseBareAddress(java.lang.String) -> d
    java.lang.String escapeForXML(java.lang.String) -> e
    java.lang.String hash(java.lang.String) -> f
    java.lang.String encodeHex(byte[]) -> a
    java.lang.String encodeBase64(byte[]) -> b
    java.lang.String encodeBase64(byte[],boolean) -> a
    java.lang.String encodeBase64(byte[],int,int,boolean) -> a
    byte[] decodeBase64(java.lang.String) -> g
    java.lang.String randomString(int) -> a
org.jivesoftware.smack.util.WriterListener -> org.b.a.g.j:
    void write(java.lang.String) -> a
